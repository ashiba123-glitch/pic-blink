

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 20 17:24:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 17/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4580 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _RC2	set	31762
    49   000000                     _RC1	set	31761
    50   000000                     _TRISC	set	3988
    51   000000                     _TRISD	set	3989
    52   000000                     _RC0	set	31760
    53   000000                     _RCSTA	set	4011
    54   000000                     _TXSTA	set	4012
    55   000000                     _RCIF	set	31989
    56   000000                     _RCREG	set	4014
    57   000000                     _SPBRG	set	4015
    58   000000                     _PORTD	set	3971
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63   00070E                     __pcinit:
    64                           	callstack 0
    65   00070E                     start_initialization:
    66                           	callstack 0
    67   00070E                     __initialization:
    68                           	callstack 0
    69   00070E                     end_of_initialization:
    70                           	callstack 0
    71   00070E                     __end_of__initialization:
    72                           	callstack 0
    73   00070E  0100               	movlb	0
    74   000710  EF61  F003         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMRAM
    77   000001                     __pcstackCOMRAM:
    78                           	callstack 0
    79   000001                     cmd@a:
    80                           	callstack 0
    81   000001                     data@b:
    82                           	callstack 0
    83                           
    84                           ; 1 bytes @ 0x0
    85   000001                     	ds	1
    86   000002                     cmd@i:
    87                           	callstack 0
    88   000002                     data@i:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x1
    92   000002                     	ds	2
    93   000004                     cmd@i_54:
    94                           	callstack 0
    95   000004                     data@i_58:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x3
    99   000004                     	ds	2
   100   000006                     main@w:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x5
   104   000006                     	ds	1
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 14 in file "eusartreceptionnew.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  w               1    5[COMRAM] unsigned char 
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   125 ;;      Params:         0       0       0       0       0       0       0
   126 ;;      Locals:         1       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0
   128 ;;      Totals:         1       0       0       0       0       0       0
   129 ;;Total ram usage:        1 bytes
   130 ;; Hardware stack levels required when called: 1
   131 ;; This function calls:
   132 ;;		_cmd
   133 ;;		_data
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140   0006C2                     __ptext0:
   141                           	callstack 0
   142   0006C2                     _main:
   143                           	callstack 30
   144   0006C2                     
   145                           ;eusartreceptionnew.c: 15:     TRISD=0X00;
   146   0006C2  0E00               	movlw	0
   147   0006C4  6E95               	movwf	149,c	;volatile
   148                           
   149                           ;eusartreceptionnew.c: 16:     TRISC=0X80;
   150   0006C6  0E80               	movlw	128
   151   0006C8  6E94               	movwf	148,c	;volatile
   152                           
   153                           ;eusartreceptionnew.c: 17:     TXSTA=0X24;
   154   0006CA  0E24               	movlw	36
   155   0006CC  6EAC               	movwf	172,c	;volatile
   156                           
   157                           ;eusartreceptionnew.c: 18:     RCSTA=0X90;
   158   0006CE  0E90               	movlw	144
   159   0006D0  6EAB               	movwf	171,c	;volatile
   160                           
   161                           ;eusartreceptionnew.c: 19:     SPBRG=129;
   162   0006D2  0E81               	movlw	129
   163   0006D4  6EAF               	movwf	175,c	;volatile
   164   0006D6                     
   165                           ;eusartreceptionnew.c: 20:      char w;;eusartreceptionnew.c: 21:     cmd(0x01);
   166   0006D6  0E01               	movlw	1
   167   0006D8  EC31  F003         	call	_cmd
   168   0006DC                     
   169                           ;eusartreceptionnew.c: 22:     cmd(0x0f);
   170   0006DC  0E0F               	movlw	15
   171   0006DE  EC31  F003         	call	_cmd
   172   0006E2                     
   173                           ;eusartreceptionnew.c: 23:     cmd(0x80);
   174   0006E2  0E80               	movlw	128
   175   0006E4  EC31  F003         	call	_cmd
   176   0006E8                     
   177                           ;eusartreceptionnew.c: 24:     cmd(0x06);
   178   0006E8  0E06               	movlw	6
   179   0006EA  EC31  F003         	call	_cmd
   180   0006EE                     l32:
   181   0006EE  AA9E               	btfss	3998,5,c	;volatile
   182   0006F0  EF7C  F003         	goto	u51
   183   0006F4  EF7E  F003         	goto	u50
   184   0006F8                     u51:
   185   0006F8  EF77  F003         	goto	l32
   186   0006FC                     u50:
   187   0006FC                     
   188                           ;eusartreceptionnew.c: 28:     w=RCREG;
   189   0006FC  CFAE F006          	movff	4014,main@w	;volatile
   190   000700                     
   191                           ;eusartreceptionnew.c: 29:     data(w);
   192   000700  5006               	movf	main@w^0,w,c
   193   000702  EC01  F003         	call	_data
   194   000706  EF77  F003         	goto	l32
   195   00070A  EF00  F000         	goto	start
   196   00070E                     __end_of_main:
   197                           	callstack 0
   198                           
   199 ;; *************** function _data *****************
   200 ;; Defined at:
   201 ;;		line 43 in file "eusartreceptionnew.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;  b               1    wreg     unsigned char 
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  b               1    0[COMRAM] unsigned char 
   206 ;;  i               2    3[COMRAM] int 
   207 ;;  i               2    1[COMRAM] int 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   217 ;;      Params:         0       0       0       0       0       0       0
   218 ;;      Locals:         5       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0
   220 ;;      Totals:         5       0       0       0       0       0       0
   221 ;;Total ram usage:        5 bytes
   222 ;; Hardware stack levels used: 1
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		_main
   227 ;;		_display
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text1
   232   000602                     __ptext1:
   233                           	callstack 0
   234   000602                     _data:
   235                           	callstack 30
   236                           
   237                           ;incstack = 0
   238                           ;data@b stored from wreg
   239   000602  6E01               	movwf	data@b^0,c
   240   000604                     
   241                           ;eusartreceptionnew.c: 43: void data(unsigned char b );eusartreceptionnew.c: 44: {;eusar
      +                          treceptionnew.c: 45:     RC0=1;
   242   000604  8082               	bsf	3970,0,c	;volatile
   243                           
   244                           ;eusartreceptionnew.c: 46:     RC1=0;
   245   000606  9282               	bcf	3970,1,c	;volatile
   246   000608                     
   247                           ;eusartreceptionnew.c: 47:     PORTD=b;
   248   000608  C001  FF83         	movff	data@b,3971	;volatile
   249   00060C                     
   250                           ;eusartreceptionnew.c: 48:     RC2=1;
   251   00060C  8482               	bsf	3970,2,c	;volatile
   252   00060E                     
   253                           ;eusartreceptionnew.c: 49:     for(int i=0;i<=100;i++);
   254   00060E  0E00               	movlw	0
   255   000610  6E03               	movwf	(data@i+1)^0,c
   256   000612  0E00               	movlw	0
   257   000614  6E02               	movwf	data@i^0,c
   258   000616                     l771:
   259   000616  4A02               	infsnz	data@i^0,f,c
   260   000618  2A03               	incf	(data@i+1)^0,f,c
   261   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   262   00061C  EF19  F003         	goto	u31
   263   000620  5003               	movf	(data@i+1)^0,w,c
   264   000622  E109               	bnz	u30
   265   000624  0E65               	movlw	101
   266   000626  5C02               	subwf	data@i^0,w,c
   267   000628  A0D8               	btfss	status,0,c
   268   00062A  EF19  F003         	goto	u31
   269   00062E  EF1B  F003         	goto	u30
   270   000632                     u31:
   271   000632  EF0B  F003         	goto	l771
   272   000636                     u30:
   273   000636                     
   274                           ;eusartreceptionnew.c: 50:     RC2=0;
   275   000636  9482               	bcf	3970,2,c	;volatile
   276   000638                     
   277                           ;eusartreceptionnew.c: 51:     for(int i=0;i<=5000;i++);
   278   000638  0E00               	movlw	0
   279   00063A  6E05               	movwf	(data@i_58+1)^0,c
   280   00063C  0E00               	movlw	0
   281   00063E  6E04               	movwf	data@i_58^0,c
   282   000640                     l781:
   283   000640  4A04               	infsnz	data@i_58^0,f,c
   284   000642  2A05               	incf	(data@i_58+1)^0,f,c
   285   000644  BE05               	btfsc	(data@i_58+1)^0,7,c
   286   000646  EF2E  F003         	goto	u41
   287   00064A  0E89               	movlw	137
   288   00064C  5C04               	subwf	data@i_58^0,w,c
   289   00064E  0E13               	movlw	19
   290   000650  5805               	subwfb	(data@i_58+1)^0,w,c
   291   000652  A0D8               	btfss	status,0,c
   292   000654  EF2E  F003         	goto	u41
   293   000658  EF30  F003         	goto	u40
   294   00065C                     u41:
   295   00065C  EF20  F003         	goto	l781
   296   000660                     u40:
   297   000660  0012               	return		;funcret
   298   000662                     __end_of_data:
   299                           	callstack 0
   300                           
   301 ;; *************** function _cmd *****************
   302 ;; Defined at:
   303 ;;		line 33 in file "eusartreceptionnew.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;  a               1    wreg     unsigned char 
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  a               1    0[COMRAM] unsigned char 
   308 ;;  i               2    3[COMRAM] int 
   309 ;;  i               2    1[COMRAM] int 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   319 ;;      Params:         0       0       0       0       0       0       0
   320 ;;      Locals:         5       0       0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0
   322 ;;      Totals:         5       0       0       0       0       0       0
   323 ;;Total ram usage:        5 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text2
   333   000662                     __ptext2:
   334                           	callstack 0
   335   000662                     _cmd:
   336                           	callstack 30
   337                           
   338                           ;incstack = 0
   339                           ;cmd@a stored from wreg
   340   000662  6E01               	movwf	cmd@a^0,c
   341   000664                     
   342                           ;eusartreceptionnew.c: 33: void cmd(unsigned char a );eusartreceptionnew.c: 34: {;eusart
      +                          receptionnew.c: 35:     RC0=0;
   343   000664  9082               	bcf	3970,0,c	;volatile
   344                           
   345                           ;eusartreceptionnew.c: 36:     RC1=0;
   346   000666  9282               	bcf	3970,1,c	;volatile
   347   000668                     
   348                           ;eusartreceptionnew.c: 37:     PORTD=a;
   349   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   350   00066C                     
   351                           ;eusartreceptionnew.c: 38:     RC2=1;
   352   00066C  8482               	bsf	3970,2,c	;volatile
   353   00066E                     
   354                           ;eusartreceptionnew.c: 39:     for(int i=0;i<=100;i++);
   355   00066E  0E00               	movlw	0
   356   000670  6E03               	movwf	(cmd@i+1)^0,c
   357   000672  0E00               	movlw	0
   358   000674  6E02               	movwf	cmd@i^0,c
   359   000676                     l745:
   360   000676  4A02               	infsnz	cmd@i^0,f,c
   361   000678  2A03               	incf	(cmd@i+1)^0,f,c
   362   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   363   00067C  EF49  F003         	goto	u11
   364   000680  5003               	movf	(cmd@i+1)^0,w,c
   365   000682  E109               	bnz	u10
   366   000684  0E65               	movlw	101
   367   000686  5C02               	subwf	cmd@i^0,w,c
   368   000688  A0D8               	btfss	status,0,c
   369   00068A  EF49  F003         	goto	u11
   370   00068E  EF4B  F003         	goto	u10
   371   000692                     u11:
   372   000692  EF3B  F003         	goto	l745
   373   000696                     u10:
   374   000696                     
   375                           ;eusartreceptionnew.c: 40:     RC2=0;
   376   000696  9482               	bcf	3970,2,c	;volatile
   377   000698                     
   378                           ;eusartreceptionnew.c: 41:     for(int i=0;i<=5000;i++);
   379   000698  0E00               	movlw	0
   380   00069A  6E05               	movwf	(cmd@i_54+1)^0,c
   381   00069C  0E00               	movlw	0
   382   00069E  6E04               	movwf	cmd@i_54^0,c
   383   0006A0                     l755:
   384   0006A0  4A04               	infsnz	cmd@i_54^0,f,c
   385   0006A2  2A05               	incf	(cmd@i_54+1)^0,f,c
   386   0006A4  BE05               	btfsc	(cmd@i_54+1)^0,7,c
   387   0006A6  EF5E  F003         	goto	u21
   388   0006AA  0E89               	movlw	137
   389   0006AC  5C04               	subwf	cmd@i_54^0,w,c
   390   0006AE  0E13               	movlw	19
   391   0006B0  5805               	subwfb	(cmd@i_54+1)^0,w,c
   392   0006B2  A0D8               	btfss	status,0,c
   393   0006B4  EF5E  F003         	goto	u21
   394   0006B8  EF60  F003         	goto	u20
   395   0006BC                     u21:
   396   0006BC  EF50  F003         	goto	l755
   397   0006C0                     u20:
   398   0006C0  0012               	return		;funcret
   399   0006C2                     __end_of_cmd:
   400                           	callstack 0
   401                           
   402                           	psect	smallconst
   403   000600                     __psmallconst:
   404                           	callstack 0
   405   000600  00                 	db	0
   406   000601  00                 	db	0	; dummy byte at the end
   407   000000                     
   408                           	psect	rparam
   409   000000                     tosu	equ	0xFFF
   410                           tosh	equ	0xFFE
   411                           tosl	equ	0xFFD
   412                           stkptr	equ	0xFFC
   413                           pclatu	equ	0xFFB
   414                           pclath	equ	0xFFA
   415                           pcl	equ	0xFF9
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           prodh	equ	0xFF4
   421                           prodl	equ	0xFF3
   422                           indf0	equ	0xFEF
   423                           postinc0	equ	0xFEE
   424                           postdec0	equ	0xFED
   425                           preinc0	equ	0xFEC
   426                           plusw0	equ	0xFEB
   427                           fsr0h	equ	0xFEA
   428                           fsr0l	equ	0xFE9
   429                           wreg	equ	0xFE8
   430                           indf1	equ	0xFE7
   431                           postinc1	equ	0xFE6
   432                           postdec1	equ	0xFE5
   433                           preinc1	equ	0xFE4
   434                           plusw1	equ	0xFE3
   435                           fsr1h	equ	0xFE2
   436                           fsr1l	equ	0xFE1
   437                           bsr	equ	0xFE0
   438                           indf2	equ	0xFDF
   439                           postinc2	equ	0xFDE
   440                           postdec2	equ	0xFDD
   441                           preinc2	equ	0xFDC
   442                           plusw2	equ	0xFDB
   443                           fsr2h	equ	0xFDA
   444                           fsr2l	equ	0xFD9
   445                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _main->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     165
                                              5 COMRAM     1     1      0
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (1) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        50      0       0      16        0.0%
BITBIGSFRhhl         1      0       0      17        0.0%
BITBIGSFRhlh         C      0       0      18        0.0%
BITBIGSFRhll         8      0       0      19        0.0%
BITBIGSFRlh         10      0       0      20        0.0%
BITBIGSFRll        282      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 20 17:24:26 2024

                     l32 06EE                       l41 0696                       l34 06FC  
                     l51 0660                       l44 06C0                       l48 0636  
                     u10 0696                       u11 0692                       u20 06C0  
                     u21 06BC                       u30 0636                       u31 0632  
                     u40 0660                       u41 065C                       u50 06FC  
                     u51 06F8                      l733 0664                      l735 0668  
                    l745 0676                      l737 066C                      l761 0608  
                    l755 06A0                      l747 067A                      l739 066E  
                    l771 0616                      l763 060C                      l757 06A4  
                    l749 0698                      l781 0640                      l773 061A  
                    l765 060E                      l783 0644                      l775 0638  
                    l759 0604                      l791 06E2                      l793 06E8  
                    l785 06C2                      l795 0700                      l787 06D6  
                    l789 06DC                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _cmd 0662                     ?_cmd 0001  
                   _RCIF 7CF5                     _data 0602                     cmd@a 0001  
                   cmd@i 0002                     _main 06C2                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _RCREG 0FAE                    _RCSTA 0FAB  
                  _SPBRG 0FAF                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    _TXSTA 0FAC                    data@b 0001  
                  data@i 0002                    main@w 0006                    status 0FD8  
        __initialization 070E             __end_of_data 0662             __end_of_main 070E  
                 ??_data 0001                   ??_main 0006            __activetblptr 0000  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 070E            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 070E                  __ramtop 0600                  __ptext0 06C2  
                __ptext1 0602                  __ptext2 0662                  cmd@i_54 0004  
   end_of_initialization 070E      start_initialization 070E              __end_of_cmd 06C2  
            __smallconst 0600                 __Hrparam 0000                 __Lrparam 0000  
               data@i_58 0004                 isa$xinst 0000  
