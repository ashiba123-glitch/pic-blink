

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 10:09:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _TRISC	set	3988
    48   000000                     _RC0	set	31760
    49   000000                     _TRISD	set	3989
    50   000000                     _PORTD	set	3971
    51                           
    52                           ; #config settings
    53                           
    54                           	psect	cinit
    55   000658                     __pcinit:
    56                           	callstack 0
    57   000658                     start_initialization:
    58                           	callstack 0
    59   000658                     __initialization:
    60                           	callstack 0
    61   000658                     end_of_initialization:
    62                           	callstack 0
    63   000658                     __end_of__initialization:
    64                           	callstack 0
    65   000658  0100               	movlb	0
    66   00065A  EF21  F003         	goto	_main	;jump to C main() function
    67                           
    68                           	psect	cstackCOMRAM
    69   000001                     __pcstackCOMRAM:
    70                           	callstack 0
    71   000001                     delay@i:
    72                           	callstack 0
    73                           
    74                           ; 4 bytes @ 0x0
    75   000001                     	ds	4
    76   000005                     
    77                           ; 1 bytes @ 0x4
    78 ;;
    79 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    80 ;;
    81 ;; *************** function _main *****************
    82 ;; Defined at:
    83 ;;		line 11 in file "motorpushbutton.c"
    84 ;; Parameters:    Size  Location     Type
    85 ;;		None
    86 ;; Auto vars:     Size  Location     Type
    87 ;;  count           2    0        int 
    88 ;; Return value:  Size  Location     Type
    89 ;;                  1    wreg      void 
    90 ;; Registers used:
    91 ;;		wreg, status,2, status,0, cstack
    92 ;; Tracked objects:
    93 ;;		On entry : 0/0
    94 ;;		On exit  : 0/0
    95 ;;		Unchanged: 0/0
    96 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    97 ;;      Params:         0       0       0       0       0       0       0
    98 ;;      Locals:         0       0       0       0       0       0       0
    99 ;;      Temps:          0       0       0       0       0       0       0
   100 ;;      Totals:         0       0       0       0       0       0       0
   101 ;;Total ram usage:        0 bytes
   102 ;; Hardware stack levels required when called: 1
   103 ;; This function calls:
   104 ;;		_delay
   105 ;; This function is called by:
   106 ;;		Startup code after reset
   107 ;; This function uses a non-reentrant model
   108 ;;
   109                           
   110                           	psect	text0
   111   000642                     __ptext0:
   112                           	callstack 0
   113   000642                     _main:
   114                           	callstack 30
   115   000642                     
   116                           ;motorpushbutton.c: 13:     TRISC=0X00;
   117   000642  0E00               	movlw	0
   118   000644  6E94               	movwf	148,c	;volatile
   119   000646                     
   120                           ;motorpushbutton.c: 14:     TRISD=0XFF;
   121   000646  6895               	setf	149,c	;volatile
   122   000648                     l715:
   123   000648                     
   124                           ;motorpushbutton.c: 21:             {;motorpushbutton.c: 22:                 PORTD=0X01;
   125   000648  0E01               	movlw	1
   126   00064A  6E83               	movwf	131,c	;volatile
   127   00064C                     
   128                           ;motorpushbutton.c: 23:             delay();
   129   00064C  EC01  F003         	call	_delay	;wreg free
   130   000650  EF24  F003         	goto	l715
   131   000654  EF00  F000         	goto	start
   132   000658                     __end_of_main:
   133                           	callstack 0
   134                           
   135 ;; *************** function _delay *****************
   136 ;; Defined at:
   137 ;;		line 29 in file "motorpushbutton.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;  i               4    0[COMRAM] long 
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   151 ;;      Params:         0       0       0       0       0       0       0
   152 ;;      Locals:         4       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0
   154 ;;      Totals:         4       0       0       0       0       0       0
   155 ;;Total ram usage:        4 bytes
   156 ;; Hardware stack levels used: 1
   157 ;; This function calls:
   158 ;;		Nothing
   159 ;; This function is called by:
   160 ;;		_main
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           	psect	text1
   165   000602                     __ptext1:
   166                           	callstack 0
   167   000602                     _delay:
   168                           	callstack 30
   169   000602                     
   170                           ;motorpushbutton.c: 31:     for(long i=0;i<65000;i++);
   171   000602  0E00               	movlw	0
   172   000604  6E01               	movwf	delay@i^0,c
   173   000606  0E00               	movlw	0
   174   000608  6E02               	movwf	(delay@i+1)^0,c
   175   00060A  0E00               	movlw	0
   176   00060C  6E03               	movwf	(delay@i+2)^0,c
   177   00060E  0E00               	movlw	0
   178   000610  6E04               	movwf	(delay@i+3)^0,c
   179   000612                     l707:
   180   000612  0E01               	movlw	1
   181   000614  2601               	addwf	delay@i^0,f,c
   182   000616  0E00               	movlw	0
   183   000618  2202               	addwfc	(delay@i+1)^0,f,c
   184   00061A  2203               	addwfc	(delay@i+2)^0,f,c
   185   00061C  2204               	addwfc	(delay@i+3)^0,f,c
   186   00061E  BE04               	btfsc	(delay@i+3)^0,7,c
   187   000620  EF1E  F003         	goto	u11
   188   000624  5004               	movf	(delay@i+3)^0,w,c
   189   000626  1003               	iorwf	(delay@i+2)^0,w,c
   190   000628  E10B               	bnz	u10
   191   00062A  0EE8               	movlw	232
   192   00062C  5C01               	subwf	delay@i^0,w,c
   193   00062E  0EFD               	movlw	253
   194   000630  5802               	subwfb	(delay@i+1)^0,w,c
   195   000632  A0D8               	btfss	status,0,c
   196   000634  EF1E  F003         	goto	u11
   197   000638  EF20  F003         	goto	u10
   198   00063C                     u11:
   199   00063C  EF09  F003         	goto	l707
   200   000640                     u10:
   201   000640  0012               	return		;funcret
   202   000642                     __end_of_delay:
   203                           	callstack 0
   204                           
   205                           	psect	smallconst
   206   000600                     __psmallconst:
   207                           	callstack 0
   208   000600  00                 	db	0
   209   000601  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           	psect	rparam
   212   000000                     tosu	equ	0xFFF
   213                           tosh	equ	0xFFE
   214                           tosl	equ	0xFFD
   215                           stkptr	equ	0xFFC
   216                           pclatu	equ	0xFFB
   217                           pclath	equ	0xFFA
   218                           pcl	equ	0xFF9
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           prodh	equ	0xFF4
   224                           prodl	equ	0xFF3
   225                           indf0	equ	0xFEF
   226                           postinc0	equ	0xFEE
   227                           postdec0	equ	0xFED
   228                           preinc0	equ	0xFEC
   229                           plusw0	equ	0xFEB
   230                           fsr0h	equ	0xFEA
   231                           fsr0l	equ	0xFE9
   232                           wreg	equ	0xFE8
   233                           indf1	equ	0xFE7
   234                           postinc1	equ	0xFE6
   235                           postdec1	equ	0xFE5
   236                           preinc1	equ	0xFE4
   237                           plusw1	equ	0xFE3
   238                           fsr1h	equ	0xFE2
   239                           fsr1l	equ	0xFE1
   240                           bsr	equ	0xFE0
   241                           indf2	equ	0xFDF
   242                           postinc2	equ	0xFDE
   243                           postdec2	equ	0xFDD
   244                           preinc2	equ	0xFDC
   245                           plusw2	equ	0xFDB
   246                           fsr2h	equ	0xFDA
   247                           fsr2l	equ	0xFD9
   248                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 10:09:32 2024

                     l25 0640                       u10 0640                       u11 063C  
                    l701 0602                      l711 0646                      l713 0648  
                    l707 0612                      l715 0648                      l717 0648  
                    l709 0642                      l719 064C                      _RC0 7C10  
                   _main 0642                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    _delay 0602                    status 0FD8  
        __initialization 0658             __end_of_main 0658                   ??_main 0005  
          __activetblptr 0000                   ?_delay 0001                   delay@i 0001  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 0658            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_delay 0642                  ??_delay 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0658  
                __ramtop 0600                  __ptext0 0642                  __ptext1 0602  
   end_of_initialization 0658      start_initialization 0658              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
