

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 03 17:05:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     
    50                           	psect	idataCOMRAM
    51   0007A4                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _a
    55   0007A4  3F                 	db	63
    56   0007A5  06                 	db	6
    57   0007A6  5B                 	db	91
    58   0007A7  4F                 	db	79
    59   0007A8  66                 	db	102
    60   0007A9  6D                 	db	109
    61   0007AA  7D                 	db	125
    62   0007AB  07                 	db	7
    63   0007AC  7F                 	db	127
    64   0007AD  6F                 	db	111
    65   000000                     _PORTC	set	3970
    66   000000                     _RB0	set	31752
    67   000000                     _PORTB	set	3969
    68   000000                     _PORTD	set	3971
    69   000000                     _TRISB	set	3987
    70   000000                     _TRISC	set	3988
    71   000000                     _TRISD	set	3989
    72   000000                     _ADCON1	set	4033
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77   00075A                     __pcinit:
    78                           	callstack 0
    79   00075A                     start_initialization:
    80                           	callstack 0
    81   00075A                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (10 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86   00075A  0EA4               	movlw	low __pidataCOMRAM
    87   00075C  6EF6               	movwf	tblptrl,c
    88   00075E  0E07               	movlw	high __pidataCOMRAM
    89   000760  6EF7               	movwf	tblptrh,c
    90   000762  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91   000764  6EF8               	movwf	tblptru,c
    92   000766  EE00  F001         	lfsr	0,__pdataCOMRAM
    93   00076A  EE10 F00A          	lfsr	1,10
    94   00076E                     copy_data0:
    95   00076E  0009               	tblrd		*+
    96   000770  CFF5 FFEE          	movff	tablat,postinc0
    97   000774  50E5               	movf	postdec1,w,c
    98   000776  50E1               	movf	fsr1l,w,c
    99   000778  E1FA               	bnz	copy_data0
   100   00077A                     end_of_initialization:
   101                           	callstack 0
   102   00077A                     __end_of__initialization:
   103                           	callstack 0
   104   00077A  0100               	movlb	0
   105   00077C  EF01  F003         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	dataCOMRAM
   108   000001                     __pdataCOMRAM:
   109                           	callstack 0
   110   000001                     _a:
   111                           	callstack 0
   112   000001                     	ds	10
   113                           
   114                           	psect	cstackCOMRAM
   115   00000B                     __pcstackCOMRAM:
   116                           	callstack 0
   117   00000B                     delay@i:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   00000B                     	ds	2
   122   00000D                     main@i:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x2
   126   00000D                     	ds	2
   127   00000F                     main@j:
   128                           	callstack 0
   129                           
   130                           ; 2 bytes @ 0x4
   131   00000F                     	ds	2
   132   000011                     main@k:
   133                           	callstack 0
   134                           
   135                           ; 2 bytes @ 0x6
   136   000011                     	ds	2
   137   000013                     main@l:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x8
   141   000013                     	ds	2
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 12 in file "7seg.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  l               2    8[COMRAM] int 
   153 ;;  k               2    6[COMRAM] int 
   154 ;;  j               2    4[COMRAM] int 
   155 ;;  i               2    2[COMRAM] int 
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   165 ;;      Params:         0       0       0       0       0       0       0
   166 ;;      Locals:         8       0       0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0
   168 ;;      Totals:         8       0       0       0       0       0       0
   169 ;;Total ram usage:        8 bytes
   170 ;; Hardware stack levels required when called: 1
   171 ;; This function calls:
   172 ;;		_delay
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179   000602                     __ptext0:
   180                           	callstack 0
   181   000602                     _main:
   182                           	callstack 30
   183   000602  0E00               	movlw	0
   184   000604  6E95               	movwf	149,c	;volatile
   185   000606  0E00               	movlw	0
   186   000608  6E94               	movwf	148,c	;volatile
   187   00060A  6893               	setf	147,c	;volatile
   188   00060C  0E00               	movlw	0
   189   00060E  6E83               	movwf	131,c	;volatile
   190   000610  6881               	setf	129,c	;volatile
   191   000612  0E0F               	movlw	15
   192   000614  6EC1               	movwf	193,c	;volatile
   193   000616                     l25:
   194   000616  0E0E               	movlw	14
   195   000618  6E83               	movwf	131,c	;volatile
   196   00061A  5013               	movf	main@l^0,w,c
   197   00061C  0F01               	addlw	low _a
   198   00061E  6ED9               	movwf	fsr2l,c
   199   000620  6ADA               	clrf	fsr2h,c
   200   000622  50DF               	movf	indf2,w,c
   201   000624  6E82               	movwf	130,c	;volatile
   202   000626  ECC0  F003         	call	_delay	;wreg free
   203   00062A  0E0D               	movlw	13
   204   00062C  6E83               	movwf	131,c	;volatile
   205   00062E  5011               	movf	main@k^0,w,c
   206   000630  0F01               	addlw	low _a
   207   000632  6ED9               	movwf	fsr2l,c
   208   000634  6ADA               	clrf	fsr2h,c
   209   000636  50DF               	movf	indf2,w,c
   210   000638  6E82               	movwf	130,c	;volatile
   211   00063A  ECC0  F003         	call	_delay	;wreg free
   212   00063E  0E0B               	movlw	11
   213   000640  6E83               	movwf	131,c	;volatile
   214   000642  500F               	movf	main@j^0,w,c
   215   000644  0F01               	addlw	low _a
   216   000646  6ED9               	movwf	fsr2l,c
   217   000648  6ADA               	clrf	fsr2h,c
   218   00064A  50DF               	movf	indf2,w,c
   219   00064C  6E82               	movwf	130,c	;volatile
   220   00064E  ECC0  F003         	call	_delay	;wreg free
   221   000652  0E07               	movlw	7
   222   000654  6E83               	movwf	131,c	;volatile
   223   000656  500D               	movf	main@i^0,w,c
   224   000658  0F01               	addlw	low _a
   225   00065A  6ED9               	movwf	fsr2l,c
   226   00065C  6ADA               	clrf	fsr2h,c
   227   00065E  50DF               	movf	indf2,w,c
   228   000660  6E82               	movwf	130,c	;volatile
   229   000662  ECC0  F003         	call	_delay	;wreg free
   230   000666  A081               	btfss	3969,0,c	;volatile
   231   000668  EF38  F003         	goto	u21
   232   00066C  EF3A  F003         	goto	u20
   233   000670                     u21:
   234   000670  EF0B  F003         	goto	l25
   235   000674                     u20:
   236   000674  4A0D               	infsnz	main@i^0,f,c
   237   000676  2A0E               	incf	(main@i+1)^0,f,c
   238   000678  0E0A               	movlw	10
   239   00067A  180D               	xorwf	main@i^0,w,c
   240   00067C  100E               	iorwf	(main@i+1)^0,w,c
   241   00067E  A4D8               	btfss	status,2,c
   242   000680  EF44  F003         	goto	u31
   243   000684  EF46  F003         	goto	u30
   244   000688                     u31:
   245   000688  EFA2  F003         	goto	l799
   246   00068C                     u30:
   247   00068C  0E00               	movlw	0
   248   00068E  6E0E               	movwf	(main@i+1)^0,c
   249   000690  0E00               	movlw	0
   250   000692  6E0D               	movwf	main@i^0,c
   251   000694  4A0F               	infsnz	main@j^0,f,c
   252   000696  2A10               	incf	(main@j+1)^0,f,c
   253   000698  0E0A               	movlw	10
   254   00069A  180F               	xorwf	main@j^0,w,c
   255   00069C  1010               	iorwf	(main@j+1)^0,w,c
   256   00069E  A4D8               	btfss	status,2,c
   257   0006A0  EF54  F003         	goto	u41
   258   0006A4  EF56  F003         	goto	u40
   259   0006A8                     u41:
   260   0006A8  EFA2  F003         	goto	l799
   261   0006AC                     u40:
   262   0006AC  0E00               	movlw	0
   263   0006AE  6E10               	movwf	(main@j+1)^0,c
   264   0006B0  0E00               	movlw	0
   265   0006B2  6E0F               	movwf	main@j^0,c
   266   0006B4  4A11               	infsnz	main@k^0,f,c
   267   0006B6  2A12               	incf	(main@k+1)^0,f,c
   268   0006B8  0E0A               	movlw	10
   269   0006BA  1811               	xorwf	main@k^0,w,c
   270   0006BC  1012               	iorwf	(main@k+1)^0,w,c
   271   0006BE  A4D8               	btfss	status,2,c
   272   0006C0  EF64  F003         	goto	u51
   273   0006C4  EF66  F003         	goto	u50
   274   0006C8                     u51:
   275   0006C8  EFA2  F003         	goto	l799
   276   0006CC                     u50:
   277   0006CC  0E00               	movlw	0
   278   0006CE  6E12               	movwf	(main@k+1)^0,c
   279   0006D0  0E00               	movlw	0
   280   0006D2  6E11               	movwf	main@k^0,c
   281   0006D4  4A13               	infsnz	main@l^0,f,c
   282   0006D6  2A14               	incf	(main@l+1)^0,f,c
   283   0006D8  0E0A               	movlw	10
   284   0006DA  1813               	xorwf	main@l^0,w,c
   285   0006DC  1014               	iorwf	(main@l+1)^0,w,c
   286   0006DE  A4D8               	btfss	status,2,c
   287   0006E0  EF74  F003         	goto	u61
   288   0006E4  EF76  F003         	goto	u60
   289   0006E8                     u61:
   290   0006E8  EF78  F003         	goto	l27
   291   0006EC                     u60:
   292   0006EC  EFAB  F003         	goto	l31
   293   0006F0                     l27:
   294   0006F0  EFA2  F003         	goto	l799
   295   0006F4                     l779:
   296   0006F4  0E0E               	movlw	14
   297   0006F6  6E83               	movwf	131,c	;volatile
   298   0006F8  5013               	movf	main@l^0,w,c
   299   0006FA  0F01               	addlw	low _a
   300   0006FC  6ED9               	movwf	fsr2l,c
   301   0006FE  6ADA               	clrf	fsr2h,c
   302   000700  50DF               	movf	indf2,w,c
   303   000702  6E82               	movwf	130,c	;volatile
   304   000704  ECC0  F003         	call	_delay	;wreg free
   305   000708  0E0D               	movlw	13
   306   00070A  6E83               	movwf	131,c	;volatile
   307   00070C  5011               	movf	main@k^0,w,c
   308   00070E  0F01               	addlw	low _a
   309   000710  6ED9               	movwf	fsr2l,c
   310   000712  6ADA               	clrf	fsr2h,c
   311   000714  50DF               	movf	indf2,w,c
   312   000716  6E82               	movwf	130,c	;volatile
   313   000718  ECC0  F003         	call	_delay	;wreg free
   314   00071C  0E0B               	movlw	11
   315   00071E  6E83               	movwf	131,c	;volatile
   316   000720  500F               	movf	main@j^0,w,c
   317   000722  0F01               	addlw	low _a
   318   000724  6ED9               	movwf	fsr2l,c
   319   000726  6ADA               	clrf	fsr2h,c
   320   000728  50DF               	movf	indf2,w,c
   321   00072A  6E82               	movwf	130,c	;volatile
   322   00072C  ECC0  F003         	call	_delay	;wreg free
   323   000730  0E07               	movlw	7
   324   000732  6E83               	movwf	131,c	;volatile
   325   000734  500D               	movf	main@i^0,w,c
   326   000736  0F01               	addlw	low _a
   327   000738  6ED9               	movwf	fsr2l,c
   328   00073A  6ADA               	clrf	fsr2h,c
   329   00073C  50DF               	movf	indf2,w,c
   330   00073E  6E82               	movwf	130,c	;volatile
   331   000740  ECC0  F003         	call	_delay	;wreg free
   332   000744                     l799:
   333   000744  B081               	btfsc	3969,0,c	;volatile
   334   000746  EFA7  F003         	goto	u71
   335   00074A  EFA9  F003         	goto	u70
   336   00074E                     u71:
   337   00074E  EF7A  F003         	goto	l779
   338   000752                     u70:
   339   000752  EF0B  F003         	goto	l25
   340   000756                     l31:
   341   000756  EF00  F000         	goto	start
   342   00075A                     __end_of_main:
   343                           	callstack 0
   344                           
   345 ;; *************** function _delay *****************
   346 ;; Defined at:
   347 ;;		line 87 in file "7seg.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  i               2    0[COMRAM] unsigned int 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   361 ;;      Params:         0       0       0       0       0       0       0
   362 ;;      Locals:         2       0       0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text1
   375   000780                     __ptext1:
   376                           	callstack 0
   377   000780                     _delay:
   378                           	callstack 30
   379   000780  0E00               	movlw	0
   380   000782  6E0C               	movwf	(delay@i+1)^0,c
   381   000784  0E00               	movlw	0
   382   000786  6E0B               	movwf	delay@i^0,c
   383   000788                     l723:
   384   000788  4A0B               	infsnz	delay@i^0,f,c
   385   00078A  2A0C               	incf	(delay@i+1)^0,f,c
   386   00078C  0E89               	movlw	137
   387   00078E  5C0B               	subwf	delay@i^0,w,c
   388   000790  0E13               	movlw	19
   389   000792  580C               	subwfb	(delay@i+1)^0,w,c
   390   000794  A0D8               	btfss	status,0,c
   391   000796  EFCF  F003         	goto	u11
   392   00079A  EFD1  F003         	goto	u10
   393   00079E                     u11:
   394   00079E  EFC4  F003         	goto	l723
   395   0007A2                     u10:
   396   0007A2  0012               	return		;funcret
   397   0007A4                     __end_of_delay:
   398                           	callstack 0
   399                           
   400                           	psect	smallconst
   401   000600                     __psmallconst:
   402                           	callstack 0
   403   000600  00                 	db	0
   404   000601  00                 	db	0	; dummy byte at the end
   405   000000                     
   406                           	psect	rparam
   407   000000                     tosu	equ	0xFFF
   408                           tosh	equ	0xFFE
   409                           tosl	equ	0xFFD
   410                           stkptr	equ	0xFFC
   411                           pclatu	equ	0xFFB
   412                           pclath	equ	0xFFA
   413                           pcl	equ	0xFF9
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           prodh	equ	0xFF4
   419                           prodl	equ	0xFF3
   420                           indf0	equ	0xFEF
   421                           postinc0	equ	0xFEE
   422                           postdec0	equ	0xFED
   423                           preinc0	equ	0xFEC
   424                           plusw0	equ	0xFEB
   425                           fsr0h	equ	0xFEA
   426                           fsr0l	equ	0xFE9
   427                           wreg	equ	0xFE8
   428                           indf1	equ	0xFE7
   429                           postinc1	equ	0xFE6
   430                           postdec1	equ	0xFE5
   431                           preinc1	equ	0xFE4
   432                           plusw1	equ	0xFE3
   433                           fsr1h	equ	0xFE2
   434                           fsr1l	equ	0xFE1
   435                           bsr	equ	0xFE0
   436                           indf2	equ	0xFDF
   437                           postinc2	equ	0xFDE
   438                           postdec2	equ	0xFDD
   439                           preinc2	equ	0xFDC
   440                           plusw2	equ	0xFDB
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     210
                                              2 COMRAM     8     8      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      14       1       21.1%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhl         2B      0       0      17        0.0%
BITBIGSFRlh          F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 03 17:05:47 2024

                      _a 0001                       l31 0756                       l41 07A2  
                     l25 0616                       l27 06F0                       u10 07A2  
                     u11 079E                       u20 0674                       u21 0670  
                     u30 068C                       u31 0688                       u40 06AC  
                     u41 06A8                       u50 06CC                       u51 06C8  
                     u60 06EC                       u61 06E8                       u70 0752  
                     u71 074E                      l723 0788                      l731 0610  
                    l725 078C                      l717 0780                      l741 063E  
                    l733 061A                      l751 0666                      l743 0642  
                    l735 0626                      l727 0602                      l761 0698  
                    l753 0674                      l745 064E                      l737 062A  
                    l729 060A                      l771 06D4                      l763 06AC  
                    l755 0678                      l747 0652                      l739 062E  
                    l781 06F8                      l773 06D8                      l765 06B4  
                    l757 068C                      l749 0662                      l791 0720  
                    l783 0704                      l775 06EC                      l767 06B8  
                    l759 0694                      l793 072C                      l785 0708  
                    l769 06CC                      l795 0730                      l787 070C  
                    l779 06F4                      l797 0740                      l789 071C  
                    l799 0744                      _RB0 7C08                     _main 0602  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_main 000B                    _PORTB 0F81                    _PORTC 0F82  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95                    _delay 0780                    main@i 000D  
                  main@j 000F                    main@k 0011                    main@l 0013  
                  tablat 0FF5                    status 0FD8          __initialization 075A  
           __end_of_main 075A                   ??_main 000D            __activetblptr 0000  
                 ?_delay 000B                   _ADCON1 0FC1                   delay@i 000B  
                 isa$std 0001             __pdataCOMRAM 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 077A            ___rparam_used 0001  
         __pcstackCOMRAM 000B            __end_of_delay 07A4                  ??_delay 000B  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 075A                  __ramtop 0600                  __ptext0 0602  
                __ptext1 0780     end_of_initialization 077A                  postdec1 0FE5  
                postinc0 0FEE            __pidataCOMRAM 07A4      start_initialization 075A  
            __smallconst 0600                copy_data0 076E                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000  
