

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 17:55:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 17/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4580 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _TXREG	set	4013
    49   000000                     _RCREG	set	4014
    50   000000                     _SPBRG	set	4015
    51   000000                     _TXIF	set	31988
    52   000000                     _TRISC	set	3988
    53   000000                     _TRISD	set	3989
    54   000000                     _RCSTA	set	4011
    55   000000                     _TXSTA	set	4012
    56   000000                     _RCIF	set	31989
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   0006AE                     __pcinit:
    62                           	callstack 0
    63   0006AE                     start_initialization:
    64                           	callstack 0
    65   0006AE                     __initialization:
    66                           	callstack 0
    67   0006AE                     end_of_initialization:
    68                           	callstack 0
    69   0006AE                     __end_of__initialization:
    70                           	callstack 0
    71   0006AE  0100               	movlb	0
    72   0006B0  EF01  F003         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75   000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77   000001                     trans@a:
    78                           	callstack 0
    79                           
    80                           ; 1 bytes @ 0x0
    81   000001                     	ds	1
    82   000002                     main@start:
    83                           	callstack 0
    84                           
    85                           ; 2 bytes @ 0x1
    86   000002                     	ds	2
    87   000004                     main@w:
    88                           	callstack 0
    89                           
    90                           ; 1 bytes @ 0x3
    91   000004                     	ds	1
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 13 in file "SPECIALVIRTUAL.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;  start           2    1[COMRAM] int 
   103 ;;  w               1    3[COMRAM] unsigned char 
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   113 ;;      Params:         0       0       0       0       0       0       0
   114 ;;      Locals:         3       0       0       0       0       0       0
   115 ;;      Temps:          0       0       0       0       0       0       0
   116 ;;      Totals:         3       0       0       0       0       0       0
   117 ;;Total ram usage:        3 bytes
   118 ;; Hardware stack levels required when called: 1
   119 ;; This function calls:
   120 ;;		_receive
   121 ;;		_trans
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128   000602                     __ptext0:
   129                           	callstack 0
   130   000602                     _main:
   131                           	callstack 30
   132   000602                     
   133                           ;SPECIALVIRTUAL.c: 14:     TRISD = 0X00;
   134   000602  0E00               	movlw	0
   135   000604  6E95               	movwf	149,c	;volatile
   136                           
   137                           ;SPECIALVIRTUAL.c: 15:     TRISC = 0X80;
   138   000606  0E80               	movlw	128
   139   000608  6E94               	movwf	148,c	;volatile
   140                           
   141                           ;SPECIALVIRTUAL.c: 16:     TXSTA = 0X24;
   142   00060A  0E24               	movlw	36
   143   00060C  6EAC               	movwf	172,c	;volatile
   144                           
   145                           ;SPECIALVIRTUAL.c: 17:     RCSTA = 0X90;
   146   00060E  0E90               	movlw	144
   147   000610  6EAB               	movwf	171,c	;volatile
   148                           
   149                           ;SPECIALVIRTUAL.c: 18:     SPBRG = 129;
   150   000612  0E81               	movlw	129
   151   000614  6EAF               	movwf	175,c	;volatile
   152                           
   153                           ;SPECIALVIRTUAL.c: 19: char w;;SPECIALVIRTUAL.c: 20:     int start = 0;
   154   000616  0E00               	movlw	0
   155   000618  6E03               	movwf	(main@start+1)^0,c
   156   00061A  0E00               	movlw	0
   157   00061C  6E02               	movwf	main@start^0,c
   158   00061E                     l733:
   159                           
   160                           ;SPECIALVIRTUAL.c: 22:         w = receive();
   161   00061E  EC4E  F003         	call	_receive	;wreg free
   162   000622  6E04               	movwf	main@w^0,c
   163   000624                     
   164                           ;SPECIALVIRTUAL.c: 23:         if (w == '*') {
   165   000624  0E2A               	movlw	42
   166   000626  1804               	xorwf	main@w^0,w,c
   167   000628  A4D8               	btfss	status,2,c
   168   00062A  EF19  F003         	goto	u31
   169   00062E  EF1B  F003         	goto	u30
   170   000632                     u31:
   171   000632  EF21  F003         	goto	l739
   172   000636                     u30:
   173   000636                     
   174                           ;SPECIALVIRTUAL.c: 24:             start = 1;
   175   000636  0E00               	movlw	0
   176   000638  6E03               	movwf	(main@start+1)^0,c
   177   00063A  0E01               	movlw	1
   178   00063C  6E02               	movwf	main@start^0,c
   179                           
   180                           ;SPECIALVIRTUAL.c: 25:         }
   181   00063E  EF0F  F003         	goto	l733
   182   000642                     l739:
   183   000642  0E23               	movlw	35
   184   000644  1804               	xorwf	main@w^0,w,c
   185   000646  A4D8               	btfss	status,2,c
   186   000648  EF28  F003         	goto	u41
   187   00064C  EF2A  F003         	goto	u40
   188   000650                     u41:
   189   000650  EF30  F003         	goto	l743
   190   000654                     u40:
   191   000654                     
   192                           ;SPECIALVIRTUAL.c: 27:            start = 0;
   193   000654  0E00               	movlw	0
   194   000656  6E03               	movwf	(main@start+1)^0,c
   195   000658  0E00               	movlw	0
   196   00065A  6E02               	movwf	main@start^0,c
   197                           
   198                           ;SPECIALVIRTUAL.c: 28:         }
   199   00065C  EF0F  F003         	goto	l733
   200   000660                     l743:
   201   000660  5002               	movf	main@start^0,w,c
   202   000662  1003               	iorwf	(main@start+1)^0,w,c
   203   000664  B4D8               	btfsc	status,2,c
   204   000666  EF37  F003         	goto	u51
   205   00066A  EF39  F003         	goto	u50
   206   00066E                     u51:
   207   00066E  EF3E  F003         	goto	l29
   208   000672                     u50:
   209   000672                     
   210                           ;SPECIALVIRTUAL.c: 30:             trans(w);
   211   000672  5004               	movf	main@w^0,w,c
   212   000674  EC42  F003         	call	_trans
   213   000678  EF0F  F003         	goto	l733
   214   00067C                     l29:
   215   00067C  EF0F  F003         	goto	l733
   216   000680  EF00  F000         	goto	start
   217   000684                     __end_of_main:
   218                           	callstack 0
   219                           
   220 ;; *************** function _trans *****************
   221 ;; Defined at:
   222 ;;		line 37 in file "SPECIALVIRTUAL.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;  a               1    wreg     unsigned char 
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  a               1    0[COMRAM] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         1       0       0       0       0       0       0
   240 ;;Total ram usage:        1 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250   000684                     __ptext1:
   251                           	callstack 0
   252   000684                     _trans:
   253                           	callstack 30
   254                           
   255                           ;incstack = 0
   256                           ;trans@a stored from wreg
   257   000684  6E01               	movwf	trans@a^0,c
   258   000686                     
   259                           ;SPECIALVIRTUAL.c: 38:     TXREG = a;
   260   000686  C001  FFAD         	movff	trans@a,4013	;volatile
   261   00068A                     l44:
   262   00068A  A89E               	btfss	3998,4,c	;volatile
   263   00068C  EF4A  F003         	goto	u21
   264   000690  EF4C  F003         	goto	u20
   265   000694                     u21:
   266   000694  EF45  F003         	goto	l44
   267   000698                     u20:
   268   000698                     
   269                           ;SPECIALVIRTUAL.c: 40: TXIF=0;
   270   000698  989E               	bcf	3998,4,c	;volatile
   271   00069A  0012               	return		;funcret
   272   00069C                     __end_of_trans:
   273                           	callstack 0
   274                           
   275 ;; *************** function _receive *****************
   276 ;; Defined at:
   277 ;;		line 32 in file "SPECIALVIRTUAL.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      unsigned char 
   284 ;; Registers used:
   285 ;;		wreg, status,2
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   291 ;;      Params:         0       0       0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; This function calls:
   298 ;;		Nothing
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text2
   305   00069C                     __ptext2:
   306                           	callstack 0
   307   00069C                     _receive:
   308                           	callstack 30
   309   00069C                     l38:
   310   00069C  AA9E               	btfss	3998,5,c	;volatile
   311   00069E  EF53  F003         	goto	u11
   312   0006A2  EF55  F003         	goto	u10
   313   0006A6                     u11:
   314   0006A6  EF4E  F003         	goto	l38
   315   0006AA                     u10:
   316   0006AA                     
   317                           ;SPECIALVIRTUAL.c: 34:     return RCREG;
   318   0006AA  50AE               	movf	174,w,c	;volatile
   319   0006AC  0012               	return		;funcret
   320   0006AE                     __end_of_receive:
   321                           	callstack 0
   322                           
   323                           	psect	smallconst
   324   000600                     __psmallconst:
   325                           	callstack 0
   326   000600  00                 	db	0
   327   000601  00                 	db	0	; dummy byte at the end
   328   000000                     
   329                           	psect	rparam
   330   000000                     tosu	equ	0xFFF
   331                           tosh	equ	0xFFE
   332                           tosl	equ	0xFFD
   333                           stkptr	equ	0xFFC
   334                           pclatu	equ	0xFFB
   335                           pclath	equ	0xFFA
   336                           pcl	equ	0xFF9
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           prodh	equ	0xFF4
   342                           prodl	equ	0xFF3
   343                           indf0	equ	0xFEF
   344                           postinc0	equ	0xFEE
   345                           postdec0	equ	0xFED
   346                           preinc0	equ	0xFEC
   347                           plusw0	equ	0xFEB
   348                           fsr0h	equ	0xFEA
   349                           fsr0l	equ	0xFE9
   350                           wreg	equ	0xFE8
   351                           indf1	equ	0xFE7
   352                           postinc1	equ	0xFE6
   353                           postdec1	equ	0xFE5
   354                           preinc1	equ	0xFE4
   355                           plusw1	equ	0xFE3
   356                           fsr1h	equ	0xFE2
   357                           fsr1l	equ	0xFE1
   358                           bsr	equ	0xFE0
   359                           indf2	equ	0xFDF
   360                           postinc2	equ	0xFDE
   361                           postdec2	equ	0xFDD
   362                           preinc2	equ	0xFDC
   363                           plusw2	equ	0xFDB
   364                           fsr2h	equ	0xFDA
   365                           fsr2l	equ	0xFD9
   366                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_trans

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      75
                                              1 COMRAM     3     3      0
                            _receive
                              _trans
 ---------------------------------------------------------------------------------
 (1) _trans                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _receive
   _trans

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        50      0       0      16        0.0%
BITBIGSFRhlh         C      0       0      17        0.0%
BITBIGSFRhll         8      0       0      18        0.0%
BITBIGSFRl         294      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             5FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 17:55:47 2024

                     l41 06AC                       l44 068A                       l29 067C  
                     l38 069C                       l46 0698                       l47 069A  
                     u10 06AA                       u11 06A6                       u20 0698  
                     u21 0694                       u30 0636                       u31 0632  
                     u40 0654                       u41 0650                       u50 0672  
                     u51 066E                      l723 069C                      l731 0602  
                    l725 06AA                      l741 0654                      l733 061E  
                    l743 0660                      l735 0624                      l729 0686  
                    l745 0672                      l737 0636                      l739 0642  
                   _RCIF 7CF5                     _TXIF 7CF4                     _main 0602  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _RCREG 0FAE                    _RCSTA 0FAB                    _SPBRG 0FAF  
                  _TRISC 0F94                    _TRISD 0F95                    _TXREG 0FAD  
                  _TXSTA 0FAC          __end_of_receive 06AE                    _trans 0684  
                  main@w 0004                    status 0FD8          __initialization 06AE  
           __end_of_main 0684                   ??_main 0002            __activetblptr 0000  
                 ?_trans 0001                   isa$std 0001                ??_receive 0001  
           __mediumconst 0000                   trans@a 0001               __accesstop 0060  
__end_of__initialization 06AE            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_trans 069C                  ??_trans 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 06AE  
                __ramtop 0600                  __ptext0 0602                  __ptext1 0684  
                __ptext2 069C                  _receive 069C     end_of_initialization 06AE  
    start_initialization 06AE              __smallconst 0600                 ?_receive 0001  
              main@start 0002                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000  
