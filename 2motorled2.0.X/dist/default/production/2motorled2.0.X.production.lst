

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 06 20:53:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _RC5	set	31765
    53   000000                     _PORTB	set	3969
    54   000000                     _TRISB	set	3987
    55   000000                     _TRISC	set	3988
    56   000000                     _RC4	set	31764
    57   000000                     _TRISD	set	3989
    58   000000                     _PORTD	set	3971
    59                           
    60                           	psect	smallconst
    61   000600                     __psmallconst:
    62                           	callstack 0
    63   000600  00                 	db	0
    64   000601                     STR_4:
    65   000601  41                 	db	65	;'A'
    66   000602  4E                 	db	78	;'N'
    67   000603  54                 	db	84	;'T'
    68   000604  49                 	db	73	;'I'
    69   000605  43                 	db	67	;'C'
    70   000606  4C                 	db	76	;'L'
    71   000607  4F                 	db	79	;'O'
    72   000608  43                 	db	67	;'C'
    73   000609  4B                 	db	75	;'K'
    74   00060A  57                 	db	87	;'W'
    75   00060B  49                 	db	73	;'I'
    76   00060C  53                 	db	83	;'S'
    77   00060D  45                 	db	69	;'E'
    78   00060E  00                 	db	0
    79   00060F                     STR_1:
    80   00060F  6D                 	db	109	;'m'
    81   000610  6F                 	db	111	;'o'
    82   000611  74                 	db	116	;'t'
    83   000612  6F                 	db	111	;'o'
    84   000613  72                 	db	114	;'r'
    85   000614  20                 	db	32
    86   000615  31                 	db	49	;'1'
    87   000616  00                 	db	0
    88   000617                     STR_7:
    89   000617  6D                 	db	109	;'m'
    90   000618  6F                 	db	111	;'o'
    91   000619  74                 	db	116	;'t'
    92   00061A  6F                 	db	111	;'o'
    93   00061B  72                 	db	114	;'r'
    94   00061C  20                 	db	32
    95   00061D  32                 	db	50	;'2'
    96   00061E  00                 	db	0
    97   00061F                     STR_6:
    98   00061F  53                 	db	83	;'S'
    99   000620  54                 	db	84	;'T'
   100   000621  4F                 	db	79	;'O'
   101   000622  50                 	db	80	;'P'
   102   000623  00                 	db	0
   103   000624  00                 	db	0	; dummy byte at the end
   104   000000                     
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   000912                     __pcinit:
   109                           	callstack 0
   110   000912                     start_initialization:
   111                           	callstack 0
   112   000912                     __initialization:
   113                           	callstack 0
   114   000912                     end_of_initialization:
   115                           	callstack 0
   116   000912                     __end_of__initialization:
   117                           	callstack 0
   118   000912  0E00               	movlw	low (__Lsmallconst shr (0+16))
   119   000914  6EF8               	movwf	tblptru,c
   120   000916  0E06               	movlw	high __Lsmallconst
   121   000918  6EF7               	movwf	tblptrh,c
   122   00091A  0100               	movlb	0
   123   00091C  EF13  F003         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	cstackCOMRAM
   126   000001                     __pcstackCOMRAM:
   127                           	callstack 0
   128   000001                     cmd@a:
   129                           	callstack 0
   130   000001                     data@b:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x0
   134   000001                     	ds	1
   135   000002                     cmd@i:
   136                           	callstack 0
   137   000002                     data@i:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x1
   141   000002                     	ds	2
   142   000004                     cmd@i_65:
   143                           	callstack 0
   144   000004                     data@i_69:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x3
   148   000004                     	ds	2
   149   000006                     display@p:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x5
   153   000006                     	ds	1
   154   000007                     main@count:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x6
   158   000007                     	ds	2
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 15 in file "2motorlcd2.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  count           2    6[COMRAM] int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   179 ;;      Params:         0       0       0       0       0       0       0
   180 ;;      Locals:         2       0       0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0
   182 ;;      Totals:         2       0       0       0       0       0       0
   183 ;;Total ram usage:        2 bytes
   184 ;; Hardware stack levels required when called: 2
   185 ;; This function calls:
   186 ;;		_cmd
   187 ;;		_display
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194   000626                     __ptext0:
   195                           	callstack 0
   196   000626                     _main:
   197                           	callstack 29
   198   000626  0E30               	movlw	48
   199   000628  6E94               	movwf	148,c	;volatile
   200   00062A  0E00               	movlw	0
   201   00062C  6E95               	movwf	149,c	;volatile
   202   00062E  0E00               	movlw	0
   203   000630  6E93               	movwf	147,c	;volatile
   204   000632  0E01               	movlw	1
   205   000634  EC43  F004         	call	_cmd
   206   000638  0E0F               	movlw	15
   207   00063A  EC43  F004         	call	_cmd
   208   00063E  0E38               	movlw	56
   209   000640  EC43  F004         	call	_cmd
   210   000644  0E0C               	movlw	12
   211   000646  EC43  F004         	call	_cmd
   212   00064A  6807               	setf	main@count^0,c
   213   00064C  6808               	setf	(main@count+1)^0,c
   214   00064E                     l932:
   215   00064E  A882               	btfss	3970,4,c	;volatile
   216   000650  EF2C  F003         	goto	u191
   217   000654  EF2E  F003         	goto	u190
   218   000658                     u191:
   219   000658  EF9B  F003         	goto	l978
   220   00065C                     u190:
   221   00065C  0E02               	movlw	2
   222   00065E  1807               	xorwf	main@count^0,w,c
   223   000660  1008               	iorwf	(main@count+1)^0,w,c
   224   000662  A4D8               	btfss	status,2,c
   225   000664  EF36  F003         	goto	u201
   226   000668  EF38  F003         	goto	u200
   227   00066C                     u201:
   228   00066C  EF3A  F003         	goto	l938
   229   000670                     u200:
   230   000670  6807               	setf	main@count^0,c
   231   000672  6808               	setf	(main@count+1)^0,c
   232   000674                     l938:
   233   000674  4A07               	infsnz	main@count^0,f,c
   234   000676  2A08               	incf	(main@count+1)^0,f,c
   235   000678                     l32:
   236   000678  B882               	btfsc	3970,4,c	;volatile
   237   00067A  EF41  F003         	goto	u211
   238   00067E  EF43  F003         	goto	u210
   239   000682                     u211:
   240   000682  EF3C  F003         	goto	l32
   241   000686                     u210:
   242   000686  0E01               	movlw	1
   243   000688  EC43  F004         	call	_cmd
   244   00068C  0EC0               	movlw	192
   245   00068E  EC43  F004         	call	_cmd
   246   000692  5007               	movf	main@count^0,w,c
   247   000694  1008               	iorwf	(main@count+1)^0,w,c
   248   000696  A4D8               	btfss	status,2,c
   249   000698  EF50  F003         	goto	u221
   250   00069C  EF52  F003         	goto	u220
   251   0006A0                     u221:
   252   0006A0  EF64  F003         	goto	l954
   253   0006A4                     u220:
   254   0006A4  0E01               	movlw	1
   255   0006A6  6E81               	movwf	129,c	;volatile
   256   0006A8  0E80               	movlw	128
   257   0006AA  EC43  F004         	call	_cmd
   258   0006AE  0E0F               	movlw	low STR_1
   259   0006B0  6E06               	movwf	display@p^0,c
   260   0006B2  EC73  F004         	call	_display	;wreg free
   261   0006B6  0EC0               	movlw	192
   262   0006B8  EC43  F004         	call	_cmd
   263   0006BC  0E05               	movlw	low (STR_4+4)
   264   0006BE  6E06               	movwf	display@p^0,c
   265   0006C0  EC73  F004         	call	_display	;wreg free
   266   0006C4  EF9B  F003         	goto	l978
   267   0006C8                     l954:
   268   0006C8  0407               	decf	main@count^0,w,c
   269   0006CA  1008               	iorwf	(main@count+1)^0,w,c
   270   0006CC  A4D8               	btfss	status,2,c
   271   0006CE  EF6B  F003         	goto	u231
   272   0006D2  EF6D  F003         	goto	u230
   273   0006D6                     u231:
   274   0006D6  EF7F  F003         	goto	l966
   275   0006DA                     u230:
   276   0006DA  0E02               	movlw	2
   277   0006DC  6E81               	movwf	129,c	;volatile
   278   0006DE  0E80               	movlw	128
   279   0006E0  EC43  F004         	call	_cmd
   280   0006E4  0E0F               	movlw	low STR_1
   281   0006E6  6E06               	movwf	display@p^0,c
   282   0006E8  EC73  F004         	call	_display	;wreg free
   283   0006EC  0EC0               	movlw	192
   284   0006EE  EC43  F004         	call	_cmd
   285   0006F2  0E01               	movlw	low STR_4
   286   0006F4  6E06               	movwf	display@p^0,c
   287   0006F6  EC73  F004         	call	_display	;wreg free
   288   0006FA  EF9B  F003         	goto	l978
   289   0006FE                     l966:
   290   0006FE  0E02               	movlw	2
   291   000700  1807               	xorwf	main@count^0,w,c
   292   000702  1008               	iorwf	(main@count+1)^0,w,c
   293   000704  A4D8               	btfss	status,2,c
   294   000706  EF87  F003         	goto	u241
   295   00070A  EF89  F003         	goto	u240
   296   00070E                     u241:
   297   00070E  EF9B  F003         	goto	l36
   298   000712                     u240:
   299   000712  0E03               	movlw	3
   300   000714  6E81               	movwf	129,c	;volatile
   301   000716  0E80               	movlw	128
   302   000718  EC43  F004         	call	_cmd
   303   00071C  0E0F               	movlw	low STR_1
   304   00071E  6E06               	movwf	display@p^0,c
   305   000720  EC73  F004         	call	_display	;wreg free
   306   000724  0EC0               	movlw	192
   307   000726  EC43  F004         	call	_cmd
   308   00072A  0E1F               	movlw	low STR_6
   309   00072C  6E06               	movwf	display@p^0,c
   310   00072E  EC73  F004         	call	_display	;wreg free
   311   000732  EF9B  F003         	goto	l978
   312   000736                     l36:
   313   000736                     l978:
   314   000736  AA82               	btfss	3970,5,c	;volatile
   315   000738  EFA0  F003         	goto	u251
   316   00073C  EFA2  F003         	goto	u250
   317   000740                     u251:
   318   000740  EF27  F003         	goto	l932
   319   000744                     u250:
   320   000744  0E02               	movlw	2
   321   000746  1807               	xorwf	main@count^0,w,c
   322   000748  1008               	iorwf	(main@count+1)^0,w,c
   323   00074A  A4D8               	btfss	status,2,c
   324   00074C  EFAA  F003         	goto	u261
   325   000750  EFAC  F003         	goto	u260
   326   000754                     u261:
   327   000754  EFAE  F003         	goto	l984
   328   000758                     u260:
   329   000758  6807               	setf	main@count^0,c
   330   00075A  6808               	setf	(main@count+1)^0,c
   331   00075C                     l984:
   332   00075C  4A07               	infsnz	main@count^0,f,c
   333   00075E  2A08               	incf	(main@count+1)^0,f,c
   334   000760                     l42:
   335   000760  BA82               	btfsc	3970,5,c	;volatile
   336   000762  EFB5  F003         	goto	u271
   337   000766  EFB7  F003         	goto	u270
   338   00076A                     u271:
   339   00076A  EFB0  F003         	goto	l42
   340   00076E                     u270:
   341   00076E  0E01               	movlw	1
   342   000770  EC43  F004         	call	_cmd
   343   000774  0EC0               	movlw	192
   344   000776  EC43  F004         	call	_cmd
   345   00077A  5007               	movf	main@count^0,w,c
   346   00077C  1008               	iorwf	(main@count+1)^0,w,c
   347   00077E  A4D8               	btfss	status,2,c
   348   000780  EFC4  F003         	goto	u281
   349   000784  EFC6  F003         	goto	u280
   350   000788                     u281:
   351   000788  EFD8  F003         	goto	l1000
   352   00078C                     u280:
   353   00078C  0E04               	movlw	4
   354   00078E  6E81               	movwf	129,c	;volatile
   355   000790  0E80               	movlw	128
   356   000792  EC43  F004         	call	_cmd
   357   000796  0E17               	movlw	low STR_7
   358   000798  6E06               	movwf	display@p^0,c
   359   00079A  EC73  F004         	call	_display	;wreg free
   360   00079E  0EC0               	movlw	192
   361   0007A0  EC43  F004         	call	_cmd
   362   0007A4  0E05               	movlw	low (STR_4+4)
   363   0007A6  6E06               	movwf	display@p^0,c
   364   0007A8  EC73  F004         	call	_display	;wreg free
   365   0007AC  EF27  F003         	goto	l932
   366   0007B0                     l1000:
   367   0007B0  0407               	decf	main@count^0,w,c
   368   0007B2  1008               	iorwf	(main@count+1)^0,w,c
   369   0007B4  A4D8               	btfss	status,2,c
   370   0007B6  EFDF  F003         	goto	u291
   371   0007BA  EFE1  F003         	goto	u290
   372   0007BE                     u291:
   373   0007BE  EFF3  F003         	goto	l1012
   374   0007C2                     u290:
   375   0007C2  0E08               	movlw	8
   376   0007C4  6E81               	movwf	129,c	;volatile
   377   0007C6  0E80               	movlw	128
   378   0007C8  EC43  F004         	call	_cmd
   379   0007CC  0E17               	movlw	low STR_7
   380   0007CE  6E06               	movwf	display@p^0,c
   381   0007D0  EC73  F004         	call	_display	;wreg free
   382   0007D4  0EC0               	movlw	192
   383   0007D6  EC43  F004         	call	_cmd
   384   0007DA  0E01               	movlw	low STR_4
   385   0007DC  6E06               	movwf	display@p^0,c
   386   0007DE  EC73  F004         	call	_display	;wreg free
   387   0007E2  EF27  F003         	goto	l932
   388   0007E6                     l1012:
   389   0007E6  0E02               	movlw	2
   390   0007E8  1807               	xorwf	main@count^0,w,c
   391   0007EA  1008               	iorwf	(main@count+1)^0,w,c
   392   0007EC  A4D8               	btfss	status,2,c
   393   0007EE  EFFB  F003         	goto	u301
   394   0007F2  EFFD  F003         	goto	u300
   395   0007F6                     u301:
   396   0007F6  EF0F  F004         	goto	l40
   397   0007FA                     u300:
   398   0007FA  0E40               	movlw	64
   399   0007FC  6E81               	movwf	129,c	;volatile
   400   0007FE  0E80               	movlw	128
   401   000800  EC43  F004         	call	_cmd
   402   000804  0E17               	movlw	low STR_7
   403   000806  6E06               	movwf	display@p^0,c
   404   000808  EC73  F004         	call	_display	;wreg free
   405   00080C  0EC5               	movlw	197
   406   00080E  EC43  F004         	call	_cmd
   407   000812  0E1F               	movlw	low STR_6
   408   000814  6E06               	movwf	display@p^0,c
   409   000816  EC73  F004         	call	_display	;wreg free
   410   00081A  EF27  F003         	goto	l932
   411   00081E                     l40:
   412   00081E  EF27  F003         	goto	l932
   413   000822  EF00  F000         	goto	start
   414   000826                     __end_of_main:
   415                           	callstack 0
   416                           
   417 ;; *************** function _display *****************
   418 ;; Defined at:
   419 ;;		line 151 in file "2motorlcd2.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  p               1    5[COMRAM] PTR const unsigned char 
   422 ;;		 -> STR_12(5), STR_11(8), STR_10(14), STR_9(8), 
   423 ;;		 -> STR_8(10), STR_7(8), STR_6(5), STR_5(8), 
   424 ;;		 -> STR_4(14), STR_3(8), STR_2(10), STR_1(8), 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   436 ;;      Params:         1       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0
   439 ;;      Totals:         1       0       0       0       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 1
   443 ;; This function calls:
   444 ;;		_data
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451   0008E6                     __ptext1:
   452                           	callstack 0
   453   0008E6                     _display:
   454                           	callstack 29
   455   0008E6  EF7C  F004         	goto	l918
   456   0008EA                     l914:
   457   0008EA  C006  FFF6         	movff	display@p,tblptrl
   458   0008EE                     	if	0	;There is only one active tblptr byte
   459   0008EE                     	endif
   460   0008EE                     	if	0	;tblptru may be non-zero
   461   0008EE                     	endif
   462   0008EE                     	if	0	;tblptru may be non-zero
   463   0008EE                     	endif
   464   0008EE  0008               	tblrd		*
   465   0008F0  50F5               	movf	tablat,w,c
   466   0008F2  EC13  F004         	call	_data
   467   0008F6  2A06               	incf	display@p^0,f,c
   468   0008F8                     l918:
   469   0008F8  C006  FFF6         	movff	display@p,tblptrl
   470   0008FC                     	if	0	;There is only one active tblptr byte
   471   0008FC                     	endif
   472   0008FC                     	if	0	;tblptru may be non-zero
   473   0008FC                     	endif
   474   0008FC                     	if	0	;tblptru may be non-zero
   475   0008FC                     	endif
   476   0008FC  0008               	tblrd		*
   477   0008FE  50F5               	movf	tablat,w,c
   478   000900  0900               	iorlw	0
   479   000902  A4D8               	btfss	status,2,c
   480   000904  EF86  F004         	goto	u181
   481   000908  EF88  F004         	goto	u180
   482   00090C                     u181:
   483   00090C  EF75  F004         	goto	l914
   484   000910                     u180:
   485   000910  0012               	return		;funcret
   486   000912                     __end_of_display:
   487                           	callstack 0
   488                           
   489 ;; *************** function _data *****************
   490 ;; Defined at:
   491 ;;		line 140 in file "2motorlcd2.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  b               1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  b               1    0[COMRAM] unsigned char 
   496 ;;  i               2    3[COMRAM] int 
   497 ;;  i               2    1[COMRAM] int 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   507 ;;      Params:         0       0       0       0       0       0       0
   508 ;;      Locals:         5       0       0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0
   510 ;;      Totals:         5       0       0       0       0       0       0
   511 ;;Total ram usage:        5 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_display
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text2
   521   000826                     __ptext2:
   522                           	callstack 0
   523   000826                     _data:
   524                           	callstack 29
   525                           
   526                           ;incstack = 0
   527                           ;data@b stored from wreg
   528   000826  6E01               	movwf	data@b^0,c
   529   000828  8082               	bsf	3970,0,c	;volatile
   530   00082A  9282               	bcf	3970,1,c	;volatile
   531   00082C  C001  FF83         	movff	data@b,3971	;volatile
   532   000830  8482               	bsf	3970,2,c	;volatile
   533   000832  0E00               	movlw	0
   534   000834  6E03               	movwf	(data@i+1)^0,c
   535   000836  0E00               	movlw	0
   536   000838  6E02               	movwf	data@i^0,c
   537   00083A                     l760:
   538   00083A  4A02               	infsnz	data@i^0,f,c
   539   00083C  2A03               	incf	(data@i+1)^0,f,c
   540   00083E  BE03               	btfsc	(data@i+1)^0,7,c
   541   000840  EF2B  F004         	goto	u11
   542   000844  5003               	movf	(data@i+1)^0,w,c
   543   000846  E109               	bnz	u10
   544   000848  0E65               	movlw	101
   545   00084A  5C02               	subwf	data@i^0,w,c
   546   00084C  A0D8               	btfss	status,0,c
   547   00084E  EF2B  F004         	goto	u11
   548   000852  EF2D  F004         	goto	u10
   549   000856                     u11:
   550   000856  EF1D  F004         	goto	l760
   551   00085A                     u10:
   552   00085A  9482               	bcf	3970,2,c	;volatile
   553   00085C  0E00               	movlw	0
   554   00085E  6E05               	movwf	(data@i_69+1)^0,c
   555   000860  0E00               	movlw	0
   556   000862  6E04               	movwf	data@i_69^0,c
   557   000864                     l770:
   558   000864  4A04               	infsnz	data@i_69^0,f,c
   559   000866  2A05               	incf	(data@i_69+1)^0,f,c
   560   000868  BE05               	btfsc	(data@i_69+1)^0,7,c
   561   00086A  EF40  F004         	goto	u21
   562   00086E  0E89               	movlw	137
   563   000870  5C04               	subwf	data@i_69^0,w,c
   564   000872  0E13               	movlw	19
   565   000874  5805               	subwfb	(data@i_69+1)^0,w,c
   566   000876  A0D8               	btfss	status,0,c
   567   000878  EF40  F004         	goto	u21
   568   00087C  EF42  F004         	goto	u20
   569   000880                     u21:
   570   000880  EF32  F004         	goto	l770
   571   000884                     u20:
   572   000884  0012               	return		;funcret
   573   000886                     __end_of_data:
   574                           	callstack 0
   575                           
   576 ;; *************** function _cmd *****************
   577 ;; Defined at:
   578 ;;		line 130 in file "2motorlcd2.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  a               1    wreg     unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  a               1    0[COMRAM] unsigned char 
   583 ;;  i               2    3[COMRAM] int 
   584 ;;  i               2    1[COMRAM] int 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   594 ;;      Params:         0       0       0       0       0       0       0
   595 ;;      Locals:         5       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0
   597 ;;      Totals:         5       0       0       0       0       0       0
   598 ;;Total ram usage:        5 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text3
   608   000886                     __ptext3:
   609                           	callstack 0
   610   000886                     _cmd:
   611                           	callstack 30
   612                           
   613                           ;incstack = 0
   614                           ;cmd@a stored from wreg
   615   000886  6E01               	movwf	cmd@a^0,c
   616   000888  9082               	bcf	3970,0,c	;volatile
   617   00088A  9282               	bcf	3970,1,c	;volatile
   618   00088C  C001  FF83         	movff	cmd@a,3971	;volatile
   619   000890  8482               	bsf	3970,2,c	;volatile
   620   000892  0E00               	movlw	0
   621   000894  6E03               	movwf	(cmd@i+1)^0,c
   622   000896  0E00               	movlw	0
   623   000898  6E02               	movwf	cmd@i^0,c
   624   00089A                     l786:
   625   00089A  4A02               	infsnz	cmd@i^0,f,c
   626   00089C  2A03               	incf	(cmd@i+1)^0,f,c
   627   00089E  BE03               	btfsc	(cmd@i+1)^0,7,c
   628   0008A0  EF5B  F004         	goto	u31
   629   0008A4  5003               	movf	(cmd@i+1)^0,w,c
   630   0008A6  E109               	bnz	u30
   631   0008A8  0E65               	movlw	101
   632   0008AA  5C02               	subwf	cmd@i^0,w,c
   633   0008AC  A0D8               	btfss	status,0,c
   634   0008AE  EF5B  F004         	goto	u31
   635   0008B2  EF5D  F004         	goto	u30
   636   0008B6                     u31:
   637   0008B6  EF4D  F004         	goto	l786
   638   0008BA                     u30:
   639   0008BA  9482               	bcf	3970,2,c	;volatile
   640   0008BC  0E00               	movlw	0
   641   0008BE  6E05               	movwf	(cmd@i_65+1)^0,c
   642   0008C0  0E00               	movlw	0
   643   0008C2  6E04               	movwf	cmd@i_65^0,c
   644   0008C4                     l796:
   645   0008C4  4A04               	infsnz	cmd@i_65^0,f,c
   646   0008C6  2A05               	incf	(cmd@i_65+1)^0,f,c
   647   0008C8  BE05               	btfsc	(cmd@i_65+1)^0,7,c
   648   0008CA  EF70  F004         	goto	u41
   649   0008CE  0E89               	movlw	137
   650   0008D0  5C04               	subwf	cmd@i_65^0,w,c
   651   0008D2  0E13               	movlw	19
   652   0008D4  5805               	subwfb	(cmd@i_65+1)^0,w,c
   653   0008D6  A0D8               	btfss	status,0,c
   654   0008D8  EF70  F004         	goto	u41
   655   0008DC  EF72  F004         	goto	u40
   656   0008E0                     u41:
   657   0008E0  EF62  F004         	goto	l796
   658   0008E4                     u40:
   659   0008E4  0012               	return		;funcret
   660   0008E6                     __end_of_cmd:
   661                           	callstack 0
   662                           
   663                           	psect	rparam
   664   000000                     tosu	equ	0xFFF
   665                           tosh	equ	0xFFE
   666                           tosl	equ	0xFFD
   667                           stkptr	equ	0xFFC
   668                           pclatu	equ	0xFFB
   669                           pclath	equ	0xFFA
   670                           pcl	equ	0xFF9
   671                           tblptru	equ	0xFF8
   672                           tblptrh	equ	0xFF7
   673                           tblptrl	equ	0xFF6
   674                           tablat	equ	0xFF5
   675                           prodh	equ	0xFF4
   676                           prodl	equ	0xFF3
   677                           indf0	equ	0xFEF
   678                           postinc0	equ	0xFEE
   679                           postdec0	equ	0xFED
   680                           preinc0	equ	0xFEC
   681                           plusw0	equ	0xFEB
   682                           fsr0h	equ	0xFEA
   683                           fsr0l	equ	0xFE9
   684                           wreg	equ	0xFE8
   685                           indf1	equ	0xFE7
   686                           postinc1	equ	0xFE6
   687                           postdec1	equ	0xFE5
   688                           preinc1	equ	0xFE4
   689                           plusw1	equ	0xFE3
   690                           fsr1h	equ	0xFE2
   691                           fsr1l	equ	0xFE1
   692                           bsr	equ	0xFE0
   693                           indf2	equ	0xFDF
   694                           postinc2	equ	0xFDE
   695                           postdec2	equ	0xFDD
   696                           preinc2	equ	0xFDC
   697                           plusw2	equ	0xFDB
   698                           fsr2h	equ	0xFDA
   699                           fsr2l	equ	0xFD9
   700                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_10(CODE[14]), STR_11(CODE[8]), STR_12(CODE[5]), 
		 -> STR_2(CODE[10]), STR_3(CODE[8]), STR_4(CODE[14]), STR_5(CODE[8]), 
		 -> STR_6(CODE[5]), STR_7(CODE[8]), STR_8(CODE[10]), STR_9(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1288
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1    1032
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 06 20:53:31 2024

                     l40 081E                       l32 0678                       l42 0760  
                     l36 0736                       l63 085A                       l56 08BA  
                     l72 0910                       l66 0884                       l59 08E4  
                     u10 085A                       u11 0856                       u20 0884  
                     u21 0880                       u30 08BA                       u31 08B6  
                     u40 08E4                       u41 08E0                      l750 082C  
                    l760 083A                      l752 0830                      l912 08E6  
                    l920 0626                      l770 0864                      l762 083E  
                    l754 0832                      l914 08EA                      l930 064A  
                    l922 0632                      l780 0892                      l772 0868  
                    l764 085C                      l748 0828                      l916 08F6  
                    l940 0686                      l932 064E                      l924 0638  
                    l790 08BC                      l774 0888                      l918 08F8  
                    l950 06B6                      l942 0692                      l934 065C  
                    l926 063E                      l776 088C                      l960 06E4  
                    l952 06BC                      l944 06A4                      l936 0670  
                    l928 0644                      l786 089A                      l778 0890  
                    l970 0716                      l962 06EC                      l946 06A8  
                    l954 06C8                      l938 0674                      l796 08C4  
                    l788 089E                      l980 0744                      l972 071C  
                    l964 06F2                      l956 06DA                      l948 06AE  
                    l798 08C8                      l990 078C                      l982 0758  
                    l974 0724                      l958 06DE                      l966 06FE  
                    l992 0790                      l984 075C                      l976 072A  
                    l968 0712                      l994 0796                      l986 076E  
                    l978 0736                      l996 079E                      l988 077A  
                    l998 07A4                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _RC4 7C14                      _RC5 7C15  
                    u200 0670                      u201 066C                      u210 0686  
                    u211 0682                      u300 07FA                      u220 06A4  
                    u301 07F6                      u221 06A0                      u230 06DA  
                    u231 06D6                      u240 0712                      u241 070E  
                    u250 0744                      u251 0740                      u180 0910  
                    u260 0758                      u181 090C                      u261 0754  
                    u270 076E                      u190 065C                      u271 076A  
                    u191 0658                      u280 078C                      u281 0788  
                    u290 07C2                      u291 07BE                      _cmd 0886  
                   l1000 07B0                     l1010 07DA                     l1002 07C2  
                   l1020 080C                     l1004 07C6                     l1012 07E6  
                   l1022 0812                     l1014 07FA                     l1006 07CC  
                   l1016 07FE                     l1008 07D4                     l1018 0804  
                   ?_cmd 0001                     STR_1 060F                     STR_2 0605  
                   STR_3 060F                     STR_4 0601                     STR_5 060F  
                   STR_6 061F                     STR_7 0617                     STR_8 0605  
                   STR_9 0617                     _data 0826                     cmd@a 0001  
                   cmd@i 0002                     _main 0626                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    STR_10 0601                    STR_11 0617  
                  STR_12 061F                    _PORTB 0F81                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
        __end_of_display 0912                    data@b 0001                    data@i 0002  
                  tablat 0FF5                    status 0FD8          __initialization 0912  
           __end_of_data 0886             __end_of_main 0826                   ??_data 0001  
                 ??_main 0007            __activetblptr 0001                   isa$std 0001  
              ??_display 0007             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0912            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0912                  __ramtop 0600                  __ptext0 0626  
                __ptext1 08E6                  __ptext2 0826                  __ptext3 0886  
                cmd@i_65 0004                  _display 08E6     end_of_initialization 0912  
    start_initialization 0912              __end_of_cmd 08E6                 ?_display 0006  
            __smallconst 0600                main@count 0007                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_69 0004  
               isa$xinst 0000                 display@p 0006  
