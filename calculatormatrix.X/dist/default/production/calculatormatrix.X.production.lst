

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 10 18:14:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RB7	set	31759
    52   000000                     _RB6	set	31758
    53   000000                     _RB5	set	31757
    54   000000                     _RB4	set	31756
    55   000000                     _PORTB	set	3969
    56   000000                     _TRISB	set	3987
    57   000000                     _ADCON1	set	4033
    58   000000                     _TRISD	set	3989
    59   000000                     _TRISC	set	3988
    60   000000                     _PORTD	set	3971
    61   000000                     _RC0	set	31760
    62                           
    63                           	psect	smallconst
    64   000600                     __psmallconst:
    65                           	callstack 0
    66   000600  00                 	db	0
    67   000601                     STR_4:
    68   000601  20                 	db	32
    69   000602  00                 	db	0
    70   000603                     STR_11:
    71   000603  30                 	db	48	;'0'
    72   000604  00                 	db	0
    73   000605                     STR_8:
    74   000605  31                 	db	49	;'1'
    75   000606  00                 	db	0
    76   000607                     STR_9:
    77   000607  32                 	db	50	;'2'
    78   000608  00                 	db	0
    79   000609                     STR_10:
    80   000609  33                 	db	51	;'3'
    81   00060A  00                 	db	0
    82   00060B                     STR_5:
    83   00060B  34                 	db	52	;'4'
    84   00060C  00                 	db	0
    85   00060D                     STR_6:
    86   00060D  35                 	db	53	;'5'
    87   00060E  00                 	db	0
    88   00060F                     STR_7:
    89   00060F  36                 	db	54	;'6'
    90   000610  00                 	db	0
    91   000611                     STR_1:
    92   000611  37                 	db	55	;'7'
    93   000612  00                 	db	0
    94   000613                     STR_2:
    95   000613  38                 	db	56	;'8'
    96   000614  00                 	db	0
    97   000615                     STR_3:
    98   000615  39                 	db	57	;'9'
    99   000616  00                 	db	0
   100   000617  00                 	db	0	; dummy byte at the end
   101   000000                     
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105   0009E2                     __pcinit:
   106                           	callstack 0
   107   0009E2                     start_initialization:
   108                           	callstack 0
   109   0009E2                     __initialization:
   110                           	callstack 0
   111   0009E2                     end_of_initialization:
   112                           	callstack 0
   113   0009E2                     __end_of__initialization:
   114                           	callstack 0
   115   0009E2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   116   0009E4  6EF8               	movwf	tblptru,c
   117   0009E6  0E06               	movlw	high __Lsmallconst
   118   0009E8  6EF7               	movwf	tblptrh,c
   119   0009EA  0100               	movlb	0
   120   0009EC  EF0C  F003         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	cstackCOMRAM
   123   000001                     __pcstackCOMRAM:
   124                           	callstack 0
   125   000001                     cmd@a:
   126                           	callstack 0
   127   000001                     data@b:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x0
   131   000001                     	ds	1
   132   000002                     cmd@i:
   133                           	callstack 0
   134   000002                     data@i:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0x1
   138   000002                     	ds	2
   139   000004                     cmd@i_67:
   140                           	callstack 0
   141   000004                     data@i_71:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x3
   145   000004                     	ds	2
   146   000006                     display@p:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x5
   150   000006                     	ds	1
   151   000007                     main@count:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x6
   155   000007                     	ds	2
   156                           
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 14 in file "matrixcalculator.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;  count           2    6[COMRAM] int 
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   176 ;;      Params:         0       0       0       0       0       0       0
   177 ;;      Locals:         2       0       0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0
   179 ;;      Totals:         2       0       0       0       0       0       0
   180 ;;Total ram usage:        2 bytes
   181 ;; Hardware stack levels required when called: 2
   182 ;; This function calls:
   183 ;;		_cmd
   184 ;;		_display
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text0
   191   000618                     __ptext0:
   192                           	callstack 0
   193   000618                     _main:
   194                           	callstack 29
   195   000618                     
   196                           ;matrixcalculator.c: 16:     ADCON1=0X0F;
   197   000618  0E0F               	movlw	15
   198   00061A  6EC1               	movwf	193,c	;volatile
   199                           
   200                           ;matrixcalculator.c: 17:     TRISB=0XF0;
   201   00061C  0EF0               	movlw	240
   202   00061E  6E93               	movwf	147,c	;volatile
   203                           
   204                           ;matrixcalculator.c: 18:     TRISC=0X00;
   205   000620  0E00               	movlw	0
   206   000622  6E94               	movwf	148,c	;volatile
   207                           
   208                           ;matrixcalculator.c: 19:     TRISD=0X00;
   209   000624  0E00               	movlw	0
   210   000626  6E95               	movwf	149,c	;volatile
   211   000628                     
   212                           ;matrixcalculator.c: 20:     cmd(0x0f);
   213   000628  0E0F               	movlw	15
   214   00062A  ECAB  F004         	call	_cmd
   215   00062E                     
   216                           ;matrixcalculator.c: 21:     int count=-1;
   217   00062E  6807               	setf	main@count^0,c
   218   000630  6808               	setf	(main@count+1)^0,c
   219   000632                     l958:
   220                           
   221                           ;matrixcalculator.c: 23:     {;matrixcalculator.c: 24:     PORTB=0X0E;
   222   000632  0E0E               	movlw	14
   223   000634  6E81               	movwf	129,c	;volatile
   224   000636                     
   225                           ;matrixcalculator.c: 25:     if(RB4==0)
   226   000636  B881               	btfsc	3969,4,c	;volatile
   227   000638  EF20  F003         	goto	u421
   228   00063C  EF22  F003         	goto	u420
   229   000640                     u421:
   230   000640  EF2F  F003         	goto	l36
   231   000644                     u420:
   232   000644                     
   233                           ;matrixcalculator.c: 26:     {;matrixcalculator.c: 28:     display("7");
   234   000644  0E11               	movlw	low STR_1
   235   000646  6E06               	movwf	display@p^0,c
   236   000648  ECDB  F004         	call	_display	;wreg free
   237   00064C                     l37:
   238   00064C  A881               	btfss	3969,4,c	;volatile
   239   00064E  EF2B  F003         	goto	u431
   240   000652  EF2D  F003         	goto	u430
   241   000656                     u431:
   242   000656  EF26  F003         	goto	l37
   243   00065A                     u430:
   244   00065A  EF6F  F003         	goto	l974
   245   00065E                     l36:
   246   00065E  BA81               	btfsc	3969,5,c	;volatile
   247   000660  EF34  F003         	goto	u441
   248   000664  EF36  F003         	goto	u440
   249   000668                     u441:
   250   000668  EF43  F003         	goto	l41
   251   00066C                     u440:
   252   00066C                     
   253                           ;matrixcalculator.c: 32:     {;matrixcalculator.c: 34:   display("8");
   254   00066C  0E13               	movlw	low STR_2
   255   00066E  6E06               	movwf	display@p^0,c
   256   000670  ECDB  F004         	call	_display	;wreg free
   257   000674                     l42:
   258   000674  AA81               	btfss	3969,5,c	;volatile
   259   000676  EF3F  F003         	goto	u451
   260   00067A  EF41  F003         	goto	u450
   261   00067E                     u451:
   262   00067E  EF3A  F003         	goto	l42
   263   000682                     u450:
   264   000682  EF6F  F003         	goto	l974
   265   000686                     l41:
   266   000686  BC81               	btfsc	3969,6,c	;volatile
   267   000688  EF48  F003         	goto	u461
   268   00068C  EF4A  F003         	goto	u460
   269   000690                     u461:
   270   000690  EF57  F003         	goto	l46
   271   000694                     u460:
   272   000694                     
   273                           ;matrixcalculator.c: 39:     {;matrixcalculator.c: 41:      display("9");
   274   000694  0E15               	movlw	low STR_3
   275   000696  6E06               	movwf	display@p^0,c
   276   000698  ECDB  F004         	call	_display	;wreg free
   277   00069C                     l47:
   278   00069C  AC81               	btfss	3969,6,c	;volatile
   279   00069E  EF53  F003         	goto	u471
   280   0006A2  EF55  F003         	goto	u470
   281   0006A6                     u471:
   282   0006A6  EF4E  F003         	goto	l47
   283   0006AA                     u470:
   284   0006AA  EF6F  F003         	goto	l974
   285   0006AE                     l46:
   286   0006AE  BE81               	btfsc	3969,7,c	;volatile
   287   0006B0  EF5C  F003         	goto	u481
   288   0006B4  EF5E  F003         	goto	u480
   289   0006B8                     u481:
   290   0006B8  EF6F  F003         	goto	l974
   291   0006BC                     u480:
   292   0006BC                     
   293                           ;matrixcalculator.c: 46:     {;matrixcalculator.c: 47:         cmd(0x10);
   294   0006BC  0E10               	movlw	16
   295   0006BE  ECAB  F004         	call	_cmd
   296   0006C2                     
   297                           ;matrixcalculator.c: 48:         display(" ");
   298   0006C2  0E01               	movlw	low STR_4
   299   0006C4  6E06               	movwf	display@p^0,c
   300   0006C6  ECDB  F004         	call	_display	;wreg free
   301   0006CA                     
   302                           ;matrixcalculator.c: 49:         cmd(0x10);
   303   0006CA  0E10               	movlw	16
   304   0006CC  ECAB  F004         	call	_cmd
   305   0006D0                     l52:
   306   0006D0  AE81               	btfss	3969,7,c	;volatile
   307   0006D2  EF6D  F003         	goto	u491
   308   0006D6  EF6F  F003         	goto	u490
   309   0006DA                     u491:
   310   0006DA  EF68  F003         	goto	l52
   311   0006DE                     u490:
   312   0006DE                     l974:
   313                           
   314                           ;matrixcalculator.c: 54:     PORTB=0X0D;
   315   0006DE  0E0D               	movlw	13
   316   0006E0  6E81               	movwf	129,c	;volatile
   317   0006E2                     
   318                           ;matrixcalculator.c: 55:     if(RB4==0)
   319   0006E2  B881               	btfsc	3969,4,c	;volatile
   320   0006E4  EF76  F003         	goto	u501
   321   0006E8  EF78  F003         	goto	u500
   322   0006EC                     u501:
   323   0006EC  EF85  F003         	goto	l55
   324   0006F0                     u500:
   325   0006F0                     
   326                           ;matrixcalculator.c: 56:     {;matrixcalculator.c: 58:         display("4");
   327   0006F0  0E0B               	movlw	low STR_5
   328   0006F2  6E06               	movwf	display@p^0,c
   329   0006F4  ECDB  F004         	call	_display	;wreg free
   330   0006F8                     l56:
   331   0006F8  A881               	btfss	3969,4,c	;volatile
   332   0006FA  EF81  F003         	goto	u511
   333   0006FE  EF83  F003         	goto	u510
   334   000702                     u511:
   335   000702  EF7C  F003         	goto	l56
   336   000706                     u510:
   337   000706  EFBB  F003         	goto	l986
   338   00070A                     l55:
   339   00070A  BA81               	btfsc	3969,5,c	;volatile
   340   00070C  EF8A  F003         	goto	u521
   341   000710  EF8C  F003         	goto	u520
   342   000714                     u521:
   343   000714  EF99  F003         	goto	l60
   344   000718                     u520:
   345   000718                     
   346                           ;matrixcalculator.c: 62:     {;matrixcalculator.c: 64:         display("5");
   347   000718  0E0D               	movlw	low STR_6
   348   00071A  6E06               	movwf	display@p^0,c
   349   00071C  ECDB  F004         	call	_display	;wreg free
   350   000720                     l61:
   351   000720  AA81               	btfss	3969,5,c	;volatile
   352   000722  EF95  F003         	goto	u531
   353   000726  EF97  F003         	goto	u530
   354   00072A                     u531:
   355   00072A  EF90  F003         	goto	l61
   356   00072E                     u530:
   357   00072E  EFBB  F003         	goto	l986
   358   000732                     l60:
   359   000732  BC81               	btfsc	3969,6,c	;volatile
   360   000734  EF9E  F003         	goto	u541
   361   000738  EFA0  F003         	goto	u540
   362   00073C                     u541:
   363   00073C  EFAD  F003         	goto	l65
   364   000740                     u540:
   365   000740                     
   366                           ;matrixcalculator.c: 68:     {;matrixcalculator.c: 70:         display("6");
   367   000740  0E0F               	movlw	low STR_7
   368   000742  6E06               	movwf	display@p^0,c
   369   000744  ECDB  F004         	call	_display	;wreg free
   370   000748                     l66:
   371   000748  AC81               	btfss	3969,6,c	;volatile
   372   00074A  EFA9  F003         	goto	u551
   373   00074E  EFAB  F003         	goto	u550
   374   000752                     u551:
   375   000752  EFA4  F003         	goto	l66
   376   000756                     u550:
   377   000756  EFBB  F003         	goto	l986
   378   00075A                     l65:
   379   00075A  BE81               	btfsc	3969,7,c	;volatile
   380   00075C  EFB2  F003         	goto	u561
   381   000760  EFB4  F003         	goto	u560
   382   000764                     u561:
   383   000764  EFBB  F003         	goto	l986
   384   000768                     u560:
   385   000768                     l71:
   386   000768  AE81               	btfss	3969,7,c	;volatile
   387   00076A  EFB9  F003         	goto	u571
   388   00076E  EFBB  F003         	goto	u570
   389   000772                     u571:
   390   000772  EFB4  F003         	goto	l71
   391   000776                     u570:
   392   000776                     l986:
   393                           
   394                           ;matrixcalculator.c: 79:     PORTB=0X0B;
   395   000776  0E0B               	movlw	11
   396   000778  6E81               	movwf	129,c	;volatile
   397   00077A                     
   398                           ;matrixcalculator.c: 80:     if(RB4==0)
   399   00077A  B881               	btfsc	3969,4,c	;volatile
   400   00077C  EFC2  F003         	goto	u581
   401   000780  EFC4  F003         	goto	u580
   402   000784                     u581:
   403   000784  EFD1  F003         	goto	l74
   404   000788                     u580:
   405   000788                     
   406                           ;matrixcalculator.c: 81:     {;matrixcalculator.c: 83:         display("1");
   407   000788  0E05               	movlw	low STR_8
   408   00078A  6E06               	movwf	display@p^0,c
   409   00078C  ECDB  F004         	call	_display	;wreg free
   410   000790                     l75:
   411   000790  A881               	btfss	3969,4,c	;volatile
   412   000792  EFCD  F003         	goto	u591
   413   000796  EFCF  F003         	goto	u590
   414   00079A                     u591:
   415   00079A  EFC8  F003         	goto	l75
   416   00079E                     u590:
   417   00079E  EF07  F004         	goto	l998
   418   0007A2                     l74:
   419   0007A2  BA81               	btfsc	3969,5,c	;volatile
   420   0007A4  EFD6  F003         	goto	u601
   421   0007A8  EFD8  F003         	goto	u600
   422   0007AC                     u601:
   423   0007AC  EFE5  F003         	goto	l79
   424   0007B0                     u600:
   425   0007B0                     
   426                           ;matrixcalculator.c: 87:     {;matrixcalculator.c: 88:     display("2");
   427   0007B0  0E07               	movlw	low STR_9
   428   0007B2  6E06               	movwf	display@p^0,c
   429   0007B4  ECDB  F004         	call	_display	;wreg free
   430   0007B8                     l80:
   431   0007B8  AA81               	btfss	3969,5,c	;volatile
   432   0007BA  EFE1  F003         	goto	u611
   433   0007BE  EFE3  F003         	goto	u610
   434   0007C2                     u611:
   435   0007C2  EFDC  F003         	goto	l80
   436   0007C6                     u610:
   437   0007C6  EF07  F004         	goto	l998
   438   0007CA                     l79:
   439   0007CA  BC81               	btfsc	3969,6,c	;volatile
   440   0007CC  EFEA  F003         	goto	u621
   441   0007D0  EFEC  F003         	goto	u620
   442   0007D4                     u621:
   443   0007D4  EFF9  F003         	goto	l84
   444   0007D8                     u620:
   445   0007D8                     
   446                           ;matrixcalculator.c: 93:     {;matrixcalculator.c: 94:      display("3");
   447   0007D8  0E09               	movlw	low STR_10
   448   0007DA  6E06               	movwf	display@p^0,c
   449   0007DC  ECDB  F004         	call	_display	;wreg free
   450   0007E0                     l85:
   451   0007E0  AC81               	btfss	3969,6,c	;volatile
   452   0007E2  EFF5  F003         	goto	u631
   453   0007E6  EFF7  F003         	goto	u630
   454   0007EA                     u631:
   455   0007EA  EFF0  F003         	goto	l85
   456   0007EE                     u630:
   457   0007EE  EF07  F004         	goto	l998
   458   0007F2                     l84:
   459   0007F2  BE81               	btfsc	3969,7,c	;volatile
   460   0007F4  EFFE  F003         	goto	u641
   461   0007F8  EF00  F004         	goto	u640
   462   0007FC                     u641:
   463   0007FC  EF07  F004         	goto	l998
   464   000800                     u640:
   465   000800                     l90:
   466   000800  AC81               	btfss	3969,6,c	;volatile
   467   000802  EF05  F004         	goto	u651
   468   000806  EF07  F004         	goto	u650
   469   00080A                     u651:
   470   00080A  EF00  F004         	goto	l90
   471   00080E                     u650:
   472   00080E                     l998:
   473                           
   474                           ;matrixcalculator.c: 103:      PORTB=0X07;
   475   00080E  0E07               	movlw	7
   476   000810  6E81               	movwf	129,c	;volatile
   477   000812                     
   478                           ;matrixcalculator.c: 104:     if(RB4==0)
   479   000812  B881               	btfsc	3969,4,c	;volatile
   480   000814  EF0E  F004         	goto	u661
   481   000818  EF10  F004         	goto	u660
   482   00081C                     u661:
   483   00081C  EF40  F004         	goto	l93
   484   000820                     u660:
   485   000820                     
   486                           ;matrixcalculator.c: 105:     {;matrixcalculator.c: 106:         if(count==0)
   487   000820  5007               	movf	main@count^0,w,c
   488   000822  1008               	iorwf	(main@count+1)^0,w,c
   489   000824  A4D8               	btfss	status,2,c
   490   000826  EF17  F004         	goto	u671
   491   00082A  EF19  F004         	goto	u670
   492   00082E                     u671:
   493   00082E  EF27  F004         	goto	l1008
   494   000832                     u670:
   495   000832                     
   496                           ;matrixcalculator.c: 107:         {;matrixcalculator.c: 108:             cmd(0x08);
   497   000832  0E08               	movlw	8
   498   000834  ECAB  F004         	call	_cmd
   499   000838                     l95:
   500   000838  A881               	btfss	3969,4,c	;volatile
   501   00083A  EF21  F004         	goto	u681
   502   00083E  EF23  F004         	goto	u680
   503   000842                     u681:
   504   000842  EF1C  F004         	goto	l95
   505   000846                     u680:
   506   000846                     
   507                           ;matrixcalculator.c: 110:              count++;
   508   000846  4A07               	infsnz	main@count^0,f,c
   509   000848  2A08               	incf	(main@count+1)^0,f,c
   510                           
   511                           ;matrixcalculator.c: 111:     }
   512   00084A  EF19  F003         	goto	l958
   513   00084E                     l1008:
   514   00084E  0407               	decf	main@count^0,w,c
   515   000850  1008               	iorwf	(main@count+1)^0,w,c
   516   000852  A4D8               	btfss	status,2,c
   517   000854  EF2E  F004         	goto	u691
   518   000858  EF30  F004         	goto	u690
   519   00085C                     u691:
   520   00085C  EF77  F004         	goto	l103
   521   000860                     u690:
   522   000860                     
   523                           ;matrixcalculator.c: 113:         {;matrixcalculator.c: 114:             cmd(0x0E);
   524   000860  0E0E               	movlw	14
   525   000862  ECAB  F004         	call	_cmd
   526   000866                     l100:
   527   000866  A881               	btfss	3969,4,c	;volatile
   528   000868  EF38  F004         	goto	u701
   529   00086C  EF3A  F004         	goto	u700
   530   000870                     u701:
   531   000870  EF33  F004         	goto	l100
   532   000874                     u700:
   533   000874                     
   534                           ;matrixcalculator.c: 116:              count=0;
   535   000874  0E00               	movlw	0
   536   000876  6E08               	movwf	(main@count+1)^0,c
   537   000878  0E00               	movlw	0
   538   00087A  6E07               	movwf	main@count^0,c
   539   00087C  EF19  F003         	goto	l958
   540   000880                     l93:
   541   000880  BA81               	btfsc	3969,5,c	;volatile
   542   000882  EF45  F004         	goto	u711
   543   000886  EF47  F004         	goto	u710
   544   00088A                     u711:
   545   00088A  EF54  F004         	goto	l104
   546   00088E                     u710:
   547   00088E                     
   548                           ;matrixcalculator.c: 120:     {;matrixcalculator.c: 122:         display("0");
   549   00088E  0E03               	movlw	low STR_11
   550   000890  6E06               	movwf	display@p^0,c
   551   000892  ECDB  F004         	call	_display	;wreg free
   552   000896                     l105:
   553   000896  AA81               	btfss	3969,5,c	;volatile
   554   000898  EF50  F004         	goto	u721
   555   00089C  EF52  F004         	goto	u720
   556   0008A0                     u721:
   557   0008A0  EF4B  F004         	goto	l105
   558   0008A4                     u720:
   559   0008A4  EF19  F003         	goto	l958
   560   0008A8                     l104:
   561   0008A8  BC81               	btfsc	3969,6,c	;volatile
   562   0008AA  EF59  F004         	goto	u731
   563   0008AE  EF5B  F004         	goto	u730
   564   0008B2                     u731:
   565   0008B2  EF67  F004         	goto	l109
   566   0008B6                     u730:
   567   0008B6                     
   568                           ;matrixcalculator.c: 126:     {;matrixcalculator.c: 128:         cmd(0x01);
   569   0008B6  0E01               	movlw	1
   570   0008B8  ECAB  F004         	call	_cmd
   571   0008BC                     l110:
   572   0008BC  AC81               	btfss	3969,6,c	;volatile
   573   0008BE  EF63  F004         	goto	u741
   574   0008C2  EF65  F004         	goto	u740
   575   0008C6                     u741:
   576   0008C6  EF5E  F004         	goto	l110
   577   0008CA                     u740:
   578   0008CA  EF19  F003         	goto	l958
   579   0008CE                     l109:
   580   0008CE  BE81               	btfsc	3969,7,c	;volatile
   581   0008D0  EF6C  F004         	goto	u751
   582   0008D4  EF6E  F004         	goto	u750
   583   0008D8                     u751:
   584   0008D8  EF19  F003         	goto	l958
   585   0008DC                     u750:
   586   0008DC                     l115:
   587   0008DC  AE81               	btfss	3969,7,c	;volatile
   588   0008DE  EF73  F004         	goto	u761
   589   0008E2  EF75  F004         	goto	u760
   590   0008E6                     u761:
   591   0008E6  EF6E  F004         	goto	l115
   592   0008EA                     u760:
   593   0008EA  EF19  F003         	goto	l958
   594   0008EE                     l103:
   595   0008EE  EF19  F003         	goto	l958
   596   0008F2  EF00  F000         	goto	start
   597   0008F6                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _display *****************
   601 ;; Defined at:
   602 ;;		line 161 in file "matrixcalculator.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  p               1    5[COMRAM] PTR const unsigned char 
   605 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
   606 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
   607 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   619 ;;      Params:         1       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0
   622 ;;      Totals:         1       0       0       0       0       0       0
   623 ;;Total ram usage:        1 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		_data
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634   0009B6                     __ptext1:
   635                           	callstack 0
   636   0009B6                     _display:
   637                           	callstack 29
   638   0009B6                     
   639                           ;matrixcalculator.c: 161: void display(const char *p);matrixcalculator.c: 162: {;matrixc
      +                          alculator.c: 163:     while(*p)
   640   0009B6  EFE4  F004         	goto	l950
   641   0009BA                     l946:
   642                           
   643                           ;matrixcalculator.c: 164:     {;matrixcalculator.c: 165:         data(*p);
   644   0009BA  C006  FFF6         	movff	display@p,tblptrl
   645   0009BE                     	if	0	;There is only one active tblptr byte
   646   0009BE                     	endif
   647   0009BE                     	if	0	;tblptru may be non-zero
   648   0009BE                     	endif
   649   0009BE                     	if	0	;tblptru may be non-zero
   650   0009BE                     	endif
   651   0009BE  0008               	tblrd		*
   652   0009C0  50F5               	movf	tablat,w,c
   653   0009C2  EC7B  F004         	call	_data
   654   0009C6                     
   655                           ;matrixcalculator.c: 166: p++;
   656   0009C6  2A06               	incf	display@p^0,f,c
   657   0009C8                     l950:
   658                           
   659                           ;matrixcalculator.c: 163:     while(*p)
   660   0009C8  C006  FFF6         	movff	display@p,tblptrl
   661   0009CC                     	if	0	;There is only one active tblptr byte
   662   0009CC                     	endif
   663   0009CC                     	if	0	;tblptru may be non-zero
   664   0009CC                     	endif
   665   0009CC                     	if	0	;tblptru may be non-zero
   666   0009CC                     	endif
   667   0009CC  0008               	tblrd		*
   668   0009CE  50F5               	movf	tablat,w,c
   669   0009D0  0900               	iorlw	0
   670   0009D2  A4D8               	btfss	status,2,c
   671   0009D4  EFEE  F004         	goto	u411
   672   0009D8  EFF0  F004         	goto	u410
   673   0009DC                     u411:
   674   0009DC  EFDD  F004         	goto	l946
   675   0009E0                     u410:
   676   0009E0  0012               	return		;funcret
   677   0009E2                     __end_of_display:
   678                           	callstack 0
   679                           
   680 ;; *************** function _data *****************
   681 ;; Defined at:
   682 ;;		line 150 in file "matrixcalculator.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  b               1    wreg     unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  b               1    0[COMRAM] unsigned char 
   687 ;;  i               2    3[COMRAM] int 
   688 ;;  i               2    1[COMRAM] int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   698 ;;      Params:         0       0       0       0       0       0       0
   699 ;;      Locals:         5       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0
   701 ;;      Totals:         5       0       0       0       0       0       0
   702 ;;Total ram usage:        5 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_display
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712   0008F6                     __ptext2:
   713                           	callstack 0
   714   0008F6                     _data:
   715                           	callstack 29
   716                           
   717                           ;incstack = 0
   718                           ;data@b stored from wreg
   719   0008F6  6E01               	movwf	data@b^0,c
   720   0008F8                     
   721                           ;matrixcalculator.c: 150: void data(unsigned char b );matrixcalculator.c: 151: {;matrixc
      +                          alculator.c: 152:     RC0=1;
   722   0008F8  8082               	bsf	3970,0,c	;volatile
   723                           
   724                           ;matrixcalculator.c: 153:     RC1=0;
   725   0008FA  9282               	bcf	3970,1,c	;volatile
   726   0008FC                     
   727                           ;matrixcalculator.c: 154:     PORTD=b;
   728   0008FC  C001  FF83         	movff	data@b,3971	;volatile
   729   000900                     
   730                           ;matrixcalculator.c: 155:     RC2=1;
   731   000900  8482               	bsf	3970,2,c	;volatile
   732   000902                     
   733                           ;matrixcalculator.c: 156:     for(int i=0;i<=100;i++);
   734   000902  0E00               	movlw	0
   735   000904  6E03               	movwf	(data@i+1)^0,c
   736   000906  0E00               	movlw	0
   737   000908  6E02               	movwf	data@i^0,c
   738   00090A                     l828:
   739   00090A  4A02               	infsnz	data@i^0,f,c
   740   00090C  2A03               	incf	(data@i+1)^0,f,c
   741   00090E  BE03               	btfsc	(data@i+1)^0,7,c
   742   000910  EF93  F004         	goto	u11
   743   000914  5003               	movf	(data@i+1)^0,w,c
   744   000916  E109               	bnz	u10
   745   000918  0E65               	movlw	101
   746   00091A  5C02               	subwf	data@i^0,w,c
   747   00091C  A0D8               	btfss	status,0,c
   748   00091E  EF93  F004         	goto	u11
   749   000922  EF95  F004         	goto	u10
   750   000926                     u11:
   751   000926  EF85  F004         	goto	l828
   752   00092A                     u10:
   753   00092A                     
   754                           ;matrixcalculator.c: 157:     RC2=0;
   755   00092A  9482               	bcf	3970,2,c	;volatile
   756   00092C                     
   757                           ;matrixcalculator.c: 158:     for(int i=0;i<=5000;i++);
   758   00092C  0E00               	movlw	0
   759   00092E  6E05               	movwf	(data@i_71+1)^0,c
   760   000930  0E00               	movlw	0
   761   000932  6E04               	movwf	data@i_71^0,c
   762   000934                     l838:
   763   000934  4A04               	infsnz	data@i_71^0,f,c
   764   000936  2A05               	incf	(data@i_71+1)^0,f,c
   765   000938  BE05               	btfsc	(data@i_71+1)^0,7,c
   766   00093A  EFA8  F004         	goto	u21
   767   00093E  0E89               	movlw	137
   768   000940  5C04               	subwf	data@i_71^0,w,c
   769   000942  0E13               	movlw	19
   770   000944  5805               	subwfb	(data@i_71+1)^0,w,c
   771   000946  A0D8               	btfss	status,0,c
   772   000948  EFA8  F004         	goto	u21
   773   00094C  EFAA  F004         	goto	u20
   774   000950                     u21:
   775   000950  EF9A  F004         	goto	l838
   776   000954                     u20:
   777   000954  0012               	return		;funcret
   778   000956                     __end_of_data:
   779                           	callstack 0
   780                           
   781 ;; *************** function _cmd *****************
   782 ;; Defined at:
   783 ;;		line 140 in file "matrixcalculator.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  a               1    wreg     unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  a               1    0[COMRAM] unsigned char 
   788 ;;  i               2    3[COMRAM] int 
   789 ;;  i               2    1[COMRAM] int 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   799 ;;      Params:         0       0       0       0       0       0       0
   800 ;;      Locals:         5       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0
   802 ;;      Totals:         5       0       0       0       0       0       0
   803 ;;Total ram usage:        5 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text3
   813   000956                     __ptext3:
   814                           	callstack 0
   815   000956                     _cmd:
   816                           	callstack 30
   817                           
   818                           ;incstack = 0
   819                           ;cmd@a stored from wreg
   820   000956  6E01               	movwf	cmd@a^0,c
   821   000958                     
   822                           ;matrixcalculator.c: 140: void cmd(unsigned char a );matrixcalculator.c: 141: {;matrixca
      +                          lculator.c: 142:     RC0=0;
   823   000958  9082               	bcf	3970,0,c	;volatile
   824                           
   825                           ;matrixcalculator.c: 143:     RC1=0;
   826   00095A  9282               	bcf	3970,1,c	;volatile
   827   00095C                     
   828                           ;matrixcalculator.c: 144:     PORTD=a;
   829   00095C  C001  FF83         	movff	cmd@a,3971	;volatile
   830   000960                     
   831                           ;matrixcalculator.c: 145:     RC2=1;
   832   000960  8482               	bsf	3970,2,c	;volatile
   833   000962                     
   834                           ;matrixcalculator.c: 146:     for(int i=0;i<=100;i++);
   835   000962  0E00               	movlw	0
   836   000964  6E03               	movwf	(cmd@i+1)^0,c
   837   000966  0E00               	movlw	0
   838   000968  6E02               	movwf	cmd@i^0,c
   839   00096A                     l854:
   840   00096A  4A02               	infsnz	cmd@i^0,f,c
   841   00096C  2A03               	incf	(cmd@i+1)^0,f,c
   842   00096E  BE03               	btfsc	(cmd@i+1)^0,7,c
   843   000970  EFC3  F004         	goto	u31
   844   000974  5003               	movf	(cmd@i+1)^0,w,c
   845   000976  E109               	bnz	u30
   846   000978  0E65               	movlw	101
   847   00097A  5C02               	subwf	cmd@i^0,w,c
   848   00097C  A0D8               	btfss	status,0,c
   849   00097E  EFC3  F004         	goto	u31
   850   000982  EFC5  F004         	goto	u30
   851   000986                     u31:
   852   000986  EFB5  F004         	goto	l854
   853   00098A                     u30:
   854   00098A                     
   855                           ;matrixcalculator.c: 147:     RC2=0;
   856   00098A  9482               	bcf	3970,2,c	;volatile
   857   00098C                     
   858                           ;matrixcalculator.c: 148:     for(int i=0;i<=5000;i++);
   859   00098C  0E00               	movlw	0
   860   00098E  6E05               	movwf	(cmd@i_67+1)^0,c
   861   000990  0E00               	movlw	0
   862   000992  6E04               	movwf	cmd@i_67^0,c
   863   000994                     l864:
   864   000994  4A04               	infsnz	cmd@i_67^0,f,c
   865   000996  2A05               	incf	(cmd@i_67+1)^0,f,c
   866   000998  BE05               	btfsc	(cmd@i_67+1)^0,7,c
   867   00099A  EFD8  F004         	goto	u41
   868   00099E  0E89               	movlw	137
   869   0009A0  5C04               	subwf	cmd@i_67^0,w,c
   870   0009A2  0E13               	movlw	19
   871   0009A4  5805               	subwfb	(cmd@i_67+1)^0,w,c
   872   0009A6  A0D8               	btfss	status,0,c
   873   0009A8  EFD8  F004         	goto	u41
   874   0009AC  EFDA  F004         	goto	u40
   875   0009B0                     u41:
   876   0009B0  EFCA  F004         	goto	l864
   877   0009B4                     u40:
   878   0009B4  0012               	return		;funcret
   879   0009B6                     __end_of_cmd:
   880                           	callstack 0
   881                           
   882                           	psect	rparam
   883   000000                     tosu	equ	0xFFF
   884                           tosh	equ	0xFFE
   885                           tosl	equ	0xFFD
   886                           stkptr	equ	0xFFC
   887                           pclatu	equ	0xFFB
   888                           pclath	equ	0xFFA
   889                           pcl	equ	0xFF9
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           prodh	equ	0xFF4
   895                           prodl	equ	0xFF3
   896                           indf0	equ	0xFEF
   897                           postinc0	equ	0xFEE
   898                           postdec0	equ	0xFED
   899                           preinc0	equ	0xFEC
   900                           plusw0	equ	0xFEB
   901                           fsr0h	equ	0xFEA
   902                           fsr0l	equ	0xFE9
   903                           wreg	equ	0xFE8
   904                           indf1	equ	0xFE7
   905                           postinc1	equ	0xFE6
   906                           postdec1	equ	0xFE5
   907                           preinc1	equ	0xFE4
   908                           plusw1	equ	0xFE3
   909                           fsr1h	equ	0xFE2
   910                           fsr1l	equ	0xFE1
   911                           bsr	equ	0xFE0
   912                           indf2	equ	0xFDF
   913                           postinc2	equ	0xFDE
   914                           postdec2	equ	0xFDD
   915                           preinc2	equ	0xFDC
   916                           plusw2	equ	0xFDB
   917                           fsr2h	equ	0xFDA
   918                           fsr2l	equ	0xFD9
   919                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_10(CODE[2]), STR_11(CODE[2]), STR_2(CODE[2]), 
		 -> STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), 
		 -> STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1078
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     956
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             5FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 10 18:14:26 2024

                     l41 0686                       l42 0674                       l60 0732  
                     l52 06D0                       l36 065E                       l61 0720  
                     l37 064C                       l46 06AE                       l71 0768  
                     l55 070A                       l47 069C                       l80 07B8  
                     l56 06F8                       l65 075A                       l90 0800  
                     l74 07A2                       l66 0748                       l75 0790  
                     l84 07F2                       l93 0880                       l85 07E0  
                     l95 0838                       l79 07CA                       u10 092A  
                     u11 0926                       u20 0954                       u21 0950  
                     u30 098A                       u31 0986                       u40 09B4  
                     u41 09B0                      l100 0866                      l110 08BC  
                    l103 08EE                      l104 08A8                      l105 0896  
                    l131 092A                      l115 08DC                      l124 098A  
                    l140 09E0                      l109 08CE                      l134 0954  
                    l127 09B4                      l820 0900                      l830 090E  
                    l822 0902                      l840 0938                      l832 092C  
                    l816 08F8                      l842 0958                      l818 08FC  
                    l844 095C                      l828 090A                      l854 096A  
                    l846 0960                      l838 0934                      l950 09C8  
                    l864 0994                      l856 096E                      l848 0962  
                    l944 09B6                      l960 0636                      l952 0618  
                    l866 0998                      l858 098C                      l946 09BA  
                    l970 06C2                      l962 0644                      l954 0628  
                    l948 09C6                      l980 0718                      l972 06CA  
                    l964 066C                      l956 062E                      l990 0788  
                    l982 0740                      l966 0694                      l974 06DE  
                    l958 0632                      l992 07B0                      l976 06E2  
                    l968 06BC                      l994 07D8                      l986 0776  
                    l978 06F0                      l988 077A                      l998 080E  
                    _RC0 7C10                      _RC1 7C11                      _RB4 7C0C  
                    _RC2 7C12                      _RB5 7C0D                      _RB6 7C0E  
                    _RB7 7C0F                      u410 09E0                      u411 09DC  
                    u500 06F0                      u420 0644                      u501 06EC  
                    u421 0640                      u510 0706                      u430 065A  
                    u511 0702                      u431 0656                      u600 07B0  
                    u520 0718                      u440 066C                      u601 07AC  
                    u521 0714                      u441 0668                      u610 07C6  
                    u530 072E                      u450 0682                      u611 07C2  
                    u531 072A                      u451 067E                      u700 0874  
                    u620 07D8                      u540 0740                      u460 0694  
                    u701 0870                      u621 07D4                      u541 073C  
                    u461 0690                      u710 088E                      u630 07EE  
                    u550 0756                      u470 06AA                      u711 088A  
                    u631 07EA                      u551 0752                      u471 06A6  
                    u720 08A4                      u640 0800                      u560 0768  
                    u480 06BC                      u721 08A0                      u641 07FC  
                    u561 0764                      u481 06B8                      u730 08B6  
                    u650 080E                      u570 0776                      u490 06DE  
                    u731 08B2                      u651 080A                      u571 0772  
                    u491 06DA                      u740 08CA                      u660 0820  
                    u580 0788                      u741 08C6                      u661 081C  
                    u581 0784                      u750 08DC                      u670 0832  
                    u590 079E                      u751 08D8                      u671 082E  
                    u591 079A                      u760 08EA                      u680 0846  
                    u761 08E6                      u681 0842                      u690 0860  
                    u691 085C                      _cmd 0956                     l1000 0812  
                   l1010 0860                     l1002 0820                     l1012 0874  
                   l1004 0832                     l1014 088E                     l1006 0846  
                   l1016 08B6                     l1008 084E                     ?_cmd 0001  
                   STR_1 0611                     STR_2 0613                     STR_3 0615  
                   STR_4 0601                     STR_5 060B                     STR_6 060D  
                   STR_7 060F                     STR_8 0605                     STR_9 0607  
                   _data 08F6                     cmd@a 0001                     cmd@i 0002  
                   _main 0618                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  STR_10 0609                    STR_11 0603                    _PORTB 0F81  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 09E2                    data@b 0001  
                  data@i 0002                    tablat 0FF5                    status 0FD8  
        __initialization 09E2             __end_of_data 0956             __end_of_main 08F6  
                 ??_data 0001                   ??_main 0007            __activetblptr 0001  
                 _ADCON1 0FC1                   isa$std 0001                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 09E2  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 09E2  
                __ramtop 0600                  __ptext0 0618                  __ptext1 09B6  
                __ptext2 08F6                  __ptext3 0956                  cmd@i_67 0004  
                _display 09B6     end_of_initialization 09E2      start_initialization 09E2  
            __end_of_cmd 09B6                 ?_display 0006              __smallconst 0600  
              main@count 0007                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_71 0004                 isa$xinst 0000  
               display@p 0006  
