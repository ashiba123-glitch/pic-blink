

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 07 09:04:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RC2	set	31762
    51   000000                     _RC1	set	31761
    52   000000                     _TRISC	set	3988
    53   000000                     _RC0	set	31760
    54   000000                     _TRISD	set	3989
    55   000000                     _PORTD	set	3971
    56                           
    57                           	psect	smallconst
    58   000600                     __psmallconst:
    59                           	callstack 0
    60   000600  00                 	db	0
    61   000601                     STR_1:
    62   000601  61                 	db	97	;'a'
    63   000602  73                 	db	115	;'s'
    64   000603  68                 	db	104	;'h'
    65   000604  69                 	db	105	;'i'
    66   000605  62                 	db	98	;'b'
    67   000606  61                 	db	97	;'a'
    68   000607  20                 	db	32
    69   000608  00                 	db	0
    70   000609  00                 	db	0	; dummy byte at the end
    71   000000                     
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   00074E                     __pcinit:
    76                           	callstack 0
    77   00074E                     start_initialization:
    78                           	callstack 0
    79   00074E                     __initialization:
    80                           	callstack 0
    81   00074E                     end_of_initialization:
    82                           	callstack 0
    83   00074E                     __end_of__initialization:
    84                           	callstack 0
    85   00074E  0E00               	movlw	low (__Lsmallconst shr (0+16))
    86   000750  6EF8               	movwf	tblptru,c
    87   000752  0E06               	movlw	high __Lsmallconst
    88   000754  6EF7               	movwf	tblptrh,c
    89   000756  0100               	movlb	0
    90   000758  EF65  F003         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	cstackCOMRAM
    93   000001                     __pcstackCOMRAM:
    94                           	callstack 0
    95   000001                     cmd@a:
    96                           	callstack 0
    97   000001                     data@a:
    98                           	callstack 0
    99   000001                     delay@i:
   100                           	callstack 0
   101                           
   102                           ; 2 bytes @ 0x0
   103   000001                     	ds	1
   104   000002                     cmd@i:
   105                           	callstack 0
   106   000002                     data@i:
   107                           	callstack 0
   108                           
   109                           ; 2 bytes @ 0x1
   110   000002                     	ds	2
   111   000004                     cmd@i_53:
   112                           	callstack 0
   113   000004                     data@i_57:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0x3
   117   000004                     	ds	2
   118   000006                     display@p:
   119                           	callstack 0
   120                           
   121                           ; 1 bytes @ 0x5
   122   000006                     	ds	1
   123   000007                     
   124                           ; 1 bytes @ 0x6
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 12 in file "scrolling2.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   144 ;;      Params:         0       0       0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0       0       0
   147 ;;      Totals:         0       0       0       0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called: 2
   150 ;; This function calls:
   151 ;;		_cmd
   152 ;;		_delay
   153 ;;		_display
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160   0006CA                     __ptext0:
   161                           	callstack 0
   162   0006CA                     _main:
   163                           	callstack 29
   164   0006CA                     
   165                           ;scrolling2.c: 14: TRISC=0X00;
   166   0006CA  0E00               	movlw	0
   167   0006CC  6E94               	movwf	148,c	;volatile
   168                           
   169                           ;scrolling2.c: 15: TRISD=0X00;
   170   0006CE  0E00               	movlw	0
   171   0006D0  6E95               	movwf	149,c	;volatile
   172   0006D2                     
   173                           ;scrolling2.c: 16: cmd(0x0f);
   174   0006D2  0E0F               	movlw	15
   175   0006D4  EC35  F003         	call	_cmd
   176   0006D8                     
   177                           ;scrolling2.c: 17: cmd(0x0c);
   178   0006D8  0E0C               	movlw	12
   179   0006DA  EC35  F003         	call	_cmd
   180   0006DE                     
   181                           ;scrolling2.c: 18: display("ashiba ");
   182   0006DE  0E01               	movlw	low STR_1
   183   0006E0  6E06               	movwf	display@p^0,c
   184   0006E2  EC7C  F003         	call	_display	;wreg free
   185   0006E6                     l825:
   186                           
   187                           ;scrolling2.c: 20: {;scrolling2.c: 21: cmd(0x18);
   188   0006E6  0E18               	movlw	24
   189   0006E8  EC35  F003         	call	_cmd
   190   0006EC                     
   191                           ;scrolling2.c: 22: delay();
   192   0006EC  EC92  F003         	call	_delay	;wreg free
   193   0006F0  EF73  F003         	goto	l825
   194   0006F4  EF00  F000         	goto	start
   195   0006F8                     __end_of_main:
   196                           	callstack 0
   197                           
   198 ;; *************** function _display *****************
   199 ;; Defined at:
   200 ;;		line 50 in file "scrolling2.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;  p               1    5[COMRAM] PTR const unsigned char 
   203 ;;		 -> STR_1(8), 
   204 ;; Auto vars:     Size  Location     Type
   205 ;;		None
   206 ;; Return value:  Size  Location     Type
   207 ;;                  1    wreg      void 
   208 ;; Registers used:
   209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   215 ;;      Params:         1       0       0       0       0       0       0
   216 ;;      Locals:         0       0       0       0       0       0       0
   217 ;;      Temps:          0       0       0       0       0       0       0
   218 ;;      Totals:         1       0       0       0       0       0       0
   219 ;;Total ram usage:        1 bytes
   220 ;; Hardware stack levels used: 1
   221 ;; Hardware stack levels required when called: 1
   222 ;; This function calls:
   223 ;;		_data
   224 ;; This function is called by:
   225 ;;		_main
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text1
   230   0006F8                     __ptext1:
   231                           	callstack 0
   232   0006F8                     _display:
   233                           	callstack 29
   234   0006F8                     
   235                           ;scrolling2.c: 50: void display(const char *p);scrolling2.c: 51: {;scrolling2.c: 52:    
      +                           while(*p)
   236   0006F8  EF85  F003         	goto	l815
   237   0006FC                     l811:
   238                           
   239                           ;scrolling2.c: 53:     {;scrolling2.c: 54:         data(*p);
   240   0006FC  C006  FFF6         	movff	display@p,tblptrl
   241   000700                     	if	0	;There is only one active tblptr byte
   242   000700                     	endif
   243   000700                     	if	0	;tblptru may be non-zero
   244   000700                     	endif
   245   000700                     	if	0	;tblptru may be non-zero
   246   000700                     	endif
   247   000700  0008               	tblrd		*
   248   000702  50F5               	movf	tablat,w,c
   249   000704  EC05  F003         	call	_data
   250   000708                     
   251                           ;scrolling2.c: 55:         p++;
   252   000708  2A06               	incf	display@p^0,f,c
   253   00070A                     l815:
   254                           
   255                           ;scrolling2.c: 52:     while(*p)
   256   00070A  C006  FFF6         	movff	display@p,tblptrl
   257   00070E                     	if	0	;There is only one active tblptr byte
   258   00070E                     	endif
   259   00070E                     	if	0	;tblptru may be non-zero
   260   00070E                     	endif
   261   00070E                     	if	0	;tblptru may be non-zero
   262   00070E                     	endif
   263   00070E  0008               	tblrd		*
   264   000710  50F5               	movf	tablat,w,c
   265   000712  0900               	iorlw	0
   266   000714  A4D8               	btfss	status,2,c
   267   000716  EF8F  F003         	goto	u71
   268   00071A  EF91  F003         	goto	u70
   269   00071E                     u71:
   270   00071E  EF7E  F003         	goto	l811
   271   000722                     u70:
   272   000722  0012               	return		;funcret
   273   000724                     __end_of_display:
   274                           	callstack 0
   275                           
   276 ;; *************** function _data *****************
   277 ;; Defined at:
   278 ;;		line 38 in file "scrolling2.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;  a               1    wreg     unsigned char 
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  a               1    0[COMRAM] unsigned char 
   283 ;;  i               2    3[COMRAM] int 
   284 ;;  i               2    1[COMRAM] int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   294 ;;      Params:         0       0       0       0       0       0       0
   295 ;;      Locals:         5       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0
   297 ;;      Totals:         5       0       0       0       0       0       0
   298 ;;Total ram usage:        5 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_display
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text2
   308   00060A                     __ptext2:
   309                           	callstack 0
   310   00060A                     _data:
   311                           	callstack 29
   312                           
   313                           ;incstack = 0
   314                           ;data@a stored from wreg
   315   00060A  6E01               	movwf	data@a^0,c
   316   00060C                     
   317                           ;scrolling2.c: 38: void data(unsigned char a );scrolling2.c: 39: {;scrolling2.c: 41:    
      +                           RC0=1;
   318   00060C  8082               	bsf	3970,0,c	;volatile
   319                           
   320                           ;scrolling2.c: 42:     RC1=0;
   321   00060E  9282               	bcf	3970,1,c	;volatile
   322   000610                     
   323                           ;scrolling2.c: 43:     PORTD=a;
   324   000610  C001  FF83         	movff	data@a,3971	;volatile
   325   000614                     
   326                           ;scrolling2.c: 44:     RC2=1;
   327   000614  8482               	bsf	3970,2,c	;volatile
   328   000616                     
   329                           ;scrolling2.c: 45:     for(int i=0;i<=100;i++);
   330   000616  0E00               	movlw	0
   331   000618  6E03               	movwf	(data@i+1)^0,c
   332   00061A  0E00               	movlw	0
   333   00061C  6E02               	movwf	data@i^0,c
   334   00061E                     l739:
   335   00061E  4A02               	infsnz	data@i^0,f,c
   336   000620  2A03               	incf	(data@i+1)^0,f,c
   337   000622  BE03               	btfsc	(data@i+1)^0,7,c
   338   000624  EF1D  F003         	goto	u11
   339   000628  5003               	movf	(data@i+1)^0,w,c
   340   00062A  E109               	bnz	u10
   341   00062C  0E65               	movlw	101
   342   00062E  5C02               	subwf	data@i^0,w,c
   343   000630  A0D8               	btfss	status,0,c
   344   000632  EF1D  F003         	goto	u11
   345   000636  EF1F  F003         	goto	u10
   346   00063A                     u11:
   347   00063A  EF0F  F003         	goto	l739
   348   00063E                     u10:
   349   00063E                     
   350                           ;scrolling2.c: 46:     RC2=0;
   351   00063E  9482               	bcf	3970,2,c	;volatile
   352   000640                     
   353                           ;scrolling2.c: 47:     for(int i=0;i<=5000;i++);
   354   000640  0E00               	movlw	0
   355   000642  6E05               	movwf	(data@i_57+1)^0,c
   356   000644  0E00               	movlw	0
   357   000646  6E04               	movwf	data@i_57^0,c
   358   000648                     l749:
   359   000648  4A04               	infsnz	data@i_57^0,f,c
   360   00064A  2A05               	incf	(data@i_57+1)^0,f,c
   361   00064C  BE05               	btfsc	(data@i_57+1)^0,7,c
   362   00064E  EF32  F003         	goto	u21
   363   000652  0E89               	movlw	137
   364   000654  5C04               	subwf	data@i_57^0,w,c
   365   000656  0E13               	movlw	19
   366   000658  5805               	subwfb	(data@i_57+1)^0,w,c
   367   00065A  A0D8               	btfss	status,0,c
   368   00065C  EF32  F003         	goto	u21
   369   000660  EF34  F003         	goto	u20
   370   000664                     u21:
   371   000664  EF24  F003         	goto	l749
   372   000668                     u20:
   373   000668  0012               	return		;funcret
   374   00066A                     __end_of_data:
   375                           	callstack 0
   376                           
   377 ;; *************** function _delay *****************
   378 ;; Defined at:
   379 ;;		line 58 in file "scrolling2.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  i               2    0[COMRAM] int 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         2       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         2       0       0       0       0       0       0
   397 ;;Total ram usage:        2 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text3
   407   000724                     __ptext3:
   408                           	callstack 0
   409   000724                     _delay:
   410                           	callstack 30
   411   000724                     
   412                           ;scrolling2.c: 60:     for(int i=0;i<5000;i++);
   413   000724  0E00               	movlw	0
   414   000726  6E02               	movwf	(delay@i+1)^0,c
   415   000728  0E00               	movlw	0
   416   00072A  6E01               	movwf	delay@i^0,c
   417   00072C                     l793:
   418   00072C  4A01               	infsnz	delay@i^0,f,c
   419   00072E  2A02               	incf	(delay@i+1)^0,f,c
   420   000730  BE02               	btfsc	(delay@i+1)^0,7,c
   421   000732  EFA4  F003         	goto	u61
   422   000736  0E88               	movlw	136
   423   000738  5C01               	subwf	delay@i^0,w,c
   424   00073A  0E13               	movlw	19
   425   00073C  5802               	subwfb	(delay@i+1)^0,w,c
   426   00073E  A0D8               	btfss	status,0,c
   427   000740  EFA4  F003         	goto	u61
   428   000744  EFA6  F003         	goto	u60
   429   000748                     u61:
   430   000748  EF96  F003         	goto	l793
   431   00074C                     u60:
   432   00074C  0012               	return		;funcret
   433   00074E                     __end_of_delay:
   434                           	callstack 0
   435                           
   436 ;; *************** function _cmd *****************
   437 ;; Defined at:
   438 ;;		line 28 in file "scrolling2.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  a               1    wreg     unsigned char 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  a               1    0[COMRAM] unsigned char 
   443 ;;  i               2    3[COMRAM] int 
   444 ;;  i               2    1[COMRAM] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   454 ;;      Params:         0       0       0       0       0       0       0
   455 ;;      Locals:         5       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0
   457 ;;      Totals:         5       0       0       0       0       0       0
   458 ;;Total ram usage:        5 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text4
   468   00066A                     __ptext4:
   469                           	callstack 0
   470   00066A                     _cmd:
   471                           	callstack 30
   472                           
   473                           ;incstack = 0
   474                           ;cmd@a stored from wreg
   475   00066A  6E01               	movwf	cmd@a^0,c
   476   00066C                     
   477                           ;scrolling2.c: 28: void cmd(unsigned char a );scrolling2.c: 29: {;scrolling2.c: 30:     
      +                          RC0=0;
   478   00066C  9082               	bcf	3970,0,c	;volatile
   479                           
   480                           ;scrolling2.c: 31:     RC1=0;
   481   00066E  9282               	bcf	3970,1,c	;volatile
   482   000670                     
   483                           ;scrolling2.c: 32:     PORTD=a;
   484   000670  C001  FF83         	movff	cmd@a,3971	;volatile
   485   000674                     
   486                           ;scrolling2.c: 33:     RC2=1;
   487   000674  8482               	bsf	3970,2,c	;volatile
   488   000676                     
   489                           ;scrolling2.c: 34:     for(int i=0;i<=100;i++);
   490   000676  0E00               	movlw	0
   491   000678  6E03               	movwf	(cmd@i+1)^0,c
   492   00067A  0E00               	movlw	0
   493   00067C  6E02               	movwf	cmd@i^0,c
   494   00067E                     l765:
   495   00067E  4A02               	infsnz	cmd@i^0,f,c
   496   000680  2A03               	incf	(cmd@i+1)^0,f,c
   497   000682  BE03               	btfsc	(cmd@i+1)^0,7,c
   498   000684  EF4D  F003         	goto	u31
   499   000688  5003               	movf	(cmd@i+1)^0,w,c
   500   00068A  E109               	bnz	u30
   501   00068C  0E65               	movlw	101
   502   00068E  5C02               	subwf	cmd@i^0,w,c
   503   000690  A0D8               	btfss	status,0,c
   504   000692  EF4D  F003         	goto	u31
   505   000696  EF4F  F003         	goto	u30
   506   00069A                     u31:
   507   00069A  EF3F  F003         	goto	l765
   508   00069E                     u30:
   509   00069E                     
   510                           ;scrolling2.c: 35:     RC2=0;
   511   00069E  9482               	bcf	3970,2,c	;volatile
   512   0006A0                     
   513                           ;scrolling2.c: 36:     for(int i=0;i<=5000;i++);
   514   0006A0  0E00               	movlw	0
   515   0006A2  6E05               	movwf	(cmd@i_53+1)^0,c
   516   0006A4  0E00               	movlw	0
   517   0006A6  6E04               	movwf	cmd@i_53^0,c
   518   0006A8                     l775:
   519   0006A8  4A04               	infsnz	cmd@i_53^0,f,c
   520   0006AA  2A05               	incf	(cmd@i_53+1)^0,f,c
   521   0006AC  BE05               	btfsc	(cmd@i_53+1)^0,7,c
   522   0006AE  EF62  F003         	goto	u41
   523   0006B2  0E89               	movlw	137
   524   0006B4  5C04               	subwf	cmd@i_53^0,w,c
   525   0006B6  0E13               	movlw	19
   526   0006B8  5805               	subwfb	(cmd@i_53+1)^0,w,c
   527   0006BA  A0D8               	btfss	status,0,c
   528   0006BC  EF62  F003         	goto	u41
   529   0006C0  EF64  F003         	goto	u40
   530   0006C4                     u41:
   531   0006C4  EF54  F003         	goto	l775
   532   0006C8                     u40:
   533   0006C8  0012               	return		;funcret
   534   0006CA                     __end_of_cmd:
   535                           	callstack 0
   536                           
   537                           	psect	rparam
   538   000000                     tosu	equ	0xFFF
   539                           tosh	equ	0xFFE
   540                           tosl	equ	0xFFD
   541                           stkptr	equ	0xFFC
   542                           pclatu	equ	0xFFB
   543                           pclath	equ	0xFFA
   544                           pcl	equ	0xFF9
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           prodh	equ	0xFF4
   550                           prodl	equ	0xFF3
   551                           indf0	equ	0xFEF
   552                           postinc0	equ	0xFEE
   553                           postdec0	equ	0xFED
   554                           preinc0	equ	0xFEC
   555                           plusw0	equ	0xFEB
   556                           fsr0h	equ	0xFEA
   557                           fsr0l	equ	0xFE9
   558                           wreg	equ	0xFE8
   559                           indf1	equ	0xFE7
   560                           postinc1	equ	0xFE6
   561                           postdec1	equ	0xFE5
   562                           preinc1	equ	0xFE4
   563                           plusw1	equ	0xFE3
   564                           fsr1h	equ	0xFE2
   565                           fsr1l	equ	0xFE1
   566                           bsr	equ	0xFE0
   567                           indf2	equ	0xFDF
   568                           postinc2	equ	0xFDE
   569                           postdec2	equ	0xFDD
   570                           preinc2	equ	0xFDC
   571                           plusw2	equ	0xFDB
   572                           fsr2h	equ	0xFDA
   573                           fsr2l	equ	0xFD9
   574                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     301
                                _cmd
                              _delay
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     196
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _delay
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 07 09:04:26 2024

                     l30 069E                       l40 0668                       l33 06C8  
                     l51 074C                       l37 063E                       l46 0722  
                     u10 063E                       u11 063A                       u20 0668  
                     u21 0664                       u30 069E                       u31 069A  
                     u40 06C8                       u41 06C4                       u60 074C  
                     u61 0748                       u70 0722                       u71 071E  
                    l731 0614                      l811 06FC                      l741 0622  
                    l733 0616                      l813 0708                      l821 06D8  
                    l751 064C                      l743 0640                      l727 060C  
                    l815 070A                      l823 06DE                      l753 066C  
                    l729 0610                      l809 06F8                      l825 06E6  
                    l817 06CA                      l755 0670                      l739 061E  
                    l827 06EC                      l819 06D2                      l765 067E  
                    l757 0674                      l749 0648                      l775 06A8  
                    l767 0682                      l759 0676                      l777 06AC  
                    l769 06A0                      l793 072C                      l795 0730  
                    l787 0724                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _cmd 066A                     ?_cmd 0001  
                   STR_1 0601                     _data 060A                     cmd@a 0001  
                   cmd@i 0002                     _main 06CA                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 0724                    _delay 0724  
                  data@a 0001                    data@i 0002                    tablat 0FF5  
                  status 0FD8          __initialization 074E             __end_of_data 066A  
           __end_of_main 06F8                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   ?_delay 0001                   delay@i 0001  
                 isa$std 0001                ??_display 0007             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 074E            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 074E                  ??_delay 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 074E                  __ramtop 0600                  __ptext0 06CA  
                __ptext1 06F8                  cmd@i_53 0004                  __ptext2 060A  
                __ptext3 0724                  __ptext4 066A                  _display 06F8  
   end_of_initialization 074E      start_initialization 074E              __end_of_cmd 06CA  
               ?_display 0006              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_57 0004  
               isa$xinst 0000                 display@p 0006  
