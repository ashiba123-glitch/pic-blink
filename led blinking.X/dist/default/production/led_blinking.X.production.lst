

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 26 10:24:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4580 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     _PORTC	set	3970
    47   000000                     _TRISC	set	3988
    48                           
    49                           ; #config settings
    50                           
    51                           	psect	cinit
    52   00073E                     __pcinit:
    53                           	callstack 0
    54   00073E                     start_initialization:
    55                           	callstack 0
    56   00073E                     __initialization:
    57                           	callstack 0
    58   00073E                     end_of_initialization:
    59                           	callstack 0
    60   00073E                     __end_of__initialization:
    61                           	callstack 0
    62   00073E  0100               	movlb	0
    63   000740  EF01  F003         	goto	_main	;jump to C main() function
    64                           
    65                           	psect	cstackCOMRAM
    66   000001                     __pcstackCOMRAM:
    67                           	callstack 0
    68   000001                     main@i:
    69                           	callstack 0
    70                           
    71                           ; 2 bytes @ 0x0
    72   000001                     	ds	2
    73   000003                     main@i_32:
    74                           	callstack 0
    75                           
    76                           ; 2 bytes @ 0x2
    77   000003                     	ds	2
    78   000005                     main@i_33:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x4
    82   000005                     	ds	2
    83   000007                     main@i_34:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x6
    87   000007                     	ds	2
    88   000009                     main@i_35:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x8
    92   000009                     	ds	2
    93   00000B                     main@i_36:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0xA
    97   00000B                     	ds	2
    98   00000D                     main@i_37:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0xC
   102   00000D                     	ds	2
   103   00000F                     main@i_38:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0xE
   107   00000F                     	ds	2
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 11 in file "ledblinking.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;  i               2   14[COMRAM] unsigned int 
   119 ;;  i               2   12[COMRAM] unsigned int 
   120 ;;  i               2   10[COMRAM] unsigned int 
   121 ;;  i               2    8[COMRAM] unsigned int 
   122 ;;  i               2    6[COMRAM] unsigned int 
   123 ;;  i               2    4[COMRAM] unsigned int 
   124 ;;  i               2    2[COMRAM] unsigned int 
   125 ;;  i               2    0[COMRAM] unsigned int 
   126 ;; Return value:  Size  Location     Type
   127 ;;                  1    wreg      void 
   128 ;; Registers used:
   129 ;;		wreg, status,2, status,0
   130 ;; Tracked objects:
   131 ;;		On entry : 0/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   135 ;;      Params:         0       0       0       0       0       0       0
   136 ;;      Locals:        16       0       0       0       0       0       0
   137 ;;      Temps:          0       0       0       0       0       0       0
   138 ;;      Totals:        16       0       0       0       0       0       0
   139 ;;Total ram usage:       16 bytes
   140 ;; This function calls:
   141 ;;		Nothing
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148   000602                     __ptext0:
   149                           	callstack 0
   150   000602                     _main:
   151                           	callstack 31
   152   000602                     
   153                           ;ledblinking.c: 12:     TRISC=0X00;
   154   000602  0E00               	movlw	0
   155   000604  6E94               	movwf	148,c	;volatile
   156   000606                     l9:
   157                           
   158                           ;ledblinking.c: 14:     {;ledblinking.c: 16:         PORTC=0X01;
   159   000606  0E01               	movlw	1
   160   000608  6E82               	movwf	130,c	;volatile
   161                           
   162                           ;ledblinking.c: 17:         for(unsigned int i=0;i<=50000;i++);
   163   00060A  0E00               	movlw	0
   164   00060C  6E02               	movwf	(main@i+1)^0,c
   165   00060E  0E00               	movlw	0
   166   000610  6E01               	movwf	main@i^0,c
   167   000612                     l710:
   168   000612  4A01               	infsnz	main@i^0,f,c
   169   000614  2A02               	incf	(main@i+1)^0,f,c
   170   000616  0E51               	movlw	81
   171   000618  5C01               	subwf	main@i^0,w,c
   172   00061A  0EC3               	movlw	195
   173   00061C  5802               	subwfb	(main@i+1)^0,w,c
   174   00061E  A0D8               	btfss	status,0,c
   175   000620  EF14  F003         	goto	u11
   176   000624  EF16  F003         	goto	u10
   177   000628                     u11:
   178   000628  EF09  F003         	goto	l710
   179   00062C                     u10:
   180   00062C                     
   181                           ;ledblinking.c: 18:         PORTC=0X02;
   182   00062C  0E02               	movlw	2
   183   00062E  6E82               	movwf	130,c	;volatile
   184                           
   185                           ;ledblinking.c: 19:         for(unsigned int i=0;i<=50000;i++);
   186   000630  0E00               	movlw	0
   187   000632  6E04               	movwf	(main@i_32+1)^0,c
   188   000634  0E00               	movlw	0
   189   000636  6E03               	movwf	main@i_32^0,c
   190   000638                     l720:
   191   000638  4A03               	infsnz	main@i_32^0,f,c
   192   00063A  2A04               	incf	(main@i_32+1)^0,f,c
   193   00063C  0E51               	movlw	81
   194   00063E  5C03               	subwf	main@i_32^0,w,c
   195   000640  0EC3               	movlw	195
   196   000642  5804               	subwfb	(main@i_32+1)^0,w,c
   197   000644  A0D8               	btfss	status,0,c
   198   000646  EF27  F003         	goto	u21
   199   00064A  EF29  F003         	goto	u20
   200   00064E                     u21:
   201   00064E  EF1C  F003         	goto	l720
   202   000652                     u20:
   203   000652                     
   204                           ;ledblinking.c: 20:         PORTC=0X04;
   205   000652  0E04               	movlw	4
   206   000654  6E82               	movwf	130,c	;volatile
   207                           
   208                           ;ledblinking.c: 21:         for(unsigned int i=0;i<=50000;i++);
   209   000656  0E00               	movlw	0
   210   000658  6E06               	movwf	(main@i_33+1)^0,c
   211   00065A  0E00               	movlw	0
   212   00065C  6E05               	movwf	main@i_33^0,c
   213   00065E                     l730:
   214   00065E  4A05               	infsnz	main@i_33^0,f,c
   215   000660  2A06               	incf	(main@i_33+1)^0,f,c
   216   000662  0E51               	movlw	81
   217   000664  5C05               	subwf	main@i_33^0,w,c
   218   000666  0EC3               	movlw	195
   219   000668  5806               	subwfb	(main@i_33+1)^0,w,c
   220   00066A  A0D8               	btfss	status,0,c
   221   00066C  EF3A  F003         	goto	u31
   222   000670  EF3C  F003         	goto	u30
   223   000674                     u31:
   224   000674  EF2F  F003         	goto	l730
   225   000678                     u30:
   226   000678                     
   227                           ;ledblinking.c: 22:         PORTC=0X08;
   228   000678  0E08               	movlw	8
   229   00067A  6E82               	movwf	130,c	;volatile
   230                           
   231                           ;ledblinking.c: 23:         for(unsigned int i=0;i<=50000;i++);
   232   00067C  0E00               	movlw	0
   233   00067E  6E08               	movwf	(main@i_34+1)^0,c
   234   000680  0E00               	movlw	0
   235   000682  6E07               	movwf	main@i_34^0,c
   236   000684                     l740:
   237   000684  4A07               	infsnz	main@i_34^0,f,c
   238   000686  2A08               	incf	(main@i_34+1)^0,f,c
   239   000688  0E51               	movlw	81
   240   00068A  5C07               	subwf	main@i_34^0,w,c
   241   00068C  0EC3               	movlw	195
   242   00068E  5808               	subwfb	(main@i_34+1)^0,w,c
   243   000690  A0D8               	btfss	status,0,c
   244   000692  EF4D  F003         	goto	u41
   245   000696  EF4F  F003         	goto	u40
   246   00069A                     u41:
   247   00069A  EF42  F003         	goto	l740
   248   00069E                     u40:
   249   00069E                     
   250                           ;ledblinking.c: 24:         PORTC=0X10;
   251   00069E  0E10               	movlw	16
   252   0006A0  6E82               	movwf	130,c	;volatile
   253                           
   254                           ;ledblinking.c: 25:         for(unsigned int i=0;i<=50000;i++);
   255   0006A2  0E00               	movlw	0
   256   0006A4  6E0A               	movwf	(main@i_35+1)^0,c
   257   0006A6  0E00               	movlw	0
   258   0006A8  6E09               	movwf	main@i_35^0,c
   259   0006AA                     l750:
   260   0006AA  4A09               	infsnz	main@i_35^0,f,c
   261   0006AC  2A0A               	incf	(main@i_35+1)^0,f,c
   262   0006AE  0E51               	movlw	81
   263   0006B0  5C09               	subwf	main@i_35^0,w,c
   264   0006B2  0EC3               	movlw	195
   265   0006B4  580A               	subwfb	(main@i_35+1)^0,w,c
   266   0006B6  A0D8               	btfss	status,0,c
   267   0006B8  EF60  F003         	goto	u51
   268   0006BC  EF62  F003         	goto	u50
   269   0006C0                     u51:
   270   0006C0  EF55  F003         	goto	l750
   271   0006C4                     u50:
   272   0006C4                     
   273                           ;ledblinking.c: 26:         PORTC=0X20;
   274   0006C4  0E20               	movlw	32
   275   0006C6  6E82               	movwf	130,c	;volatile
   276                           
   277                           ;ledblinking.c: 27:         for(unsigned int i=0;i<=50000;i++);
   278   0006C8  0E00               	movlw	0
   279   0006CA  6E0C               	movwf	(main@i_36+1)^0,c
   280   0006CC  0E00               	movlw	0
   281   0006CE  6E0B               	movwf	main@i_36^0,c
   282   0006D0                     l760:
   283   0006D0  4A0B               	infsnz	main@i_36^0,f,c
   284   0006D2  2A0C               	incf	(main@i_36+1)^0,f,c
   285   0006D4  0E51               	movlw	81
   286   0006D6  5C0B               	subwf	main@i_36^0,w,c
   287   0006D8  0EC3               	movlw	195
   288   0006DA  580C               	subwfb	(main@i_36+1)^0,w,c
   289   0006DC  A0D8               	btfss	status,0,c
   290   0006DE  EF73  F003         	goto	u61
   291   0006E2  EF75  F003         	goto	u60
   292   0006E6                     u61:
   293   0006E6  EF68  F003         	goto	l760
   294   0006EA                     u60:
   295   0006EA                     
   296                           ;ledblinking.c: 28:         PORTC=0X40;
   297   0006EA  0E40               	movlw	64
   298   0006EC  6E82               	movwf	130,c	;volatile
   299                           
   300                           ;ledblinking.c: 29:         for(unsigned int i=0;i<=50000;i++);
   301   0006EE  0E00               	movlw	0
   302   0006F0  6E0E               	movwf	(main@i_37+1)^0,c
   303   0006F2  0E00               	movlw	0
   304   0006F4  6E0D               	movwf	main@i_37^0,c
   305   0006F6                     l770:
   306   0006F6  4A0D               	infsnz	main@i_37^0,f,c
   307   0006F8  2A0E               	incf	(main@i_37+1)^0,f,c
   308   0006FA  0E51               	movlw	81
   309   0006FC  5C0D               	subwf	main@i_37^0,w,c
   310   0006FE  0EC3               	movlw	195
   311   000700  580E               	subwfb	(main@i_37+1)^0,w,c
   312   000702  A0D8               	btfss	status,0,c
   313   000704  EF86  F003         	goto	u71
   314   000708  EF88  F003         	goto	u70
   315   00070C                     u71:
   316   00070C  EF7B  F003         	goto	l770
   317   000710                     u70:
   318   000710                     
   319                           ;ledblinking.c: 30:         PORTC=0X80;
   320   000710  0E80               	movlw	128
   321   000712  6E82               	movwf	130,c	;volatile
   322                           
   323                           ;ledblinking.c: 31:         for(unsigned int i=0;i<=50000;i++);
   324   000714  0E00               	movlw	0
   325   000716  6E10               	movwf	(main@i_38+1)^0,c
   326   000718  0E00               	movlw	0
   327   00071A  6E0F               	movwf	main@i_38^0,c
   328   00071C                     l780:
   329   00071C  4A0F               	infsnz	main@i_38^0,f,c
   330   00071E  2A10               	incf	(main@i_38+1)^0,f,c
   331   000720  0E51               	movlw	81
   332   000722  5C0F               	subwf	main@i_38^0,w,c
   333   000724  0EC3               	movlw	195
   334   000726  5810               	subwfb	(main@i_38+1)^0,w,c
   335   000728  A0D8               	btfss	status,0,c
   336   00072A  EF99  F003         	goto	u81
   337   00072E  EF9B  F003         	goto	u80
   338   000732                     u81:
   339   000732  EF8E  F003         	goto	l780
   340   000736                     u80:
   341   000736  EF03  F003         	goto	l9
   342   00073A  EF00  F000         	goto	start
   343   00073E                     __end_of_main:
   344                           	callstack 0
   345                           
   346                           	psect	smallconst
   347   000600                     __psmallconst:
   348                           	callstack 0
   349   000600  00                 	db	0
   350   000601  00                 	db	0	; dummy byte at the end
   351   000000                     
   352                           	psect	rparam
   353   000000                     tosu	equ	0xFFF
   354                           tosh	equ	0xFFE
   355                           tosl	equ	0xFFD
   356                           stkptr	equ	0xFFC
   357                           pclatu	equ	0xFFB
   358                           pclath	equ	0xFFA
   359                           pcl	equ	0xFF9
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           prodh	equ	0xFF4
   365                           prodl	equ	0xFF3
   366                           indf0	equ	0xFEF
   367                           postinc0	equ	0xFEE
   368                           postdec0	equ	0xFED
   369                           preinc0	equ	0xFEC
   370                           plusw0	equ	0xFEB
   371                           fsr0h	equ	0xFEA
   372                           fsr0l	equ	0xFE9
   373                           wreg	equ	0xFE8
   374                           indf1	equ	0xFE7
   375                           postinc1	equ	0xFE6
   376                           postdec1	equ	0xFE5
   377                           preinc1	equ	0xFE4
   378                           plusw1	equ	0xFE3
   379                           fsr1h	equ	0xFE2
   380                           fsr1l	equ	0xFE1
   381                           bsr	equ	0xFE0
   382                           indf2	equ	0xFDF
   383                           postinc2	equ	0xFDE
   384                           postdec2	equ	0xFDD
   385                           preinc2	equ	0xFDC
   386                           plusw2	equ	0xFDB
   387                           fsr2h	equ	0xFDA
   388                           fsr2l	equ	0xFD9
   389                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     240
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     10      10       1       16.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6B      0       0      16        0.0%
BITBIGSFRlh         11      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 26 10:24:48 2024

                      l9 0606                       u10 062C                       u11 0628  
                     u20 0652                       u21 064E                       u30 0678  
                     u31 0674                       u40 069E                       u41 069A  
                     u50 06C4                       u51 06C0                       u60 06EA  
                     u61 06E6                       u70 0710                       u71 070C  
                     u80 0736                       u81 0732                      l710 0612  
                    l720 0638                      l712 0616                      l704 0602  
                    l730 065E                      l722 063C                      l714 062C  
                    l740 0684                      l732 0662                      l724 0652  
                    l750 06AA                      l742 0688                      l734 0678  
                    l760 06D0                      l752 06AE                      l744 069E  
                    l770 06F6                      l762 06D4                      l754 06C4  
                    l780 071C                      l772 06FA                      l764 06EA  
                    l782 0720                      l774 0710                     _main 0602  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _PORTC 0F82                    _TRISC 0F94                    main@i 0001  
                  status 0FD8          __initialization 073E             __end_of_main 073E  
                 ??_main 0001            __activetblptr 0000                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 073E  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 073E  
                __ramtop 0600                  __ptext0 0602     end_of_initialization 073E  
    start_initialization 073E              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@i_32 0003  
               main@i_33 0005                 main@i_34 0007                 main@i_35 0009  
               main@i_36 000B                 main@i_37 000D                 main@i_38 000F  
