

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 02 09:51:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4580 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     _RC2	set	31762
    47   000000                     _RC1	set	31761
    48   000000                     _TRISC	set	3988
    49   000000                     _RC0	set	31760
    50   000000                     _TRISD	set	3989
    51   000000                     _PORTD	set	3971
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56   0006C6                     __pcinit:
    57                           	callstack 0
    58   0006C6                     start_initialization:
    59                           	callstack 0
    60   0006C6                     __initialization:
    61                           	callstack 0
    62   0006C6                     end_of_initialization:
    63                           	callstack 0
    64   0006C6                     __end_of__initialization:
    65                           	callstack 0
    66   0006C6  0100               	movlb	0
    67   0006C8  EF01  F003         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70   000001                     __pcstackCOMRAM:
    71                           	callstack 0
    72   000001                     main@i:
    73                           	callstack 0
    74                           
    75                           ; 2 bytes @ 0x0
    76   000001                     	ds	2
    77   000003                     main@i_36:
    78                           	callstack 0
    79                           
    80                           ; 2 bytes @ 0x2
    81   000003                     	ds	2
    82   000005                     main@i_37:
    83                           	callstack 0
    84                           
    85                           ; 2 bytes @ 0x4
    86   000005                     	ds	2
    87   000007                     main@i_38:
    88                           	callstack 0
    89                           
    90                           ; 2 bytes @ 0x6
    91   000007                     	ds	2
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 11 in file "lcd1.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;  i               2    6[COMRAM] int 
   103 ;;  i               2    4[COMRAM] int 
   104 ;;  i               2    2[COMRAM] int 
   105 ;;  i               2    0[COMRAM] int 
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   115 ;;      Params:         0       0       0       0       0       0       0
   116 ;;      Locals:         8       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0
   118 ;;      Totals:         8       0       0       0       0       0       0
   119 ;;Total ram usage:        8 bytes
   120 ;; This function calls:
   121 ;;		Nothing
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128   000602                     __ptext0:
   129                           	callstack 0
   130   000602                     _main:
   131                           	callstack 31
   132   000602                     
   133                           ;lcd1.c: 12:     TRISC=TRISD=0X00;
   134   000602  0E00               	movlw	0
   135   000604  6E95               	movwf	149,c	;volatile
   136   000606  CF95 FF94          	movff	3989,3988	;volatile
   137   00060A                     
   138                           ;lcd1.c: 13:     RC0=0;
   139   00060A  9082               	bcf	3970,0,c	;volatile
   140   00060C                     
   141                           ;lcd1.c: 14:     RC1=0;
   142   00060C  9282               	bcf	3970,1,c	;volatile
   143                           
   144                           ;lcd1.c: 15:     PORTD=0X01;
   145   00060E  0E01               	movlw	1
   146   000610  6E83               	movwf	131,c	;volatile
   147   000612                     
   148                           ;lcd1.c: 16:     RC2=1;
   149   000612  8482               	bsf	3970,2,c	;volatile
   150                           
   151                           ;lcd1.c: 17:     for(int i=0;i<100;i++);
   152   000614  0E00               	movlw	0
   153   000616  6E02               	movwf	(main@i+1)^0,c
   154   000618  0E00               	movlw	0
   155   00061A  6E01               	movwf	main@i^0,c
   156   00061C                     l713:
   157   00061C  4A01               	infsnz	main@i^0,f,c
   158   00061E  2A02               	incf	(main@i+1)^0,f,c
   159   000620  BE02               	btfsc	(main@i+1)^0,7,c
   160   000622  EF1C  F003         	goto	u11
   161   000626  5002               	movf	(main@i+1)^0,w,c
   162   000628  E109               	bnz	u10
   163   00062A  0E64               	movlw	100
   164   00062C  5C01               	subwf	main@i^0,w,c
   165   00062E  A0D8               	btfss	status,0,c
   166   000630  EF1C  F003         	goto	u11
   167   000634  EF1E  F003         	goto	u10
   168   000638                     u11:
   169   000638  EF0E  F003         	goto	l713
   170   00063C                     u10:
   171   00063C                     
   172                           ;lcd1.c: 18:     RC2=0;
   173   00063C  9482               	bcf	3970,2,c	;volatile
   174   00063E                     
   175                           ;lcd1.c: 19:     for(int i=0;i<100;i++);
   176   00063E  0E00               	movlw	0
   177   000640  6E04               	movwf	(main@i_36+1)^0,c
   178   000642  0E00               	movlw	0
   179   000644  6E03               	movwf	main@i_36^0,c
   180   000646                     l723:
   181   000646  4A03               	infsnz	main@i_36^0,f,c
   182   000648  2A04               	incf	(main@i_36+1)^0,f,c
   183   00064A  BE04               	btfsc	(main@i_36+1)^0,7,c
   184   00064C  EF31  F003         	goto	u21
   185   000650  5004               	movf	(main@i_36+1)^0,w,c
   186   000652  E109               	bnz	u20
   187   000654  0E64               	movlw	100
   188   000656  5C03               	subwf	main@i_36^0,w,c
   189   000658  A0D8               	btfss	status,0,c
   190   00065A  EF31  F003         	goto	u21
   191   00065E  EF33  F003         	goto	u20
   192   000662                     u21:
   193   000662  EF23  F003         	goto	l723
   194   000666                     u20:
   195   000666                     
   196                           ;lcd1.c: 20:     RC0=0;
   197   000666  9082               	bcf	3970,0,c	;volatile
   198                           
   199                           ;lcd1.c: 21:     RC1=0;
   200   000668  9282               	bcf	3970,1,c	;volatile
   201   00066A                     
   202                           ;lcd1.c: 22:     PORTD=0X0F;
   203   00066A  0E0F               	movlw	15
   204   00066C  6E83               	movwf	131,c	;volatile
   205   00066E                     
   206                           ;lcd1.c: 23:     RC2=1;
   207   00066E  8482               	bsf	3970,2,c	;volatile
   208                           
   209                           ;lcd1.c: 24:     for(int i=0;i<100;i++);
   210   000670  0E00               	movlw	0
   211   000672  6E06               	movwf	(main@i_37+1)^0,c
   212   000674  0E00               	movlw	0
   213   000676  6E05               	movwf	main@i_37^0,c
   214   000678                     l735:
   215   000678  4A05               	infsnz	main@i_37^0,f,c
   216   00067A  2A06               	incf	(main@i_37+1)^0,f,c
   217   00067C  BE06               	btfsc	(main@i_37+1)^0,7,c
   218   00067E  EF4A  F003         	goto	u31
   219   000682  5006               	movf	(main@i_37+1)^0,w,c
   220   000684  E109               	bnz	u30
   221   000686  0E64               	movlw	100
   222   000688  5C05               	subwf	main@i_37^0,w,c
   223   00068A  A0D8               	btfss	status,0,c
   224   00068C  EF4A  F003         	goto	u31
   225   000690  EF4C  F003         	goto	u30
   226   000694                     u31:
   227   000694  EF3C  F003         	goto	l735
   228   000698                     u30:
   229   000698                     
   230                           ;lcd1.c: 25:     RC2=0;
   231   000698  9482               	bcf	3970,2,c	;volatile
   232   00069A                     
   233                           ;lcd1.c: 26:     for(int i=0;i<100;i++);
   234   00069A  0E00               	movlw	0
   235   00069C  6E08               	movwf	(main@i_38+1)^0,c
   236   00069E  0E00               	movlw	0
   237   0006A0  6E07               	movwf	main@i_38^0,c
   238   0006A2                     l745:
   239   0006A2  4A07               	infsnz	main@i_38^0,f,c
   240   0006A4  2A08               	incf	(main@i_38+1)^0,f,c
   241   0006A6  BE08               	btfsc	(main@i_38+1)^0,7,c
   242   0006A8  EF5F  F003         	goto	u41
   243   0006AC  5008               	movf	(main@i_38+1)^0,w,c
   244   0006AE  E109               	bnz	u40
   245   0006B0  0E64               	movlw	100
   246   0006B2  5C07               	subwf	main@i_38^0,w,c
   247   0006B4  A0D8               	btfss	status,0,c
   248   0006B6  EF5F  F003         	goto	u41
   249   0006BA  EF61  F003         	goto	u40
   250   0006BE                     u41:
   251   0006BE  EF51  F003         	goto	l745
   252   0006C2                     u40:
   253   0006C2  EF00  F000         	goto	start
   254   0006C6                     __end_of_main:
   255                           	callstack 0
   256                           
   257                           	psect	smallconst
   258   000600                     __psmallconst:
   259                           	callstack 0
   260   000600  00                 	db	0
   261   000601  00                 	db	0	; dummy byte at the end
   262   000000                     
   263                           	psect	rparam
   264   000000                     tosu	equ	0xFFF
   265                           tosh	equ	0xFFE
   266                           tosl	equ	0xFFD
   267                           stkptr	equ	0xFFC
   268                           pclatu	equ	0xFFB
   269                           pclath	equ	0xFFA
   270                           pcl	equ	0xFF9
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           prodh	equ	0xFF4
   276                           prodl	equ	0xFF3
   277                           indf0	equ	0xFEF
   278                           postinc0	equ	0xFEE
   279                           postdec0	equ	0xFED
   280                           preinc0	equ	0xFEC
   281                           plusw0	equ	0xFEB
   282                           fsr0h	equ	0xFEA
   283                           fsr0l	equ	0xFE9
   284                           wreg	equ	0xFE8
   285                           indf1	equ	0xFE7
   286                           postinc1	equ	0xFE6
   287                           postdec1	equ	0xFE5
   288                           preinc1	equ	0xFE4
   289                           plusw1	equ	0xFE3
   290                           fsr1h	equ	0xFE2
   291                           fsr1l	equ	0xFE1
   292                           bsr	equ	0xFE0
   293                           indf2	equ	0xFDF
   294                           postinc2	equ	0xFDE
   295                           postdec2	equ	0xFDD
   296                           preinc2	equ	0xFDC
   297                           plusw2	equ	0xFDB
   298                           fsr2h	equ	0xFDA
   299                           fsr2l	equ	0xFD9
   300                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     120
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 02 09:51:34 2024

                     l20 0666                       l22 0698                       l25 06C2  
                     l18 063C                       u10 063C                       u11 0638  
                     u20 0666                       u21 0662                       u30 0698  
                     u31 0694                       u40 06C2                       u41 06BE  
                    l701 0602                      l703 060A                      l713 061C  
                    l705 060C                      l723 0646                      l715 0620  
                    l707 0612                      l725 064A                      l717 063E  
                    l735 0678                      l727 066A                      l745 06A2  
                    l737 067C                      l729 066E                      l747 06A6  
                    l739 069A                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                     _main 0602                     start 0000  
           ___param_bank 0000                    ?_main 0001                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    main@i 0001  
                  status 0FD8          __initialization 06C6             __end_of_main 06C6  
                 ??_main 0001            __activetblptr 0000                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 06C6  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 06C6  
                __ramtop 0600                  __ptext0 0602     end_of_initialization 06C6  
    start_initialization 06C6              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@i_36 0003  
               main@i_37 0005                 main@i_38 0007  
