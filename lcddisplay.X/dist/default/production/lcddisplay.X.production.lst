

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 03 12:44:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _TRISC	set	3988
    52   000000                     _RC0	set	31760
    53   000000                     _TRISD	set	3989
    54   000000                     _PORTD	set	3971
    55                           
    56                           	psect	smallconst
    57   000600                     __psmallconst:
    58                           	callstack 0
    59   000600  00                 	db	0
    60   000601                     STR_1:
    61   000601  68                 	db	104	;'h'
    62   000602  65                 	db	101	;'e'
    63   000603  6C                 	db	108	;'l'
    64   000604  6C                 	db	108	;'l'
    65   000605  6F                 	db	111	;'o'
    66   000606  00                 	db	0
    67   000607  00                 	db	0	; dummy byte at the end
    68   000000                     
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   000718                     __pcinit:
    73                           	callstack 0
    74   000718                     start_initialization:
    75                           	callstack 0
    76   000718                     __initialization:
    77                           	callstack 0
    78   000718                     end_of_initialization:
    79                           	callstack 0
    80   000718                     __end_of__initialization:
    81                           	callstack 0
    82   000718  0E00               	movlw	low (__Lsmallconst shr (0+16))
    83   00071A  6EF8               	movwf	tblptru,c
    84   00071C  0E06               	movlw	high __Lsmallconst
    85   00071E  6EF7               	movwf	tblptrh,c
    86   000720  0100               	movlb	0
    87   000722  EF7A  F003         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	cstackCOMRAM
    90   000001                     __pcstackCOMRAM:
    91                           	callstack 0
    92   000001                     cmnd@a:
    93                           	callstack 0
    94   000001                     data@a:
    95                           	callstack 0
    96                           
    97                           ; 1 bytes @ 0x0
    98   000001                     	ds	1
    99   000002                     cmnd@i:
   100                           	callstack 0
   101   000002                     data@i:
   102                           	callstack 0
   103                           
   104                           ; 2 bytes @ 0x1
   105   000002                     	ds	2
   106   000004                     cmnd@i_49:
   107                           	callstack 0
   108   000004                     data@i_53:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x3
   112   000004                     	ds	2
   113   000006                     display@p:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x5
   117   000006                     	ds	1
   118   000007                     
   119                           ; 1 bytes @ 0x6
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 14 in file "displaywithfunction.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   139 ;;      Params:         0       0       0       0       0       0       0
   140 ;;      Locals:         0       0       0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0
   142 ;;      Totals:         0       0       0       0       0       0       0
   143 ;;Total ram usage:        0 bytes
   144 ;; Hardware stack levels required when called: 2
   145 ;; This function calls:
   146 ;;		_cmnd
   147 ;;		_display
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154   0006F4                     __ptext0:
   155                           	callstack 0
   156   0006F4                     _main:
   157                           	callstack 29
   158   0006F4                     
   159                           ;displaywithfunction.c: 16: TRISC=TRISD=0X00;
   160   0006F4  0E00               	movlw	0
   161   0006F6  6E95               	movwf	149,c	;volatile
   162   0006F8  CF95 FF94          	movff	3989,3988	;volatile
   163   0006FC                     
   164                           ;displaywithfunction.c: 17: cmnd(0x01);
   165   0006FC  0E01               	movlw	1
   166   0006FE  EC34  F003         	call	_cmnd
   167   000702                     
   168                           ;displaywithfunction.c: 18: cmnd (0X0F);
   169   000702  0E0F               	movlw	15
   170   000704  EC34  F003         	call	_cmnd
   171   000708                     
   172                           ;displaywithfunction.c: 19: display("hello");
   173   000708  0E01               	movlw	low STR_1
   174   00070A  6E06               	movwf	display@p^0,c
   175   00070C  EC64  F003         	call	_display	;wreg free
   176   000710                     l21:
   177   000710  EF88  F003         	goto	l21
   178   000714  EF00  F000         	goto	start
   179   000718                     __end_of_main:
   180                           	callstack 0
   181                           
   182 ;; *************** function _display *****************
   183 ;; Defined at:
   184 ;;		line 46 in file "displaywithfunction.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;  p               1    5[COMRAM] PTR const unsigned char 
   187 ;;		 -> STR_1(6), 
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         1       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         1       0       0       0       0       0       0
   203 ;;Total ram usage:        1 bytes
   204 ;; Hardware stack levels used: 1
   205 ;; Hardware stack levels required when called: 1
   206 ;; This function calls:
   207 ;;		_data
   208 ;; This function is called by:
   209 ;;		_main
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text1
   214   0006C8                     __ptext1:
   215                           	callstack 0
   216   0006C8                     _display:
   217                           	callstack 29
   218   0006C8                     
   219                           ;displaywithfunction.c: 46: void display(const char *p);displaywithfunction.c: 47: {;dis
      +                          playwithfunction.c: 48:     while(*p)
   220   0006C8  EF6D  F003         	goto	l794
   221   0006CC                     l790:
   222                           
   223                           ;displaywithfunction.c: 49:     {;displaywithfunction.c: 50:         data(*p);
   224   0006CC  C006  FFF6         	movff	display@p,tblptrl
   225   0006D0                     	if	0	;There is only one active tblptr byte
   226   0006D0                     	endif
   227   0006D0                     	if	0	;tblptru may be non-zero
   228   0006D0                     	endif
   229   0006D0                     	if	0	;tblptru may be non-zero
   230   0006D0                     	endif
   231   0006D0  0008               	tblrd		*
   232   0006D2  50F5               	movf	tablat,w,c
   233   0006D4  EC04  F003         	call	_data
   234   0006D8                     
   235                           ;displaywithfunction.c: 51:         p++;
   236   0006D8  2A06               	incf	display@p^0,f,c
   237   0006DA                     l794:
   238                           
   239                           ;displaywithfunction.c: 48:     while(*p)
   240   0006DA  C006  FFF6         	movff	display@p,tblptrl
   241   0006DE                     	if	0	;There is only one active tblptr byte
   242   0006DE                     	endif
   243   0006DE                     	if	0	;tblptru may be non-zero
   244   0006DE                     	endif
   245   0006DE                     	if	0	;tblptru may be non-zero
   246   0006DE                     	endif
   247   0006DE  0008               	tblrd		*
   248   0006E0  50F5               	movf	tablat,w,c
   249   0006E2  0900               	iorlw	0
   250   0006E4  A4D8               	btfss	status,2,c
   251   0006E6  EF77  F003         	goto	u61
   252   0006EA  EF79  F003         	goto	u60
   253   0006EE                     u61:
   254   0006EE  EF66  F003         	goto	l790
   255   0006F2                     u60:
   256   0006F2  0012               	return		;funcret
   257   0006F4                     __end_of_display:
   258                           	callstack 0
   259                           
   260 ;; *************** function _data *****************
   261 ;; Defined at:
   262 ;;		line 35 in file "displaywithfunction.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;  a               1    wreg     unsigned char 
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  a               1    0[COMRAM] unsigned char 
   267 ;;  i               2    3[COMRAM] int 
   268 ;;  i               2    1[COMRAM] int 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   278 ;;      Params:         0       0       0       0       0       0       0
   279 ;;      Locals:         5       0       0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0       0       0
   281 ;;      Totals:         5       0       0       0       0       0       0
   282 ;;Total ram usage:        5 bytes
   283 ;; Hardware stack levels used: 1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_display
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text2
   292   000608                     __ptext2:
   293                           	callstack 0
   294   000608                     _data:
   295                           	callstack 29
   296                           
   297                           ;incstack = 0
   298                           ;data@a stored from wreg
   299   000608  6E01               	movwf	data@a^0,c
   300   00060A                     
   301                           ;displaywithfunction.c: 35: void data (unsigned char a);displaywithfunction.c: 36: {;dis
      +                          playwithfunction.c: 37: RC0=1;
   302   00060A  8082               	bsf	3970,0,c	;volatile
   303                           
   304                           ;displaywithfunction.c: 38: RC1=0;
   305   00060C  9282               	bcf	3970,1,c	;volatile
   306   00060E                     
   307                           ;displaywithfunction.c: 39: PORTD=a;
   308   00060E  C001  FF83         	movff	data@a,3971	;volatile
   309   000612                     
   310                           ;displaywithfunction.c: 40: RC2=1;
   311   000612  8482               	bsf	3970,2,c	;volatile
   312   000614                     
   313                           ;displaywithfunction.c: 41:     for(int i=0;i<100;i++);
   314   000614  0E00               	movlw	0
   315   000616  6E03               	movwf	(data@i+1)^0,c
   316   000618  0E00               	movlw	0
   317   00061A  6E02               	movwf	data@i^0,c
   318   00061C                     l732:
   319   00061C  4A02               	infsnz	data@i^0,f,c
   320   00061E  2A03               	incf	(data@i+1)^0,f,c
   321   000620  BE03               	btfsc	(data@i+1)^0,7,c
   322   000622  EF1C  F003         	goto	u11
   323   000626  5003               	movf	(data@i+1)^0,w,c
   324   000628  E109               	bnz	u10
   325   00062A  0E64               	movlw	100
   326   00062C  5C02               	subwf	data@i^0,w,c
   327   00062E  A0D8               	btfss	status,0,c
   328   000630  EF1C  F003         	goto	u11
   329   000634  EF1E  F003         	goto	u10
   330   000638                     u11:
   331   000638  EF0E  F003         	goto	l732
   332   00063C                     u10:
   333   00063C                     
   334                           ;displaywithfunction.c: 42:     RC2=0;
   335   00063C  9482               	bcf	3970,2,c	;volatile
   336   00063E                     
   337                           ;displaywithfunction.c: 43:     for(int i=0;i<5000;i++);
   338   00063E  0E00               	movlw	0
   339   000640  6E05               	movwf	(data@i_53+1)^0,c
   340   000642  0E00               	movlw	0
   341   000644  6E04               	movwf	data@i_53^0,c
   342   000646                     l742:
   343   000646  4A04               	infsnz	data@i_53^0,f,c
   344   000648  2A05               	incf	(data@i_53+1)^0,f,c
   345   00064A  BE05               	btfsc	(data@i_53+1)^0,7,c
   346   00064C  EF31  F003         	goto	u21
   347   000650  0E88               	movlw	136
   348   000652  5C04               	subwf	data@i_53^0,w,c
   349   000654  0E13               	movlw	19
   350   000656  5805               	subwfb	(data@i_53+1)^0,w,c
   351   000658  A0D8               	btfss	status,0,c
   352   00065A  EF31  F003         	goto	u21
   353   00065E  EF33  F003         	goto	u20
   354   000662                     u21:
   355   000662  EF23  F003         	goto	l742
   356   000666                     u20:
   357   000666  0012               	return		;funcret
   358   000668                     __end_of_data:
   359                           	callstack 0
   360                           
   361 ;; *************** function _cmnd *****************
   362 ;; Defined at:
   363 ;;		line 24 in file "displaywithfunction.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  a               1    wreg     unsigned char 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  a               1    0[COMRAM] unsigned char 
   368 ;;  i               2    3[COMRAM] int 
   369 ;;  i               2    1[COMRAM] int 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   379 ;;      Params:         0       0       0       0       0       0       0
   380 ;;      Locals:         5       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0
   382 ;;      Totals:         5       0       0       0       0       0       0
   383 ;;Total ram usage:        5 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393   000668                     __ptext3:
   394                           	callstack 0
   395   000668                     _cmnd:
   396                           	callstack 30
   397                           
   398                           ;incstack = 0
   399                           ;cmnd@a stored from wreg
   400   000668  6E01               	movwf	cmnd@a^0,c
   401   00066A                     
   402                           ;displaywithfunction.c: 24: void cmnd (unsigned char a);displaywithfunction.c: 25: {;dis
      +                          playwithfunction.c: 26: RC0=0;
   403   00066A  9082               	bcf	3970,0,c	;volatile
   404                           
   405                           ;displaywithfunction.c: 27: RC1=0;
   406   00066C  9282               	bcf	3970,1,c	;volatile
   407   00066E                     
   408                           ;displaywithfunction.c: 28: PORTD=a;
   409   00066E  C001  FF83         	movff	cmnd@a,3971	;volatile
   410   000672                     
   411                           ;displaywithfunction.c: 29: RC2=1;
   412   000672  8482               	bsf	3970,2,c	;volatile
   413   000674                     
   414                           ;displaywithfunction.c: 30:     for(int i=0;i<100;i++);
   415   000674  0E00               	movlw	0
   416   000676  6E03               	movwf	(cmnd@i+1)^0,c
   417   000678  0E00               	movlw	0
   418   00067A  6E02               	movwf	cmnd@i^0,c
   419   00067C                     l758:
   420   00067C  4A02               	infsnz	cmnd@i^0,f,c
   421   00067E  2A03               	incf	(cmnd@i+1)^0,f,c
   422   000680  BE03               	btfsc	(cmnd@i+1)^0,7,c
   423   000682  EF4C  F003         	goto	u31
   424   000686  5003               	movf	(cmnd@i+1)^0,w,c
   425   000688  E109               	bnz	u30
   426   00068A  0E64               	movlw	100
   427   00068C  5C02               	subwf	cmnd@i^0,w,c
   428   00068E  A0D8               	btfss	status,0,c
   429   000690  EF4C  F003         	goto	u31
   430   000694  EF4E  F003         	goto	u30
   431   000698                     u31:
   432   000698  EF3E  F003         	goto	l758
   433   00069C                     u30:
   434   00069C                     
   435                           ;displaywithfunction.c: 31:     RC2=0;
   436   00069C  9482               	bcf	3970,2,c	;volatile
   437   00069E                     
   438                           ;displaywithfunction.c: 32:     for(int i=0;i<5000;i++);
   439   00069E  0E00               	movlw	0
   440   0006A0  6E05               	movwf	(cmnd@i_49+1)^0,c
   441   0006A2  0E00               	movlw	0
   442   0006A4  6E04               	movwf	cmnd@i_49^0,c
   443   0006A6                     l768:
   444   0006A6  4A04               	infsnz	cmnd@i_49^0,f,c
   445   0006A8  2A05               	incf	(cmnd@i_49+1)^0,f,c
   446   0006AA  BE05               	btfsc	(cmnd@i_49+1)^0,7,c
   447   0006AC  EF61  F003         	goto	u41
   448   0006B0  0E88               	movlw	136
   449   0006B2  5C04               	subwf	cmnd@i_49^0,w,c
   450   0006B4  0E13               	movlw	19
   451   0006B6  5805               	subwfb	(cmnd@i_49+1)^0,w,c
   452   0006B8  A0D8               	btfss	status,0,c
   453   0006BA  EF61  F003         	goto	u41
   454   0006BE  EF63  F003         	goto	u40
   455   0006C2                     u41:
   456   0006C2  EF53  F003         	goto	l768
   457   0006C6                     u40:
   458   0006C6  0012               	return		;funcret
   459   0006C8                     __end_of_cmnd:
   460                           	callstack 0
   461                           
   462                           	psect	rparam
   463   000000                     tosu	equ	0xFFF
   464                           tosh	equ	0xFFE
   465                           tosl	equ	0xFFD
   466                           stkptr	equ	0xFFC
   467                           pclatu	equ	0xFFB
   468                           pclath	equ	0xFFA
   469                           pcl	equ	0xFF9
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           prodh	equ	0xFF4
   475                           prodl	equ	0xFF3
   476                           indf0	equ	0xFEF
   477                           postinc0	equ	0xFEE
   478                           postdec0	equ	0xFED
   479                           preinc0	equ	0xFEC
   480                           plusw0	equ	0xFEB
   481                           fsr0h	equ	0xFEA
   482                           fsr0l	equ	0xFE9
   483                           wreg	equ	0xFE8
   484                           indf1	equ	0xFE7
   485                           postinc1	equ	0xFE6
   486                           postdec1	equ	0xFE5
   487                           preinc1	equ	0xFE4
   488                           plusw1	equ	0xFE3
   489                           fsr1h	equ	0xFE2
   490                           fsr1l	equ	0xFE1
   491                           bsr	equ	0xFE0
   492                           indf2	equ	0xFDF
   493                           postinc2	equ	0xFDE
   494                           postdec2	equ	0xFDD
   495                           preinc2	equ	0xFDC
   496                           plusw2	equ	0xFDB
   497                           fsr2h	equ	0xFDA
   498                           fsr2l	equ	0xFD9
   499                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     271
                               _cmnd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     196
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmnd                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmnd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 03 12:44:06 2024

                     l21 0710                       l22 0710                       l31 06C6  
                     l35 063C                       l28 069C                       l44 06F2  
                     l38 0666                       u10 063C                       u11 0638  
                     u20 0666                       u21 0662                       u30 069C  
                     u31 0698                       u40 06C6                       u41 06C2  
                     u60 06F2                       u61 06EE                      l720 060A  
                    l800 0702                      l722 060E                      l802 0708  
                    l732 061C                      l724 0612                      l750 0672  
                    l742 0646                      l734 0620                      l726 0614  
                    l760 0680                      l752 0674                      l744 064A  
                    l736 063E                      l770 06AA                      l762 069E  
                    l746 066A                      l748 066E                      l758 067C  
                    l790 06CC                      l768 06A6                      l792 06D8  
                    l794 06DA                      l788 06C8                      l796 06F4  
                    l798 06FC                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                     STR_1 0601                     _data 0608  
                   _cmnd 0668                     _main 06F4                     start 0000  
           ___param_bank 0000                    ?_data 0001                    ?_cmnd 0001  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 06F4                    data@a 0001  
                  data@i 0002                    cmnd@a 0001                    cmnd@i 0002  
                  tablat 0FF5                    status 0FD8          __initialization 0718  
           __end_of_data 0668             __end_of_cmnd 06C8             __end_of_main 0718  
                 ??_data 0001                   ??_cmnd 0001                   ??_main 0007  
          __activetblptr 0001                   isa$std 0001                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0718  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0718  
                __ramtop 0600                  __ptext0 06F4                  __ptext1 06C8  
                __ptext2 0608                  __ptext3 0668                  _display 06C8  
   end_of_initialization 0718      start_initialization 0718                 ?_display 0006  
            __smallconst 0600                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_53 0004                 cmnd@i_49 0004  
               isa$xinst 0000                 display@p 0006  
