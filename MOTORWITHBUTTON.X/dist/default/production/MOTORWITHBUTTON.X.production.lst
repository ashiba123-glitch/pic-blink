

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 11:35:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4580 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     _TRISC	set	3988
    47   000000                     _RC0	set	31760
    48   000000                     _TRISD	set	3989
    49   000000                     _PORTD	set	3971
    50                           
    51                           ; #config settings
    52                           
    53                           	psect	cinit
    54   00069C                     __pcinit:
    55                           	callstack 0
    56   00069C                     start_initialization:
    57                           	callstack 0
    58   00069C                     __initialization:
    59                           	callstack 0
    60   00069C                     end_of_initialization:
    61                           	callstack 0
    62   00069C                     __end_of__initialization:
    63                           	callstack 0
    64   00069C  0100               	movlb	0
    65   00069E  EF01  F003         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68   000001                     __pcstackCOMRAM:
    69                           	callstack 0
    70   000001                     main@count:
    71                           	callstack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74   000001                     	ds	2
    75                           
    76 ;;
    77 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    78 ;;
    79 ;; *************** function _main *****************
    80 ;; Defined at:
    81 ;;		line 10 in file "MOTORWITHBUTTON.c"
    82 ;; Parameters:    Size  Location     Type
    83 ;;		None
    84 ;; Auto vars:     Size  Location     Type
    85 ;;  count           2    0[COMRAM] int 
    86 ;; Return value:  Size  Location     Type
    87 ;;                  1    wreg      void 
    88 ;; Registers used:
    89 ;;		wreg, status,2, status,0
    90 ;; Tracked objects:
    91 ;;		On entry : 0/0
    92 ;;		On exit  : 0/0
    93 ;;		Unchanged: 0/0
    94 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    95 ;;      Params:         0       0       0       0       0       0       0
    96 ;;      Locals:         2       0       0       0       0       0       0
    97 ;;      Temps:          0       0       0       0       0       0       0
    98 ;;      Totals:         2       0       0       0       0       0       0
    99 ;;Total ram usage:        2 bytes
   100 ;; This function calls:
   101 ;;		Nothing
   102 ;; This function is called by:
   103 ;;		Startup code after reset
   104 ;; This function uses a non-reentrant model
   105 ;;
   106                           
   107                           	psect	text0
   108   000602                     __ptext0:
   109                           	callstack 0
   110   000602                     _main:
   111                           	callstack 31
   112   000602                     
   113                           ;MOTORWITHBUTTON.c: 12:       TRISC=0XFF;
   114   000602  6894               	setf	148,c	;volatile
   115   000604                     
   116                           ;MOTORWITHBUTTON.c: 13:       TRISD=0X00;
   117   000604  0E00               	movlw	0
   118   000606  6E95               	movwf	149,c	;volatile
   119   000608                     
   120                           ;MOTORWITHBUTTON.c: 14:       int count=-1;
   121   000608  6801               	setf	main@count^0,c
   122   00060A  6802               	setf	(main@count+1)^0,c
   123   00060C                     l708:
   124                           
   125                           ;MOTORWITHBUTTON.c: 16:     {;MOTORWITHBUTTON.c: 17:         if(RC0==1)
   126   00060C  A082               	btfss	3970,0,c	;volatile
   127   00060E  EF0B  F003         	goto	u11
   128   000612  EF0D  F003         	goto	u10
   129   000616                     u11:
   130   000616  EF22  F003         	goto	l716
   131   00061A                     u10:
   132   00061A                     
   133                           ;MOTORWITHBUTTON.c: 18:         {;MOTORWITHBUTTON.c: 19:             if(count==2)
   134   00061A  0E02               	movlw	2
   135   00061C  1801               	xorwf	main@count^0,w,c
   136   00061E  1002               	iorwf	(main@count+1)^0,w,c
   137   000620  A4D8               	btfss	status,2,c
   138   000622  EF15  F003         	goto	u21
   139   000626  EF17  F003         	goto	u20
   140   00062A                     u21:
   141   00062A  EF19  F003         	goto	l714
   142   00062E                     u20:
   143   00062E                     
   144                           ;MOTORWITHBUTTON.c: 20:             {;MOTORWITHBUTTON.c: 21:                 count=-1;
   145   00062E  6801               	setf	main@count^0,c
   146   000630  6802               	setf	(main@count+1)^0,c
   147   000632                     l714:
   148                           
   149                           ;MOTORWITHBUTTON.c: 23:             count++;
   150   000632  4A01               	infsnz	main@count^0,f,c
   151   000634  2A02               	incf	(main@count+1)^0,f,c
   152   000636                     l16:
   153   000636  B082               	btfsc	3970,0,c	;volatile
   154   000638  EF20  F003         	goto	u31
   155   00063C  EF22  F003         	goto	u30
   156   000640                     u31:
   157   000640  EF1B  F003         	goto	l16
   158   000644                     u30:
   159   000644                     l716:
   160                           
   161                           ;MOTORWITHBUTTON.c: 26:          if(count==0)
   162   000644  5001               	movf	main@count^0,w,c
   163   000646  1002               	iorwf	(main@count+1)^0,w,c
   164   000648  A4D8               	btfss	status,2,c
   165   00064A  EF29  F003         	goto	u41
   166   00064E  EF2B  F003         	goto	u40
   167   000652                     u41:
   168   000652  EF2F  F003         	goto	l720
   169   000656                     u40:
   170   000656                     
   171                           ;MOTORWITHBUTTON.c: 27:             {;MOTORWITHBUTTON.c: 28:             PORTD=0X01;
   172   000656  0E01               	movlw	1
   173   000658  6E83               	movwf	131,c	;volatile
   174                           
   175                           ;MOTORWITHBUTTON.c: 29:             }
   176   00065A  EF06  F003         	goto	l708
   177   00065E                     l720:
   178   00065E  0401               	decf	main@count^0,w,c
   179   000660  1002               	iorwf	(main@count+1)^0,w,c
   180   000662  A4D8               	btfss	status,2,c
   181   000664  EF36  F003         	goto	u51
   182   000668  EF38  F003         	goto	u50
   183   00066C                     u51:
   184   00066C  EF3C  F003         	goto	l724
   185   000670                     u50:
   186   000670                     
   187                           ;MOTORWITHBUTTON.c: 31:             {;MOTORWITHBUTTON.c: 32:             PORTD=0X02;
   188   000670  0E02               	movlw	2
   189   000672  6E83               	movwf	131,c	;volatile
   190                           
   191                           ;MOTORWITHBUTTON.c: 33:             }
   192   000674  EF06  F003         	goto	l708
   193   000678                     l724:
   194   000678  0E02               	movlw	2
   195   00067A  1801               	xorwf	main@count^0,w,c
   196   00067C  1002               	iorwf	(main@count+1)^0,w,c
   197   00067E  A4D8               	btfss	status,2,c
   198   000680  EF44  F003         	goto	u61
   199   000684  EF46  F003         	goto	u60
   200   000688                     u61:
   201   000688  EF4A  F003         	goto	l20
   202   00068C                     u60:
   203   00068C                     
   204                           ;MOTORWITHBUTTON.c: 35:             {;MOTORWITHBUTTON.c: 36:              PORTD=0X00;
   205   00068C  0E00               	movlw	0
   206   00068E  6E83               	movwf	131,c	;volatile
   207   000690  EF06  F003         	goto	l708
   208   000694                     l20:
   209   000694  EF06  F003         	goto	l708
   210   000698  EF00  F000         	goto	start
   211   00069C                     __end_of_main:
   212                           	callstack 0
   213                           
   214                           	psect	smallconst
   215   000600                     __psmallconst:
   216                           	callstack 0
   217   000600  00                 	db	0
   218   000601  00                 	db	0	; dummy byte at the end
   219   000000                     
   220                           	psect	rparam
   221   000000                     tosu	equ	0xFFF
   222                           tosh	equ	0xFFE
   223                           tosl	equ	0xFFD
   224                           stkptr	equ	0xFFC
   225                           pclatu	equ	0xFFB
   226                           pclath	equ	0xFFA
   227                           pcl	equ	0xFF9
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           prodh	equ	0xFF4
   233                           prodl	equ	0xFF3
   234                           indf0	equ	0xFEF
   235                           postinc0	equ	0xFEE
   236                           postdec0	equ	0xFED
   237                           preinc0	equ	0xFEC
   238                           plusw0	equ	0xFEB
   239                           fsr0h	equ	0xFEA
   240                           fsr0l	equ	0xFE9
   241                           wreg	equ	0xFE8
   242                           indf1	equ	0xFE7
   243                           postinc1	equ	0xFE6
   244                           postdec1	equ	0xFE5
   245                           preinc1	equ	0xFE4
   246                           plusw1	equ	0xFE3
   247                           fsr1h	equ	0xFE2
   248                           fsr1l	equ	0xFE1
   249                           bsr	equ	0xFE0
   250                           indf2	equ	0xFDF
   251                           postinc2	equ	0xFDE
   252                           postdec2	equ	0xFDD
   253                           preinc2	equ	0xFDC
   254                           plusw2	equ	0xFDB
   255                           fsr2h	equ	0xFDA
   256                           fsr2l	equ	0xFD9
   257                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 11:35:37 2024

                     l20 0694                       l16 0636                       u10 061A  
                     u11 0616                       u20 062E                       u21 062A  
                     u30 0644                       u31 0640                       u40 0656  
                     u41 0652                       u50 0670                       u51 066C  
                     u60 068C                       u61 0688                      l710 061A  
                    l702 0602                      l720 065E                      l712 062E  
                    l704 0604                      l722 0670                      l714 0632  
                    l706 0608                      l724 0678                      l716 0644  
                    l708 060C                      l726 068C                      l718 0656  
                    _RC0 7C10                     _main 0602                     start 0000  
           ___param_bank 0000                    ?_main 0001                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    status 0FD8  
        __initialization 069C             __end_of_main 069C                   ??_main 0001  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 069C            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 069C                  __ramtop 0600  
                __ptext0 0602     end_of_initialization 069C      start_initialization 069C  
            __smallconst 0600                main@count 0001                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000  
