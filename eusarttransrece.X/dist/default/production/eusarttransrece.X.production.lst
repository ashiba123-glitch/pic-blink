

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 17:46:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RCREG	set	4014
    51   000000                     _TXREG	set	4013
    52   000000                     _SPBRG	set	4015
    53   000000                     _RC2	set	31762
    54   000000                     _RC1	set	31761
    55   000000                     _RCIF	set	31989
    56   000000                     _TRISC	set	3988
    57   000000                     _TRISD	set	3989
    58   000000                     _RC0	set	31760
    59   000000                     _RCSTA	set	4011
    60   000000                     _TXSTA	set	4012
    61   000000                     _TXIF	set	31988
    62   000000                     _PORTD	set	3971
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   000734                     __pcinit:
    68                           	callstack 0
    69   000734                     start_initialization:
    70                           	callstack 0
    71   000734                     __initialization:
    72                           	callstack 0
    73   000734                     end_of_initialization:
    74                           	callstack 0
    75   000734                     __end_of__initialization:
    76                           	callstack 0
    77   000734  0100               	movlb	0
    78   000736  EF61  F003         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     cmd@a:
    84                           	callstack 0
    85   000001                     data@b:
    86                           	callstack 0
    87                           
    88                           ; 1 bytes @ 0x0
    89   000001                     	ds	1
    90   000002                     cmd@i:
    91                           	callstack 0
    92   000002                     data@i:
    93                           	callstack 0
    94                           
    95                           ; 2 bytes @ 0x1
    96   000002                     	ds	2
    97   000004                     cmd@i_65:
    98                           	callstack 0
    99   000004                     data@i_69:
   100                           	callstack 0
   101                           
   102                           ; 2 bytes @ 0x3
   103   000004                     	ds	2
   104   000006                     
   105                           ; 1 bytes @ 0x5
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 15 in file "transrece.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   125 ;;      Params:         0       0       0       0       0       0       0
   126 ;;      Locals:         0       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0
   128 ;;      Totals:         0       0       0       0       0       0       0
   129 ;;Total ram usage:        0 bytes
   130 ;; Hardware stack levels required when called: 2
   131 ;; This function calls:
   132 ;;		_cmd
   133 ;;		_reception
   134 ;;		_transmission
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141   0006C2                     __ptext0:
   142                           	callstack 0
   143   0006C2                     _main:
   144                           	callstack 29
   145   0006C2                     
   146                           ;transrece.c: 16:     TRISD=0X00;
   147   0006C2  0E00               	movlw	0
   148   0006C4  6E95               	movwf	149,c	;volatile
   149                           
   150                           ;transrece.c: 17:     TRISC=0X80;
   151   0006C6  0E80               	movlw	128
   152   0006C8  6E94               	movwf	148,c	;volatile
   153                           
   154                           ;transrece.c: 18:     TXSTA=0X24;
   155   0006CA  0E24               	movlw	36
   156   0006CC  6EAC               	movwf	172,c	;volatile
   157                           
   158                           ;transrece.c: 19:     RCSTA=0X90;
   159   0006CE  0E90               	movlw	144
   160   0006D0  6EAB               	movwf	171,c	;volatile
   161                           
   162                           ;transrece.c: 20:     SPBRG=129;
   163   0006D2  0E81               	movlw	129
   164   0006D4  6EAF               	movwf	175,c	;volatile
   165   0006D6                     
   166                           ;transrece.c: 22:     cmd(0x01);
   167   0006D6  0E01               	movlw	1
   168   0006D8  EC31  F003         	call	_cmd
   169   0006DC                     
   170                           ;transrece.c: 23:     cmd(0x0f);
   171   0006DC  0E0F               	movlw	15
   172   0006DE  EC31  F003         	call	_cmd
   173   0006E2                     
   174                           ;transrece.c: 24:     cmd(0x38);
   175   0006E2  0E38               	movlw	56
   176   0006E4  EC31  F003         	call	_cmd
   177   0006E8                     
   178                           ;transrece.c: 25:     cmd(0x06);
   179   0006E8  0E06               	movlw	6
   180   0006EA  EC31  F003         	call	_cmd
   181   0006EE                     
   182                           ;transrece.c: 26:     cmd(0x80);
   183   0006EE  0E80               	movlw	128
   184   0006F0  EC31  F003         	call	_cmd
   185   0006F4                     l822:
   186                           
   187                           ;transrece.c: 28:     {;transrece.c: 30:     reception();
   188   0006F4  EC8E  F003         	call	_reception	;wreg free
   189   0006F8                     
   190                           ;transrece.c: 31:       transmission();
   191   0006F8  EC82  F003         	call	_transmission	;wreg free
   192   0006FC  EF7A  F003         	goto	l822
   193   000700  EF00  F000         	goto	start
   194   000704                     __end_of_main:
   195                           	callstack 0
   196                           
   197 ;; *************** function _transmission *****************
   198 ;; Defined at:
   199 ;;		line 35 in file "transrece.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   213 ;;      Params:         0       0       0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels used: 1
   219 ;; This function calls:
   220 ;;		Nothing
   221 ;; This function is called by:
   222 ;;		_main
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text1
   227   000704                     __ptext1:
   228                           	callstack 0
   229   000704                     _transmission:
   230                           	callstack 30
   231   000704                     
   232                           ;transrece.c: 37:     TXREG=RCREG;
   233   000704  CFAE FFAD          	movff	4014,4013	;volatile
   234   000708                     l808:
   235   000708  50AD               	movf	173,w,c	;volatile
   236   00070A  B4D8               	btfsc	status,2,c
   237   00070C  EF8A  F003         	goto	u61
   238   000710  EF8C  F003         	goto	u60
   239   000714                     u61:
   240   000714  EF84  F003         	goto	l808
   241   000718                     u60:
   242   000718                     
   243                           ;transrece.c: 39:     TXIF=0;
   244   000718  989E               	bcf	3998,4,c	;volatile
   245   00071A  0012               	return		;funcret
   246   00071C                     __end_of_transmission:
   247                           	callstack 0
   248                           
   249 ;; *************** function _reception *****************
   250 ;; Defined at:
   251 ;;		line 41 in file "transrece.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels used: 1
   271 ;; Hardware stack levels required when called: 1
   272 ;; This function calls:
   273 ;;		_data
   274 ;; This function is called by:
   275 ;;		_main
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text2
   280   00071C                     __ptext2:
   281                           	callstack 0
   282   00071C                     _reception:
   283                           	callstack 29
   284   00071C                     l51:
   285   00071C  AA9E               	btfss	3998,5,c	;volatile
   286   00071E  EF93  F003         	goto	u51
   287   000722  EF95  F003         	goto	u50
   288   000726                     u51:
   289   000726  EF8E  F003         	goto	l51
   290   00072A                     u50:
   291   00072A                     
   292                           ;transrece.c: 45:     RCIF=0;
   293   00072A  9A9E               	bcf	3998,5,c	;volatile
   294   00072C                     
   295                           ;transrece.c: 46:     data(RCREG);
   296   00072C  50AE               	movf	174,w,c	;volatile
   297   00072E  EC01  F003         	call	_data
   298   000732  0012               	return		;funcret
   299   000734                     __end_of_reception:
   300                           	callstack 0
   301                           
   302 ;; *************** function _data *****************
   303 ;; Defined at:
   304 ;;		line 60 in file "transrece.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;  b               1    wreg     unsigned char 
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  b               1    0[COMRAM] unsigned char 
   309 ;;  i               2    3[COMRAM] int 
   310 ;;  i               2    1[COMRAM] int 
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   320 ;;      Params:         0       0       0       0       0       0       0
   321 ;;      Locals:         5       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0
   323 ;;      Totals:         5       0       0       0       0       0       0
   324 ;;Total ram usage:        5 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_reception
   330 ;;		_display
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text3
   335   000602                     __ptext3:
   336                           	callstack 0
   337   000602                     _data:
   338                           	callstack 29
   339                           
   340                           ;incstack = 0
   341                           ;data@b stored from wreg
   342   000602  6E01               	movwf	data@b^0,c
   343   000604                     
   344                           ;transrece.c: 60: void data(unsigned char b );transrece.c: 61: {;transrece.c: 62:     RC
      +                          0=1;
   345   000604  8082               	bsf	3970,0,c	;volatile
   346                           
   347                           ;transrece.c: 63:     RC1=0;
   348   000606  9282               	bcf	3970,1,c	;volatile
   349   000608                     
   350                           ;transrece.c: 64:     PORTD=b;
   351   000608  C001  FF83         	movff	data@b,3971	;volatile
   352   00060C                     
   353                           ;transrece.c: 65:     RC2=1;
   354   00060C  8482               	bsf	3970,2,c	;volatile
   355   00060E                     
   356                           ;transrece.c: 66:     for(int i=0;i<=100;i++);
   357   00060E  0E00               	movlw	0
   358   000610  6E03               	movwf	(data@i+1)^0,c
   359   000612  0E00               	movlw	0
   360   000614  6E02               	movwf	data@i^0,c
   361   000616                     l762:
   362   000616  4A02               	infsnz	data@i^0,f,c
   363   000618  2A03               	incf	(data@i+1)^0,f,c
   364   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   365   00061C  EF19  F003         	goto	u11
   366   000620  5003               	movf	(data@i+1)^0,w,c
   367   000622  E109               	bnz	u10
   368   000624  0E65               	movlw	101
   369   000626  5C02               	subwf	data@i^0,w,c
   370   000628  A0D8               	btfss	status,0,c
   371   00062A  EF19  F003         	goto	u11
   372   00062E  EF1B  F003         	goto	u10
   373   000632                     u11:
   374   000632  EF0B  F003         	goto	l762
   375   000636                     u10:
   376   000636                     
   377                           ;transrece.c: 67:     RC2=0;
   378   000636  9482               	bcf	3970,2,c	;volatile
   379   000638                     
   380                           ;transrece.c: 68:     for(int i=0;i<=5000;i++);
   381   000638  0E00               	movlw	0
   382   00063A  6E05               	movwf	(data@i_69+1)^0,c
   383   00063C  0E00               	movlw	0
   384   00063E  6E04               	movwf	data@i_69^0,c
   385   000640                     l772:
   386   000640  4A04               	infsnz	data@i_69^0,f,c
   387   000642  2A05               	incf	(data@i_69+1)^0,f,c
   388   000644  BE05               	btfsc	(data@i_69+1)^0,7,c
   389   000646  EF2E  F003         	goto	u21
   390   00064A  0E89               	movlw	137
   391   00064C  5C04               	subwf	data@i_69^0,w,c
   392   00064E  0E13               	movlw	19
   393   000650  5805               	subwfb	(data@i_69+1)^0,w,c
   394   000652  A0D8               	btfss	status,0,c
   395   000654  EF2E  F003         	goto	u21
   396   000658  EF30  F003         	goto	u20
   397   00065C                     u21:
   398   00065C  EF20  F003         	goto	l772
   399   000660                     u20:
   400   000660  0012               	return		;funcret
   401   000662                     __end_of_data:
   402                           	callstack 0
   403                           
   404 ;; *************** function _cmd *****************
   405 ;; Defined at:
   406 ;;		line 50 in file "transrece.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  a               1    wreg     unsigned char 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  a               1    0[COMRAM] unsigned char 
   411 ;;  i               2    3[COMRAM] int 
   412 ;;  i               2    1[COMRAM] int 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         0       0       0       0       0       0       0
   423 ;;      Locals:         5       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         5       0       0       0       0       0       0
   426 ;;Total ram usage:        5 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text4
   436   000662                     __ptext4:
   437                           	callstack 0
   438   000662                     _cmd:
   439                           	callstack 30
   440                           
   441                           ;incstack = 0
   442                           ;cmd@a stored from wreg
   443   000662  6E01               	movwf	cmd@a^0,c
   444   000664                     
   445                           ;transrece.c: 50:     void cmd(unsigned char a );transrece.c: 51: {;transrece.c: 52:    
      +                           RC0=0;
   446   000664  9082               	bcf	3970,0,c	;volatile
   447                           
   448                           ;transrece.c: 53:     RC1=0;
   449   000666  9282               	bcf	3970,1,c	;volatile
   450   000668                     
   451                           ;transrece.c: 54:     PORTD=a;
   452   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   453   00066C                     
   454                           ;transrece.c: 55:     RC2=1;
   455   00066C  8482               	bsf	3970,2,c	;volatile
   456   00066E                     
   457                           ;transrece.c: 56:     for(int i=0;i<=100;i++);
   458   00066E  0E00               	movlw	0
   459   000670  6E03               	movwf	(cmd@i+1)^0,c
   460   000672  0E00               	movlw	0
   461   000674  6E02               	movwf	cmd@i^0,c
   462   000676                     l788:
   463   000676  4A02               	infsnz	cmd@i^0,f,c
   464   000678  2A03               	incf	(cmd@i+1)^0,f,c
   465   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   466   00067C  EF49  F003         	goto	u31
   467   000680  5003               	movf	(cmd@i+1)^0,w,c
   468   000682  E109               	bnz	u30
   469   000684  0E65               	movlw	101
   470   000686  5C02               	subwf	cmd@i^0,w,c
   471   000688  A0D8               	btfss	status,0,c
   472   00068A  EF49  F003         	goto	u31
   473   00068E  EF4B  F003         	goto	u30
   474   000692                     u31:
   475   000692  EF3B  F003         	goto	l788
   476   000696                     u30:
   477   000696                     
   478                           ;transrece.c: 57:     RC2=0;
   479   000696  9482               	bcf	3970,2,c	;volatile
   480   000698                     
   481                           ;transrece.c: 58:     for(int i=0;i<=5000;i++);
   482   000698  0E00               	movlw	0
   483   00069A  6E05               	movwf	(cmd@i_65+1)^0,c
   484   00069C  0E00               	movlw	0
   485   00069E  6E04               	movwf	cmd@i_65^0,c
   486   0006A0                     l798:
   487   0006A0  4A04               	infsnz	cmd@i_65^0,f,c
   488   0006A2  2A05               	incf	(cmd@i_65+1)^0,f,c
   489   0006A4  BE05               	btfsc	(cmd@i_65+1)^0,7,c
   490   0006A6  EF5E  F003         	goto	u41
   491   0006AA  0E89               	movlw	137
   492   0006AC  5C04               	subwf	cmd@i_65^0,w,c
   493   0006AE  0E13               	movlw	19
   494   0006B0  5805               	subwfb	(cmd@i_65+1)^0,w,c
   495   0006B2  A0D8               	btfss	status,0,c
   496   0006B4  EF5E  F003         	goto	u41
   497   0006B8  EF60  F003         	goto	u40
   498   0006BC                     u41:
   499   0006BC  EF50  F003         	goto	l798
   500   0006C0                     u40:
   501   0006C0  0012               	return		;funcret
   502   0006C2                     __end_of_cmd:
   503                           	callstack 0
   504                           
   505                           	psect	smallconst
   506   000600                     __psmallconst:
   507                           	callstack 0
   508   000600  00                 	db	0
   509   000601  00                 	db	0	; dummy byte at the end
   510   000000                     
   511                           	psect	rparam
   512   000000                     tosu	equ	0xFFF
   513                           tosh	equ	0xFFE
   514                           tosl	equ	0xFFD
   515                           stkptr	equ	0xFFC
   516                           pclatu	equ	0xFFB
   517                           pclath	equ	0xFFA
   518                           pcl	equ	0xFF9
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           prodh	equ	0xFF4
   524                           prodl	equ	0xFF3
   525                           indf0	equ	0xFEF
   526                           postinc0	equ	0xFEE
   527                           postdec0	equ	0xFED
   528                           preinc0	equ	0xFEC
   529                           plusw0	equ	0xFEB
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           wreg	equ	0xFE8
   533                           indf1	equ	0xFE7
   534                           postinc1	equ	0xFE6
   535                           postdec1	equ	0xFE5
   536                           preinc1	equ	0xFE4
   537                           plusw1	equ	0xFE3
   538                           fsr1h	equ	0xFE2
   539                           fsr1l	equ	0xFE1
   540                           bsr	equ	0xFE0
   541                           indf2	equ	0xFDF
   542                           postinc2	equ	0xFDE
   543                           postdec2	equ	0xFDD
   544                           preinc2	equ	0xFDC
   545                           plusw2	equ	0xFDB
   546                           fsr2h	equ	0xFDA
   547                           fsr2l	equ	0xFD9
   548                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _reception->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _cmd
                          _reception
                       _transmission
 ---------------------------------------------------------------------------------
 (1) _transmission                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reception                                            0     0      0      75
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _reception
     _data
   _transmission

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        50      0       0      16        0.0%
BITBIGSFRhlh         C      0       0      17        0.0%
BITBIGSFRhll         8      0       0      18        0.0%
BITBIGSFRlh         10      0       0      19        0.0%
BITBIGSFRll        282      0       0      20        0.0%
ABS                  0      0       0      21        0.0%
BIGRAM             5FF      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 17:46:29 2024

                     l51 071C                       l61 06C0                       l53 072A  
                     l54 0732                       l47 0718                       l48 071A  
                     l65 0636                       l58 0696                       l68 0660  
                     u10 0636                       u11 0632                       u20 0660  
                     u21 065C                       u30 0696                       u31 0692  
                     u40 06C0                       u41 06BC                       u50 072A  
                     u51 0726                       u60 0718                       u61 0714  
                    l800 06A4                      l802 071C                      l810 06C2  
                    l804 072C                      l820 06EE                      l812 06D6  
                    l750 0604                      l806 0704                      l822 06F4  
                    l814 06DC                      l752 0608                      l808 0708  
                    l824 06F8                      l816 06E2                      l762 0616  
                    l754 060C                      l818 06E8                      l780 066C  
                    l772 0640                      l764 061A                      l756 060E  
                    l790 067A                      l782 066E                      l774 0644  
                    l766 0638                      l792 0698                      l776 0664  
                    l778 0668                      l788 0676                      l798 06A0  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _cmd 0662                     ?_cmd 0001                     _RCIF 7CF5  
                   _TXIF 7CF4             _transmission 0704                     _data 0602  
                   cmd@a 0001                     cmd@i 0002                     _main 06C2  
                   start 0000             ___param_bank 0000                    ??_cmd 0001  
                  ?_data 0001                    ?_main 0001                    _RCREG 0FAE  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    _TXREG 0FAD  
                  _TXSTA 0FAC                    data@b 0001                    data@i 0002  
                  status 0FD8          __initialization 0734             __end_of_data 0662  
           __end_of_main 0704                   ??_data 0001                   ??_main 0006  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0734            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0734                  __ramtop 0600  
                __ptext0 06C2                  __ptext1 0704                  __ptext2 071C  
                __ptext3 0602                  __ptext4 0662                  cmd@i_65 0004  
      __end_of_reception 0734     end_of_initialization 0734      start_initialization 0734  
            __end_of_cmd 06C2            ?_transmission 0001           ??_transmission 0001  
            __smallconst 0600                _reception 071C               ?_reception 0001  
               __Hrparam 0000                 __Lrparam 0000     __end_of_transmission 071C  
               data@i_69 0004                 isa$xinst 0000              ??_reception 0006  
