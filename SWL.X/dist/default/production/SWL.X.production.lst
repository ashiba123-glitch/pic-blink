

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 06 10:11:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _RC5	set	31765
    53   000000                     _PORTB	set	3969
    54   000000                     _TRISB	set	3987
    55   000000                     _TRISC	set	3988
    56   000000                     _RC4	set	31764
    57   000000                     _TRISD	set	3989
    58   000000                     _PORTD	set	3971
    59                           
    60                           	psect	smallconst
    61   000600                     __psmallconst:
    62                           	callstack 0
    63   000600  00                 	db	0
    64   000601                     STR_2:
    65   000601  41                 	db	65	;'A'
    66   000602  4E                 	db	78	;'N'
    67   000603  54                 	db	84	;'T'
    68   000604  49                 	db	73	;'I'
    69   000605  43                 	db	67	;'C'
    70   000606  4C                 	db	76	;'L'
    71   000607  4F                 	db	79	;'O'
    72   000608  43                 	db	67	;'C'
    73   000609  4B                 	db	75	;'K'
    74   00060A  57                 	db	87	;'W'
    75   00060B  49                 	db	73	;'I'
    76   00060C  53                 	db	83	;'S'
    77   00060D  45                 	db	69	;'E'
    78   00060E  00                 	db	0
    79   00060F                     STR_3:
    80   00060F  53                 	db	83	;'S'
    81   000610  54                 	db	84	;'T'
    82   000611  4F                 	db	79	;'O'
    83   000612  50                 	db	80	;'P'
    84   000613  00                 	db	0
    85   000614  00                 	db	0	; dummy byte at the end
    86   000000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   000896                     __pcinit:
    91                           	callstack 0
    92   000896                     start_initialization:
    93                           	callstack 0
    94   000896                     __initialization:
    95                           	callstack 0
    96   000896                     end_of_initialization:
    97                           	callstack 0
    98   000896                     __end_of__initialization:
    99                           	callstack 0
   100   000896  0E00               	movlw	low (__Lsmallconst shr (0+16))
   101   000898  6EF8               	movwf	tblptru,c
   102   00089A  0E06               	movlw	high __Lsmallconst
   103   00089C  6EF7               	movwf	tblptrh,c
   104   00089E  0100               	movlb	0
   105   0008A0  EF0B  F003         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     cmd@a:
   111                           	callstack 0
   112   000001                     data@b:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	1
   117   000002                     cmd@i:
   118                           	callstack 0
   119   000002                     data@i:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x1
   123   000002                     	ds	2
   124   000004                     cmd@i_59:
   125                           	callstack 0
   126   000004                     data@i_63:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x3
   130   000004                     	ds	2
   131   000006                     display@p:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x5
   135   000006                     	ds	1
   136   000007                     main@count:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x6
   140   000007                     	ds	2
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 15 in file "SWL4.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;  count           2    6[COMRAM] int 
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         0       0       0       0       0       0       0
   162 ;;      Locals:         2       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0
   164 ;;      Totals:         2       0       0       0       0       0       0
   165 ;;Total ram usage:        2 bytes
   166 ;; Hardware stack levels required when called: 2
   167 ;; This function calls:
   168 ;;		_cmd
   169 ;;		_display
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176   000616                     __ptext0:
   177                           	callstack 0
   178   000616                     _main:
   179                           	callstack 29
   180   000616                     
   181                           ;SWL4.c: 17:      TRISC=0X30;
   182   000616  0E30               	movlw	48
   183   000618  6E94               	movwf	148,c	;volatile
   184                           
   185                           ;SWL4.c: 18:      TRISD=0X00;
   186   00061A  0E00               	movlw	0
   187   00061C  6E95               	movwf	149,c	;volatile
   188                           
   189                           ;SWL4.c: 19:      TRISB=0X00;
   190   00061E  0E00               	movlw	0
   191   000620  6E93               	movwf	147,c	;volatile
   192   000622                     
   193                           ;SWL4.c: 20:     cmd(0x01);
   194   000622  0E01               	movlw	1
   195   000624  EC05  F004         	call	_cmd
   196   000628                     
   197                           ;SWL4.c: 21:     cmd(0x0f);
   198   000628  0E0F               	movlw	15
   199   00062A  EC05  F004         	call	_cmd
   200   00062E                     
   201                           ;SWL4.c: 22:     cmd(0x38);
   202   00062E  0E38               	movlw	56
   203   000630  EC05  F004         	call	_cmd
   204   000634                     
   205                           ;SWL4.c: 28:     int count=-1;
   206   000634  6807               	setf	main@count^0,c
   207   000636  6808               	setf	(main@count+1)^0,c
   208   000638                     l892:
   209                           
   210                           ;SWL4.c: 31: {;SWL4.c: 32:      if(RC4==1)
   211   000638  A882               	btfss	3970,4,c	;volatile
   212   00063A  EF21  F003         	goto	u191
   213   00063E  EF23  F003         	goto	u190
   214   000642                     u191:
   215   000642  EF78  F003         	goto	l920
   216   000646                     u190:
   217   000646                     
   218                           ;SWL4.c: 33:         {;SWL4.c: 34:             if(count==2)
   219   000646  0E02               	movlw	2
   220   000648  1807               	xorwf	main@count^0,w,c
   221   00064A  1008               	iorwf	(main@count+1)^0,w,c
   222   00064C  A4D8               	btfss	status,2,c
   223   00064E  EF2B  F003         	goto	u201
   224   000652  EF2D  F003         	goto	u200
   225   000656                     u201:
   226   000656  EF2F  F003         	goto	l898
   227   00065A                     u200:
   228   00065A                     
   229                           ;SWL4.c: 35:             {;SWL4.c: 36:                 count=-1;
   230   00065A  6807               	setf	main@count^0,c
   231   00065C  6808               	setf	(main@count+1)^0,c
   232   00065E                     l898:
   233                           
   234                           ;SWL4.c: 38:             count++;
   235   00065E  4A07               	infsnz	main@count^0,f,c
   236   000660  2A08               	incf	(main@count+1)^0,f,c
   237   000662                     l32:
   238   000662  B882               	btfsc	3970,4,c	;volatile
   239   000664  EF36  F003         	goto	u211
   240   000668  EF38  F003         	goto	u210
   241   00066C                     u211:
   242   00066C  EF31  F003         	goto	l32
   243   000670                     u210:
   244   000670                     
   245                           ;SWL4.c: 40:             cmd(0x01);
   246   000670  0E01               	movlw	1
   247   000672  EC05  F004         	call	_cmd
   248                           
   249                           ;SWL4.c: 41:             cmd(0x38);
   250   000676  0E38               	movlw	56
   251   000678  EC05  F004         	call	_cmd
   252                           
   253                           ;SWL4.c: 42:             cmd(0x80);
   254   00067C  0E80               	movlw	128
   255   00067E  EC05  F004         	call	_cmd
   256                           
   257                           ;SWL4.c: 44:             cmd(0x1c);
   258   000682  0E1C               	movlw	28
   259   000684  EC05  F004         	call	_cmd
   260   000688                     
   261                           ;SWL4.c: 45:      if(count==0)
   262   000688  5007               	movf	main@count^0,w,c
   263   00068A  1008               	iorwf	(main@count+1)^0,w,c
   264   00068C  A4D8               	btfss	status,2,c
   265   00068E  EF4B  F003         	goto	u221
   266   000692  EF4D  F003         	goto	u220
   267   000696                     u221:
   268   000696  EF55  F003         	goto	l908
   269   00069A                     u220:
   270   00069A                     
   271                           ;SWL4.c: 46:      {;SWL4.c: 47:          PORTB=0X01;
   272   00069A  0E01               	movlw	1
   273   00069C  6E81               	movwf	129,c	;volatile
   274   00069E                     
   275                           ;SWL4.c: 48:          display("CLOCKWISE");
   276   00069E  0E05               	movlw	low (STR_2+4)
   277   0006A0  6E06               	movwf	display@p^0,c
   278   0006A2  EC35  F004         	call	_display	;wreg free
   279                           
   280                           ;SWL4.c: 51:      }
   281   0006A6  EF78  F003         	goto	l920
   282   0006AA                     l908:
   283   0006AA  0407               	decf	main@count^0,w,c
   284   0006AC  1008               	iorwf	(main@count+1)^0,w,c
   285   0006AE  A4D8               	btfss	status,2,c
   286   0006B0  EF5C  F003         	goto	u231
   287   0006B4  EF5E  F003         	goto	u230
   288   0006B8                     u231:
   289   0006B8  EF66  F003         	goto	l914
   290   0006BC                     u230:
   291   0006BC                     
   292                           ;SWL4.c: 53:             {;SWL4.c: 54:           PORTB=0X02;
   293   0006BC  0E02               	movlw	2
   294   0006BE  6E81               	movwf	129,c	;volatile
   295   0006C0                     
   296                           ;SWL4.c: 55:           display("ANTICLOCKWISE");
   297   0006C0  0E01               	movlw	low STR_2
   298   0006C2  6E06               	movwf	display@p^0,c
   299   0006C4  EC35  F004         	call	_display	;wreg free
   300                           
   301                           ;SWL4.c: 59: }
   302   0006C8  EF78  F003         	goto	l920
   303   0006CC                     l914:
   304   0006CC  0E02               	movlw	2
   305   0006CE  1807               	xorwf	main@count^0,w,c
   306   0006D0  1008               	iorwf	(main@count+1)^0,w,c
   307   0006D2  A4D8               	btfss	status,2,c
   308   0006D4  EF6E  F003         	goto	u241
   309   0006D8  EF70  F003         	goto	u240
   310   0006DC                     u241:
   311   0006DC  EF78  F003         	goto	l36
   312   0006E0                     u240:
   313   0006E0                     
   314                           ;SWL4.c: 61:       {;SWL4.c: 62:           PORTB=0X03;
   315   0006E0  0E03               	movlw	3
   316   0006E2  6E81               	movwf	129,c	;volatile
   317   0006E4                     
   318                           ;SWL4.c: 63:           display("STOP");
   319   0006E4  0E0F               	movlw	low STR_3
   320   0006E6  6E06               	movwf	display@p^0,c
   321   0006E8  EC35  F004         	call	_display	;wreg free
   322   0006EC  EF78  F003         	goto	l920
   323   0006F0                     l36:
   324   0006F0                     l920:
   325                           
   326                           ;SWL4.c: 69:     {;SWL4.c: 70:         if(RC5==1)
   327   0006F0  AA82               	btfss	3970,5,c	;volatile
   328   0006F2  EF7D  F003         	goto	u251
   329   0006F6  EF7F  F003         	goto	u250
   330   0006FA                     u251:
   331   0006FA  EF1C  F003         	goto	l892
   332   0006FE                     u250:
   333   0006FE                     
   334                           ;SWL4.c: 71:         {;SWL4.c: 72:             if(count==2)
   335   0006FE  0E02               	movlw	2
   336   000700  1807               	xorwf	main@count^0,w,c
   337   000702  1008               	iorwf	(main@count+1)^0,w,c
   338   000704  A4D8               	btfss	status,2,c
   339   000706  EF87  F003         	goto	u261
   340   00070A  EF89  F003         	goto	u260
   341   00070E                     u261:
   342   00070E  EF8B  F003         	goto	l926
   343   000712                     u260:
   344   000712                     
   345                           ;SWL4.c: 73:             {;SWL4.c: 74:                 count=-1;
   346   000712  6807               	setf	main@count^0,c
   347   000714  6808               	setf	(main@count+1)^0,c
   348   000716                     l926:
   349                           
   350                           ;SWL4.c: 76:             count++;
   351   000716  4A07               	infsnz	main@count^0,f,c
   352   000718  2A08               	incf	(main@count+1)^0,f,c
   353   00071A                     l42:
   354   00071A  BA82               	btfsc	3970,5,c	;volatile
   355   00071C  EF92  F003         	goto	u271
   356   000720  EF94  F003         	goto	u270
   357   000724                     u271:
   358   000724  EF8D  F003         	goto	l42
   359   000728                     u270:
   360   000728                     
   361                           ;SWL4.c: 78:             cmd(0x01);
   362   000728  0E01               	movlw	1
   363   00072A  EC05  F004         	call	_cmd
   364                           
   365                           ;SWL4.c: 79:             cmd(0x38);
   366   00072E  0E38               	movlw	56
   367   000730  EC05  F004         	call	_cmd
   368                           
   369                           ;SWL4.c: 82:             cmd(0x1c);
   370   000734  0E1C               	movlw	28
   371   000736  EC05  F004         	call	_cmd
   372   00073A                     
   373                           ;SWL4.c: 84:      if(count==0)
   374   00073A  5007               	movf	main@count^0,w,c
   375   00073C  1008               	iorwf	(main@count+1)^0,w,c
   376   00073E  A4D8               	btfss	status,2,c
   377   000740  EFA4  F003         	goto	u281
   378   000744  EFA6  F003         	goto	u280
   379   000748                     u281:
   380   000748  EFAE  F003         	goto	l936
   381   00074C                     u280:
   382   00074C                     
   383                           ;SWL4.c: 85:      {;SWL4.c: 86:          PORTB=0X04;
   384   00074C  0E04               	movlw	4
   385   00074E  6E81               	movwf	129,c	;volatile
   386   000750                     
   387                           ;SWL4.c: 87:          display("CLOCKWISE");
   388   000750  0E05               	movlw	low (STR_2+4)
   389   000752  6E06               	movwf	display@p^0,c
   390   000754  EC35  F004         	call	_display	;wreg free
   391                           
   392                           ;SWL4.c: 90:      }
   393   000758  EF1C  F003         	goto	l892
   394   00075C                     l936:
   395   00075C  0407               	decf	main@count^0,w,c
   396   00075E  1008               	iorwf	(main@count+1)^0,w,c
   397   000760  A4D8               	btfss	status,2,c
   398   000762  EFB5  F003         	goto	u291
   399   000766  EFB7  F003         	goto	u290
   400   00076A                     u291:
   401   00076A  EFBF  F003         	goto	l942
   402   00076E                     u290:
   403   00076E                     
   404                           ;SWL4.c: 92:             {;SWL4.c: 93:           PORTB=0X08;
   405   00076E  0E08               	movlw	8
   406   000770  6E81               	movwf	129,c	;volatile
   407   000772                     
   408                           ;SWL4.c: 94:           display("ANTICLOCKWISE");
   409   000772  0E01               	movlw	low STR_2
   410   000774  6E06               	movwf	display@p^0,c
   411   000776  EC35  F004         	call	_display	;wreg free
   412                           
   413                           ;SWL4.c: 97: }
   414   00077A  EF1C  F003         	goto	l892
   415   00077E                     l942:
   416   00077E  0E02               	movlw	2
   417   000780  1807               	xorwf	main@count^0,w,c
   418   000782  1008               	iorwf	(main@count+1)^0,w,c
   419   000784  A4D8               	btfss	status,2,c
   420   000786  EFC7  F003         	goto	u301
   421   00078A  EFC9  F003         	goto	u300
   422   00078E                     u301:
   423   00078E  EFD1  F003         	goto	l40
   424   000792                     u300:
   425   000792                     
   426                           ;SWL4.c: 99:       {;SWL4.c: 100:           PORTB=0X40;
   427   000792  0E40               	movlw	64
   428   000794  6E81               	movwf	129,c	;volatile
   429   000796                     
   430                           ;SWL4.c: 101:           display("STOP");
   431   000796  0E0F               	movlw	low STR_3
   432   000798  6E06               	movwf	display@p^0,c
   433   00079A  EC35  F004         	call	_display	;wreg free
   434   00079E  EF1C  F003         	goto	l892
   435   0007A2                     l40:
   436   0007A2  EF1C  F003         	goto	l892
   437   0007A6  EF00  F000         	goto	start
   438   0007AA                     __end_of_main:
   439                           	callstack 0
   440                           
   441 ;; *************** function _display *****************
   442 ;; Defined at:
   443 ;;		line 133 in file "SWL4.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;  p               1    5[COMRAM] PTR const unsigned char 
   446 ;;		 -> STR_6(5), STR_5(14), STR_4(10), STR_3(5), 
   447 ;;		 -> STR_2(14), STR_1(10), 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         1       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 1
   466 ;; This function calls:
   467 ;;		_data
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text1
   474   00086A                     __ptext1:
   475                           	callstack 0
   476   00086A                     _display:
   477                           	callstack 29
   478   00086A                     
   479                           ;SWL4.c: 133: void display(const char *p);SWL4.c: 134: {;SWL4.c: 135:     while(*p)
   480   00086A  EF3E  F004         	goto	l880
   481   00086E                     l876:
   482                           
   483                           ;SWL4.c: 136:     {;SWL4.c: 137:         data(*p);
   484   00086E  C006  FFF6         	movff	display@p,tblptrl
   485   000872                     	if	0	;There is only one active tblptr byte
   486   000872                     	endif
   487   000872                     	if	0	;tblptru may be non-zero
   488   000872                     	endif
   489   000872                     	if	0	;tblptru may be non-zero
   490   000872                     	endif
   491   000872  0008               	tblrd		*
   492   000874  50F5               	movf	tablat,w,c
   493   000876  ECD5  F003         	call	_data
   494   00087A                     
   495                           ;SWL4.c: 138: p++;
   496   00087A  2A06               	incf	display@p^0,f,c
   497   00087C                     l880:
   498                           
   499                           ;SWL4.c: 135:     while(*p)
   500   00087C  C006  FFF6         	movff	display@p,tblptrl
   501   000880                     	if	0	;There is only one active tblptr byte
   502   000880                     	endif
   503   000880                     	if	0	;tblptru may be non-zero
   504   000880                     	endif
   505   000880                     	if	0	;tblptru may be non-zero
   506   000880                     	endif
   507   000880  0008               	tblrd		*
   508   000882  50F5               	movf	tablat,w,c
   509   000884  0900               	iorlw	0
   510   000886  A4D8               	btfss	status,2,c
   511   000888  EF48  F004         	goto	u181
   512   00088C  EF4A  F004         	goto	u180
   513   000890                     u181:
   514   000890  EF37  F004         	goto	l876
   515   000894                     u180:
   516   000894  0012               	return		;funcret
   517   000896                     __end_of_display:
   518                           	callstack 0
   519                           
   520 ;; *************** function _data *****************
   521 ;; Defined at:
   522 ;;		line 122 in file "SWL4.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  b               1    wreg     unsigned char 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  b               1    0[COMRAM] unsigned char 
   527 ;;  i               2    3[COMRAM] int 
   528 ;;  i               2    1[COMRAM] int 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   538 ;;      Params:         0       0       0       0       0       0       0
   539 ;;      Locals:         5       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0
   541 ;;      Totals:         5       0       0       0       0       0       0
   542 ;;Total ram usage:        5 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_display
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552   0007AA                     __ptext2:
   553                           	callstack 0
   554   0007AA                     _data:
   555                           	callstack 29
   556                           
   557                           ;incstack = 0
   558                           ;data@b stored from wreg
   559   0007AA  6E01               	movwf	data@b^0,c
   560   0007AC                     
   561                           ;SWL4.c: 122: void data(unsigned char b );SWL4.c: 123: {;SWL4.c: 124:     RC0=1;
   562   0007AC  8082               	bsf	3970,0,c	;volatile
   563                           
   564                           ;SWL4.c: 125:     RC1=0;
   565   0007AE  9282               	bcf	3970,1,c	;volatile
   566   0007B0                     
   567                           ;SWL4.c: 126:     PORTD=b;
   568   0007B0  C001  FF83         	movff	data@b,3971	;volatile
   569   0007B4                     
   570                           ;SWL4.c: 127:     RC2=1;
   571   0007B4  8482               	bsf	3970,2,c	;volatile
   572   0007B6                     
   573                           ;SWL4.c: 128:     for(int i=0;i<=100;i++);
   574   0007B6  0E00               	movlw	0
   575   0007B8  6E03               	movwf	(data@i+1)^0,c
   576   0007BA  0E00               	movlw	0
   577   0007BC  6E02               	movwf	data@i^0,c
   578   0007BE                     l760:
   579   0007BE  4A02               	infsnz	data@i^0,f,c
   580   0007C0  2A03               	incf	(data@i+1)^0,f,c
   581   0007C2  BE03               	btfsc	(data@i+1)^0,7,c
   582   0007C4  EFED  F003         	goto	u11
   583   0007C8  5003               	movf	(data@i+1)^0,w,c
   584   0007CA  E109               	bnz	u10
   585   0007CC  0E65               	movlw	101
   586   0007CE  5C02               	subwf	data@i^0,w,c
   587   0007D0  A0D8               	btfss	status,0,c
   588   0007D2  EFED  F003         	goto	u11
   589   0007D6  EFEF  F003         	goto	u10
   590   0007DA                     u11:
   591   0007DA  EFDF  F003         	goto	l760
   592   0007DE                     u10:
   593   0007DE                     
   594                           ;SWL4.c: 129:     RC2=0;
   595   0007DE  9482               	bcf	3970,2,c	;volatile
   596   0007E0                     
   597                           ;SWL4.c: 130:     for(int i=0;i<=5000;i++);
   598   0007E0  0E00               	movlw	0
   599   0007E2  6E05               	movwf	(data@i_63+1)^0,c
   600   0007E4  0E00               	movlw	0
   601   0007E6  6E04               	movwf	data@i_63^0,c
   602   0007E8                     l770:
   603   0007E8  4A04               	infsnz	data@i_63^0,f,c
   604   0007EA  2A05               	incf	(data@i_63+1)^0,f,c
   605   0007EC  BE05               	btfsc	(data@i_63+1)^0,7,c
   606   0007EE  EF02  F004         	goto	u21
   607   0007F2  0E89               	movlw	137
   608   0007F4  5C04               	subwf	data@i_63^0,w,c
   609   0007F6  0E13               	movlw	19
   610   0007F8  5805               	subwfb	(data@i_63+1)^0,w,c
   611   0007FA  A0D8               	btfss	status,0,c
   612   0007FC  EF02  F004         	goto	u21
   613   000800  EF04  F004         	goto	u20
   614   000804                     u21:
   615   000804  EFF4  F003         	goto	l770
   616   000808                     u20:
   617   000808  0012               	return		;funcret
   618   00080A                     __end_of_data:
   619                           	callstack 0
   620                           
   621 ;; *************** function _cmd *****************
   622 ;; Defined at:
   623 ;;		line 112 in file "SWL4.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  a               1    wreg     unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  a               1    0[COMRAM] unsigned char 
   628 ;;  i               2    3[COMRAM] int 
   629 ;;  i               2    1[COMRAM] int 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   639 ;;      Params:         0       0       0       0       0       0       0
   640 ;;      Locals:         5       0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0
   642 ;;      Totals:         5       0       0       0       0       0       0
   643 ;;Total ram usage:        5 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text3
   653   00080A                     __ptext3:
   654                           	callstack 0
   655   00080A                     _cmd:
   656                           	callstack 30
   657                           
   658                           ;incstack = 0
   659                           ;cmd@a stored from wreg
   660   00080A  6E01               	movwf	cmd@a^0,c
   661   00080C                     
   662                           ;SWL4.c: 112: void cmd(unsigned char a );SWL4.c: 113: {;SWL4.c: 114:     RC0=0;
   663   00080C  9082               	bcf	3970,0,c	;volatile
   664                           
   665                           ;SWL4.c: 115:     RC1=0;
   666   00080E  9282               	bcf	3970,1,c	;volatile
   667   000810                     
   668                           ;SWL4.c: 116:     PORTD=a;
   669   000810  C001  FF83         	movff	cmd@a,3971	;volatile
   670   000814                     
   671                           ;SWL4.c: 117:     RC2=1;
   672   000814  8482               	bsf	3970,2,c	;volatile
   673   000816                     
   674                           ;SWL4.c: 118:     for(int i=0;i<=100;i++);
   675   000816  0E00               	movlw	0
   676   000818  6E03               	movwf	(cmd@i+1)^0,c
   677   00081A  0E00               	movlw	0
   678   00081C  6E02               	movwf	cmd@i^0,c
   679   00081E                     l786:
   680   00081E  4A02               	infsnz	cmd@i^0,f,c
   681   000820  2A03               	incf	(cmd@i+1)^0,f,c
   682   000822  BE03               	btfsc	(cmd@i+1)^0,7,c
   683   000824  EF1D  F004         	goto	u31
   684   000828  5003               	movf	(cmd@i+1)^0,w,c
   685   00082A  E109               	bnz	u30
   686   00082C  0E65               	movlw	101
   687   00082E  5C02               	subwf	cmd@i^0,w,c
   688   000830  A0D8               	btfss	status,0,c
   689   000832  EF1D  F004         	goto	u31
   690   000836  EF1F  F004         	goto	u30
   691   00083A                     u31:
   692   00083A  EF0F  F004         	goto	l786
   693   00083E                     u30:
   694   00083E                     
   695                           ;SWL4.c: 119:     RC2=0;
   696   00083E  9482               	bcf	3970,2,c	;volatile
   697   000840                     
   698                           ;SWL4.c: 120:     for(int i=0;i<=5000;i++);
   699   000840  0E00               	movlw	0
   700   000842  6E05               	movwf	(cmd@i_59+1)^0,c
   701   000844  0E00               	movlw	0
   702   000846  6E04               	movwf	cmd@i_59^0,c
   703   000848                     l796:
   704   000848  4A04               	infsnz	cmd@i_59^0,f,c
   705   00084A  2A05               	incf	(cmd@i_59+1)^0,f,c
   706   00084C  BE05               	btfsc	(cmd@i_59+1)^0,7,c
   707   00084E  EF32  F004         	goto	u41
   708   000852  0E89               	movlw	137
   709   000854  5C04               	subwf	cmd@i_59^0,w,c
   710   000856  0E13               	movlw	19
   711   000858  5805               	subwfb	(cmd@i_59+1)^0,w,c
   712   00085A  A0D8               	btfss	status,0,c
   713   00085C  EF32  F004         	goto	u41
   714   000860  EF34  F004         	goto	u40
   715   000864                     u41:
   716   000864  EF24  F004         	goto	l796
   717   000868                     u40:
   718   000868  0012               	return		;funcret
   719   00086A                     __end_of_cmd:
   720                           	callstack 0
   721                           
   722                           	psect	rparam
   723   000000                     tosu	equ	0xFFF
   724                           tosh	equ	0xFFE
   725                           tosl	equ	0xFFD
   726                           stkptr	equ	0xFFC
   727                           pclatu	equ	0xFFB
   728                           pclath	equ	0xFFA
   729                           pcl	equ	0xFF9
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           prodh	equ	0xFF4
   735                           prodl	equ	0xFF3
   736                           indf0	equ	0xFEF
   737                           postinc0	equ	0xFEE
   738                           postdec0	equ	0xFED
   739                           preinc0	equ	0xFEC
   740                           plusw0	equ	0xFEB
   741                           fsr0h	equ	0xFEA
   742                           fsr0l	equ	0xFE9
   743                           wreg	equ	0xFE8
   744                           indf1	equ	0xFE7
   745                           postinc1	equ	0xFE6
   746                           postdec1	equ	0xFE5
   747                           preinc1	equ	0xFE4
   748                           plusw1	equ	0xFE3
   749                           fsr1h	equ	0xFE2
   750                           fsr1l	equ	0xFE1
   751                           bsr	equ	0xFE0
   752                           indf2	equ	0xFDF
   753                           postinc2	equ	0xFDE
   754                           postdec2	equ	0xFDD
   755                           preinc2	equ	0xFDC
   756                           plusw2	equ	0xFDB
   757                           fsr2h	equ	0xFDA
   758                           fsr2l	equ	0xFD9
   759                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[10]), STR_2(CODE[14]), STR_3(CODE[5]), STR_4(CODE[10]), 
		 -> STR_5(CODE[14]), STR_6(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     832
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     576
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 06 10:11:25 2024

                     l40 07A2                       l32 0662                       l42 071A  
                     l36 06F0                       l63 07DE                       l56 083E  
                     l72 0894                       l66 0808                       l59 0868  
                     u10 07DE                       u11 07DA                       u20 0808  
                     u21 0804                       u30 083E                       u31 083A  
                     u40 0868                       u41 0864                      l900 0670  
                    l750 07B0                      l910 06BC                      l902 0688  
                    l760 07BE                      l752 07B4                      l912 06C0  
                    l904 069A                      l920 06F0                      l770 07E8  
                    l762 07C2                      l754 07B6                      l930 073A  
                    l922 06FE                      l914 06CC                      l906 069E  
                    l780 0816                      l772 07EC                      l764 07E0  
                    l748 07AC                      l940 0772                      l932 074C  
                    l924 0712                      l916 06E0                      l908 06AA  
                    l790 0840                      l774 080C                      l942 077E  
                    l934 0750                      l926 0716                      l918 06E4  
                    l776 0810                      l880 087C                      l944 0792  
                    l936 075C                      l928 0728                      l786 081E  
                    l778 0814                      l874 086A                      l946 0796  
                    l938 076E                      l890 0634                      l882 0616  
                    l796 0848                      l788 0822                      l876 086E  
                    l892 0638                      l884 0622                      l798 084C  
                    l878 087A                      l894 0646                      l886 0628  
                    l896 065A                      l888 062E                      l898 065E  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _RC4 7C14                      _RC5 7C15                      u200 065A  
                    u201 0656                      u210 0670                      u211 066C  
                    u300 0792                      u220 069A                      u301 078E  
                    u221 0696                      u230 06BC                      u231 06B8  
                    u240 06E0                      u241 06DC                      u250 06FE  
                    u251 06FA                      u180 0894                      u260 0712  
                    u181 0890                      u261 070E                      u270 0728  
                    u190 0646                      u271 0724                      u191 0642  
                    u280 074C                      u281 0748                      u290 076E  
                    u291 076A                      _cmd 080A                     ?_cmd 0001  
                   STR_1 0605                     STR_2 0601                     STR_3 060F  
                   STR_4 0605                     STR_5 0601                     STR_6 060F  
                   _data 07AA                     cmd@a 0001                     cmd@i 0002  
                   _main 0616                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 0896  
                  data@b 0001                    data@i 0002                    tablat 0FF5  
                  status 0FD8          __initialization 0896             __end_of_data 080A  
           __end_of_main 07AA                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   isa$std 0001                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0896  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0896  
                __ramtop 0600                  __ptext0 0616                  __ptext1 086A  
                __ptext2 07AA                  __ptext3 080A                  cmd@i_59 0004  
                _display 086A     end_of_initialization 0896      start_initialization 0896  
            __end_of_cmd 086A                 ?_display 0006              __smallconst 0600  
              main@count 0007                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_63 0004                 isa$xinst 0000  
               display@p 0006  
