

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 10:21:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4580 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000AEE                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _inp
    60   000AEE  30                 	db	48
    61   000AEF  30                 	db	48
    62   000AF0  30                 	db	48
    63   000AF1  30                 	db	48
    64   000AF2  00                 	db	0
    65                           
    66                           ;initializer for _pass
    67   000AF3  31                 	db	49
    68   000AF4  32                 	db	50
    69   000AF5  33                 	db	51
    70   000AF6  34                 	db	52
    71   000AF7  00                 	db	0
    72   000000                     _PORTB	set	3969
    73   000000                     _RC2	set	31762
    74   000000                     _RC1	set	31761
    75   000000                     _RB7	set	31759
    76   000000                     _RB6	set	31758
    77   000000                     _RB5	set	31757
    78   000000                     _TRISB	set	3987
    79   000000                     _ADCON1	set	4033
    80   000000                     _RB4	set	31756
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _PORTD	set	3971
    84   000000                     _RC0	set	31760
    85                           
    86                           	psect	smallconst
    87   000600                     __psmallconst:
    88                           	callstack 0
    89   000600  00                 	db	0
    90   000601                     STR_2:
    91   000601  50                 	db	80	;'P'
    92   000602  61                 	db	97	;'a'
    93   000603  73                 	db	115	;'s'
    94   000604  73                 	db	115	;'s'
    95   000605  77                 	db	119	;'w'
    96   000606  6F                 	db	111	;'o'
    97   000607  72                 	db	114	;'r'
    98   000608  64                 	db	100	;'d'
    99   000609  20                 	db	32
   100   00060A  43                 	db	67	;'C'
   101   00060B  6F                 	db	111	;'o'
   102   00060C  72                 	db	114	;'r'
   103   00060D  72                 	db	114	;'r'
   104   00060E  65                 	db	101	;'e'
   105   00060F  63                 	db	99	;'c'
   106   000610  74                 	db	116	;'t'
   107   000611  00                 	db	0
   108   000612                     STR_1:
   109   000612  45                 	db	69	;'E'
   110   000613  6E                 	db	110	;'n'
   111   000614  74                 	db	116	;'t'
   112   000615  65                 	db	101	;'e'
   113   000616  72                 	db	114	;'r'
   114   000617  20                 	db	32
   115   000618  50                 	db	80	;'P'
   116   000619  61                 	db	97	;'a'
   117   00061A  73                 	db	115	;'s'
   118   00061B  73                 	db	115	;'s'
   119   00061C  77                 	db	119	;'w'
   120   00061D  6F                 	db	111	;'o'
   121   00061E  72                 	db	114	;'r'
   122   00061F  64                 	db	100	;'d'
   123   000620  00                 	db	0
   124   000621                     STR_3:
   125   000621  50                 	db	80	;'P'
   126   000622  61                 	db	97	;'a'
   127   000623  73                 	db	115	;'s'
   128   000624  73                 	db	115	;'s'
   129   000625  77                 	db	119	;'w'
   130   000626  6F                 	db	111	;'o'
   131   000627  72                 	db	114	;'r'
   132   000628  64                 	db	100	;'d'
   133   000629  20                 	db	32
   134   00062A  57                 	db	87	;'W'
   135   00062B  72                 	db	114	;'r'
   136   00062C  6F                 	db	111	;'o'
   137   00062D  6E                 	db	110	;'n'
   138   00062E  67                 	db	103	;'g'
   139   00062F  00                 	db	0
   140   000630  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   000A92                     __pcinit:
   146                           	callstack 0
   147   000A92                     start_initialization:
   148                           	callstack 0
   149   000A92                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (10 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   000A92  0EEE               	movlw	low __pidataCOMRAM
   155   000A94  6EF6               	movwf	tblptrl,c
   156   000A96  0E0A               	movlw	high __pidataCOMRAM
   157   000A98  6EF7               	movwf	tblptrh,c
   158   000A9A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   000A9C  6EF8               	movwf	tblptru,c
   160   000A9E  EE00  F017         	lfsr	0,__pdataCOMRAM
   161   000AA2  EE10 F00A          	lfsr	1,10
   162   000AA6                     copy_data0:
   163   000AA6  0009               	tblrd		*+
   164   000AA8  CFF5 FFEE          	movff	tablat,postinc0
   165   000AAC  50E5               	movf	postdec1,w,c
   166   000AAE  50E1               	movf	fsr1l,w,c
   167   000AB0  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000AB2  6A21               	clrf	__pbssCOMRAM& (0+255),c
   171   000AB4                     end_of_initialization:
   172                           	callstack 0
   173   000AB4                     __end_of__initialization:
   174                           	callstack 0
   175   000AB4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176   000AB6  6EF8               	movwf	tblptru,c
   177   000AB8  0E06               	movlw	high __Lsmallconst
   178   000ABA  6EF7               	movwf	tblptrh,c
   179   000ABC  0100               	movlb	0
   180   000ABE  EF19  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000021                     __pbssCOMRAM:
   184                           	callstack 0
   185   000021                     _index:
   186                           	callstack 0
   187   000021                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000017                     __pdataCOMRAM:
   191                           	callstack 0
   192   000017                     _inp:
   193                           	callstack 0
   194   000017                     	ds	5
   195   00001C                     _pass:
   196                           	callstack 0
   197   00001C                     	ds	5
   198                           
   199                           	psect	cstackCOMRAM
   200   000001                     __pcstackCOMRAM:
   201                           	callstack 0
   202   000001                     ?_strcmp:
   203                           	callstack 0
   204   000001                     cmd@a:
   205                           	callstack 0
   206   000001                     data@a:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x0
   212   000001                     	ds	1
   213   000002                     strcmp@r:
   214                           	callstack 0
   215   000002                     cmd@i:
   216                           	callstack 0
   217   000002                     data@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x1
   221   000002                     	ds	1
   222   000003                     ??_strcmp:
   223                           
   224                           ; 1 bytes @ 0x2
   225   000003                     	ds	1
   226   000004                     cmd@i_80:
   227                           	callstack 0
   228   000004                     data@i_84:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x3
   232   000004                     	ds	2
   233   000006                     display@p:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237   000006                     	ds	1
   238   000007                     main@i:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0x6
   242   000007                     	ds	4
   243   00000B                     main@i_73:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247   00000B                     	ds	4
   248   00000F                     main@i_74:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0xE
   252   00000F                     	ds	4
   253   000013                     main@i_76:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x12
   257   000013                     	ds	4
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 18 in file "newpassword.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  i               4   18[COMRAM] long 
   269 ;;  i               4   14[COMRAM] long 
   270 ;;  i               4   10[COMRAM] long 
   271 ;;  i               4    6[COMRAM] long 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:        16       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0
   284 ;;      Totals:        16       0       0       0       0       0       0
   285 ;;Total ram usage:       16 bytes
   286 ;; Hardware stack levels required when called: 2
   287 ;; This function calls:
   288 ;;		_cmd
   289 ;;		_data
   290 ;;		_display
   291 ;;		_keypad
   292 ;;		_strcmp
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299   000632                     __ptext0:
   300                           	callstack 0
   301   000632                     _main:
   302                           	callstack 29
   303   000632                     
   304                           ;newpassword.c: 19:     ADCON1=0X0F;
   305   000632  0E0F               	movlw	15
   306   000634  6EC1               	movwf	193,c	;volatile
   307                           
   308                           ;newpassword.c: 20:     TRISB=0XF0;
   309   000636  0EF0               	movlw	240
   310   000638  6E93               	movwf	147,c	;volatile
   311                           
   312                           ;newpassword.c: 21:     TRISC=TRISD=0X00;
   313   00063A  0E00               	movlw	0
   314   00063C  6E95               	movwf	149,c	;volatile
   315   00063E  CF95 FF94          	movff	3989,3988	;volatile
   316   000642                     
   317                           ;newpassword.c: 22:     cmd(0x38);
   318   000642  0E38               	movlw	56
   319   000644  ECEA  F004         	call	_cmd
   320   000648                     
   321                           ;newpassword.c: 23:     cmd(0x01);
   322   000648  0E01               	movlw	1
   323   00064A  ECEA  F004         	call	_cmd
   324   00064E                     
   325                           ;newpassword.c: 24:     cmd(0x0f);
   326   00064E  0E0F               	movlw	15
   327   000650  ECEA  F004         	call	_cmd
   328   000654                     
   329                           ;newpassword.c: 25:     cmd(0x80);
   330   000654  0E80               	movlw	128
   331   000656  ECEA  F004         	call	_cmd
   332   00065A                     l1085:
   333                           
   334                           ;newpassword.c: 28:     {;newpassword.c: 29:         cmd(0x01);
   335   00065A  0E01               	movlw	1
   336   00065C  ECEA  F004         	call	_cmd
   337   000660                     
   338                           ;newpassword.c: 30:         display("Enter Password");
   339   000660  0E12               	movlw	low STR_1
   340   000662  6E06               	movwf	display@p^0,c
   341   000664  EC61  F005         	call	_display	;wreg free
   342   000668                     
   343                           ;newpassword.c: 31:         cmd(0xc0);
   344   000668  0EC0               	movlw	192
   345   00066A  ECEA  F004         	call	_cmd
   346   00066E                     
   347                           ;newpassword.c: 32:         for(index=0;index<4;index++)
   348   00066E  0E00               	movlw	0
   349   000670  6E21               	movwf	_index^0,c
   350   000672                     l1097:
   351                           
   352                           ;newpassword.c: 33:         {;newpassword.c: 34:          inp[index]=keypad();
   353   000672  5021               	movf	_index^0,w,c
   354   000674  0F17               	addlw	low _inp
   355   000676  6ED9               	movwf	fsr2l,c
   356   000678  6ADA               	clrf	fsr2h,c
   357   00067A  EC0F  F004         	call	_keypad	;wreg free
   358   00067E  6EDF               	movwf	indf2,c
   359                           
   360                           ;newpassword.c: 35:          data(inp[index]);
   361   000680  5021               	movf	_index^0,w,c
   362   000682  0F17               	addlw	low _inp
   363   000684  6ED9               	movwf	fsr2l,c
   364   000686  6ADA               	clrf	fsr2h,c
   365   000688  50DF               	movf	indf2,w,c
   366   00068A  ECBA  F004         	call	_data
   367   00068E                     l50:
   368   00068E  A881               	btfss	3969,4,c	;volatile
   369   000690  EF4C  F003         	goto	u371
   370   000694  EF4E  F003         	goto	u370
   371   000698                     u371:
   372   000698  EF47  F003         	goto	l50
   373   00069C                     u370:
   374   00069C  AA81               	btfss	3969,5,c	;volatile
   375   00069E  EF53  F003         	goto	u381
   376   0006A2  EF55  F003         	goto	u380
   377   0006A6                     u381:
   378   0006A6  EF47  F003         	goto	l50
   379   0006AA                     u380:
   380   0006AA  AC81               	btfss	3969,6,c	;volatile
   381   0006AC  EF5A  F003         	goto	u391
   382   0006B0  EF5C  F003         	goto	u390
   383   0006B4                     u391:
   384   0006B4  EF47  F003         	goto	l50
   385   0006B8                     u390:
   386   0006B8  AE81               	btfss	3969,7,c	;volatile
   387   0006BA  EF61  F003         	goto	u401
   388   0006BE  EF63  F003         	goto	u400
   389   0006C2                     u401:
   390   0006C2  EF47  F003         	goto	l50
   391   0006C6                     u400:
   392   0006C6                     
   393                           ;newpassword.c: 37:         }
   394   0006C6  2A21               	incf	_index^0,f,c
   395   0006C8  0E03               	movlw	3
   396   0006CA  6421               	cpfsgt	_index^0,c
   397   0006CC  EF6A  F003         	goto	u411
   398   0006D0  EF6C  F003         	goto	u410
   399   0006D4                     u411:
   400   0006D4  EF39  F003         	goto	l1097
   401   0006D8                     u410:
   402   0006D8                     
   403                           ;newpassword.c: 38:         if(strcmp(inp,pass)==0)
   404   0006D8  0E17               	movlw	low _inp
   405   0006DA  6E01               	movwf	strcmp@l^0,c
   406   0006DC  0E1C               	movlw	low _pass
   407   0006DE  6E02               	movwf	strcmp@r^0,c
   408   0006E0  EC1A  F005         	call	_strcmp	;wreg free
   409   0006E4  5001               	movf	?_strcmp^0,w,c
   410   0006E6  1002               	iorwf	(?_strcmp+1)^0,w,c
   411   0006E8  A4D8               	btfss	status,2,c
   412   0006EA  EF79  F003         	goto	u421
   413   0006EE  EF7B  F003         	goto	u420
   414   0006F2                     u421:
   415   0006F2  EFC4  F003         	goto	l1131
   416   0006F6                     u420:
   417   0006F6                     
   418                           ;newpassword.c: 39:         {;newpassword.c: 40:              for(long i=0;i<=100000;i++
      +                          );
   419   0006F6  0E00               	movlw	0
   420   0006F8  6E07               	movwf	main@i^0,c
   421   0006FA  0E00               	movlw	0
   422   0006FC  6E08               	movwf	(main@i+1)^0,c
   423   0006FE  0E00               	movlw	0
   424   000700  6E09               	movwf	(main@i+2)^0,c
   425   000702  0E00               	movlw	0
   426   000704  6E0A               	movwf	(main@i+3)^0,c
   427   000706                     l1117:
   428   000706  0E01               	movlw	1
   429   000708  2607               	addwf	main@i^0,f,c
   430   00070A  0E00               	movlw	0
   431   00070C  2208               	addwfc	(main@i+1)^0,f,c
   432   00070E  2209               	addwfc	(main@i+2)^0,f,c
   433   000710  220A               	addwfc	(main@i+3)^0,f,c
   434   000712  BE0A               	btfsc	(main@i+3)^0,7,c
   435   000714  EF99  F003         	goto	u431
   436   000718  500A               	movf	(main@i+3)^0,w,c
   437   00071A  E10D               	bnz	u430
   438   00071C  0EA1               	movlw	161
   439   00071E  5C07               	subwf	main@i^0,w,c
   440   000720  0E86               	movlw	134
   441   000722  5808               	subwfb	(main@i+1)^0,w,c
   442   000724  0E01               	movlw	1
   443   000726  5809               	subwfb	(main@i+2)^0,w,c
   444   000728  A0D8               	btfss	status,0,c
   445   00072A  EF99  F003         	goto	u431
   446   00072E  EF9B  F003         	goto	u430
   447   000732                     u431:
   448   000732  EF83  F003         	goto	l1117
   449   000736                     u430:
   450   000736                     
   451                           ;newpassword.c: 41:             cmd(0x01);
   452   000736  0E01               	movlw	1
   453   000738  ECEA  F004         	call	_cmd
   454   00073C                     
   455                           ;newpassword.c: 42:             display("Password Correct");
   456   00073C  0E01               	movlw	low STR_2
   457   00073E  6E06               	movwf	display@p^0,c
   458   000740  EC61  F005         	call	_display	;wreg free
   459   000744                     
   460                           ;newpassword.c: 43:             for(long i=0;i<=1000000;i++);
   461   000744  0E00               	movlw	0
   462   000746  6E0B               	movwf	main@i_73^0,c
   463   000748  0E00               	movlw	0
   464   00074A  6E0C               	movwf	(main@i_73+1)^0,c
   465   00074C  0E00               	movlw	0
   466   00074E  6E0D               	movwf	(main@i_73+2)^0,c
   467   000750  0E00               	movlw	0
   468   000752  6E0E               	movwf	(main@i_73+3)^0,c
   469   000754                     l1129:
   470   000754  0E01               	movlw	1
   471   000756  260B               	addwf	main@i_73^0,f,c
   472   000758  0E00               	movlw	0
   473   00075A  220C               	addwfc	(main@i_73+1)^0,f,c
   474   00075C  220D               	addwfc	(main@i_73+2)^0,f,c
   475   00075E  220E               	addwfc	(main@i_73+3)^0,f,c
   476   000760  BE0E               	btfsc	(main@i_73+3)^0,7,c
   477   000762  EFC0  F003         	goto	u441
   478   000766  500E               	movf	(main@i_73+3)^0,w,c
   479   000768  E10D               	bnz	u440
   480   00076A  0E41               	movlw	65
   481   00076C  5C0B               	subwf	main@i_73^0,w,c
   482   00076E  0E42               	movlw	66
   483   000770  580C               	subwfb	(main@i_73+1)^0,w,c
   484   000772  0E0F               	movlw	15
   485   000774  580D               	subwfb	(main@i_73+2)^0,w,c
   486   000776  A0D8               	btfss	status,0,c
   487   000778  EFC0  F003         	goto	u441
   488   00077C  EFC2  F003         	goto	u440
   489   000780                     u441:
   490   000780  EFAA  F003         	goto	l1129
   491   000784                     u440:
   492   000784  EF2D  F003         	goto	l1085
   493   000788                     l1131:
   494                           
   495                           ;newpassword.c: 46:         {;newpassword.c: 47:             for(long i=0;i<=100000;i++)
      +                          ;
   496   000788  0E00               	movlw	0
   497   00078A  6E0F               	movwf	main@i_74^0,c
   498   00078C  0E00               	movlw	0
   499   00078E  6E10               	movwf	(main@i_74+1)^0,c
   500   000790  0E00               	movlw	0
   501   000792  6E11               	movwf	(main@i_74+2)^0,c
   502   000794  0E00               	movlw	0
   503   000796  6E12               	movwf	(main@i_74+3)^0,c
   504   000798                     l1137:
   505   000798  0E01               	movlw	1
   506   00079A  260F               	addwf	main@i_74^0,f,c
   507   00079C  0E00               	movlw	0
   508   00079E  2210               	addwfc	(main@i_74+1)^0,f,c
   509   0007A0  2211               	addwfc	(main@i_74+2)^0,f,c
   510   0007A2  2212               	addwfc	(main@i_74+3)^0,f,c
   511   0007A4  BE12               	btfsc	(main@i_74+3)^0,7,c
   512   0007A6  EFE2  F003         	goto	u451
   513   0007AA  5012               	movf	(main@i_74+3)^0,w,c
   514   0007AC  E10D               	bnz	u450
   515   0007AE  0EA1               	movlw	161
   516   0007B0  5C0F               	subwf	main@i_74^0,w,c
   517   0007B2  0E86               	movlw	134
   518   0007B4  5810               	subwfb	(main@i_74+1)^0,w,c
   519   0007B6  0E01               	movlw	1
   520   0007B8  5811               	subwfb	(main@i_74+2)^0,w,c
   521   0007BA  A0D8               	btfss	status,0,c
   522   0007BC  EFE2  F003         	goto	u451
   523   0007C0  EFE4  F003         	goto	u450
   524   0007C4                     u451:
   525   0007C4  EFCC  F003         	goto	l1137
   526   0007C8                     u450:
   527   0007C8                     
   528                           ;newpassword.c: 48:             cmd(0x01);
   529   0007C8  0E01               	movlw	1
   530   0007CA  ECEA  F004         	call	_cmd
   531   0007CE                     
   532                           ;newpassword.c: 49:             display("Password Wrong");
   533   0007CE  0E21               	movlw	low STR_3
   534   0007D0  6E06               	movwf	display@p^0,c
   535   0007D2  EC61  F005         	call	_display	;wreg free
   536   0007D6                     
   537                           ;newpassword.c: 50:             for(long i=0;i<=1000000;i++);
   538   0007D6  0E00               	movlw	0
   539   0007D8  6E13               	movwf	main@i_76^0,c
   540   0007DA  0E00               	movlw	0
   541   0007DC  6E14               	movwf	(main@i_76+1)^0,c
   542   0007DE  0E00               	movlw	0
   543   0007E0  6E15               	movwf	(main@i_76+2)^0,c
   544   0007E2  0E00               	movlw	0
   545   0007E4  6E16               	movwf	(main@i_76+3)^0,c
   546   0007E6                     l1149:
   547   0007E6  0E01               	movlw	1
   548   0007E8  2613               	addwf	main@i_76^0,f,c
   549   0007EA  0E00               	movlw	0
   550   0007EC  2214               	addwfc	(main@i_76+1)^0,f,c
   551   0007EE  2215               	addwfc	(main@i_76+2)^0,f,c
   552   0007F0  2216               	addwfc	(main@i_76+3)^0,f,c
   553   0007F2  BE16               	btfsc	(main@i_76+3)^0,7,c
   554   0007F4  EF09  F004         	goto	u461
   555   0007F8  5016               	movf	(main@i_76+3)^0,w,c
   556   0007FA  E10D               	bnz	u460
   557   0007FC  0E41               	movlw	65
   558   0007FE  5C13               	subwf	main@i_76^0,w,c
   559   000800  0E42               	movlw	66
   560   000802  5814               	subwfb	(main@i_76+1)^0,w,c
   561   000804  0E0F               	movlw	15
   562   000806  5815               	subwfb	(main@i_76+2)^0,w,c
   563   000808  A0D8               	btfss	status,0,c
   564   00080A  EF09  F004         	goto	u461
   565   00080E  EF0B  F004         	goto	u460
   566   000812                     u461:
   567   000812  EFF3  F003         	goto	l1149
   568   000816                     u460:
   569   000816  EF2D  F003         	goto	l1085
   570   00081A  EF00  F000         	goto	start
   571   00081E                     __end_of_main:
   572                           	callstack 0
   573                           
   574 ;; *************** function _strcmp *****************
   575 ;; Defined at:
   576 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  l               1    0[COMRAM] PTR const unsigned char 
   579 ;;		 -> inp(5), 
   580 ;;  r               1    1[COMRAM] PTR const unsigned char 
   581 ;;		 -> pass(5), 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  2    0[COMRAM] int 
   586 ;; Registers used:
   587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         2       0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0
   595 ;;      Temps:          2       0       0       0       0       0       0
   596 ;;      Totals:         4       0       0       0       0       0       0
   597 ;;Total ram usage:        4 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607   000A34                     __ptext1:
   608                           	callstack 0
   609   000A34                     _strcmp:
   610                           	callstack 30
   611   000A34  EF1E  F005         	goto	l1067
   612   000A38                     l1065:
   613   000A38  2A01               	incf	strcmp@l^0,f,c
   614   000A3A  2A02               	incf	strcmp@r^0,f,c
   615   000A3C                     l1067:
   616   000A3C  5002               	movf	strcmp@r^0,w,c
   617   000A3E  6ED9               	movwf	fsr2l,c
   618   000A40  6ADA               	clrf	fsr2h,c
   619   000A42  5001               	movf	strcmp@l^0,w,c
   620   000A44  6EE1               	movwf	fsr1l,c
   621   000A46  6AE2               	clrf	fsr1h,c
   622   000A48  50DE               	movf	postinc2,w,c
   623   000A4A  18E6               	xorwf	postinc1,w,c
   624   000A4C  A4D8               	btfss	status,2,c
   625   000A4E  EF2B  F005         	goto	u351
   626   000A52  EF2D  F005         	goto	u350
   627   000A56                     u351:
   628   000A56  EF38  F005         	goto	l1071
   629   000A5A                     u350:
   630   000A5A  5001               	movf	strcmp@l^0,w,c
   631   000A5C  6ED9               	movwf	fsr2l,c
   632   000A5E  6ADA               	clrf	fsr2h,c
   633   000A60  50DF               	movf	indf2,w,c
   634   000A62  A4D8               	btfss	status,2,c
   635   000A64  EF36  F005         	goto	u361
   636   000A68  EF38  F005         	goto	u360
   637   000A6C                     u361:
   638   000A6C  EF1C  F005         	goto	l1065
   639   000A70                     u360:
   640   000A70                     l1071:
   641   000A70  5001               	movf	strcmp@l^0,w,c
   642   000A72  6ED9               	movwf	fsr2l,c
   643   000A74  6ADA               	clrf	fsr2h,c
   644   000A76  50DF               	movf	indf2,w,c
   645   000A78  6E03               	movwf	??_strcmp^0,c
   646   000A7A  5002               	movf	strcmp@r^0,w,c
   647   000A7C  6ED9               	movwf	fsr2l,c
   648   000A7E  6ADA               	clrf	fsr2h,c
   649   000A80  50DF               	movf	indf2,w,c
   650   000A82  6E04               	movwf	(??_strcmp+1)^0,c
   651   000A84  5004               	movf	(??_strcmp+1)^0,w,c
   652   000A86  5C03               	subwf	??_strcmp^0,w,c
   653   000A88  6E01               	movwf	?_strcmp^0,c
   654   000A8A  6A02               	clrf	(?_strcmp+1)^0,c
   655   000A8C  A0D8               	btfss	status,0,c
   656   000A8E  0602               	decf	(?_strcmp+1)^0,f,c
   657   000A90  0012               	return		;funcret
   658   000A92                     __end_of_strcmp:
   659                           	callstack 0
   660                           
   661 ;; *************** function _keypad *****************
   662 ;; Defined at:
   663 ;;		line 84 in file "newpassword.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg, status,2
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   677 ;;      Params:         0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text2
   691   00081E                     __ptext2:
   692                           	callstack 0
   693   00081E                     _keypad:
   694                           	callstack 30
   695   00081E                     l88:
   696   00081E                     
   697                           ;newpassword.c: 87:     {;newpassword.c: 88:     PORTB=0X0E;
   698   00081E  0E0E               	movlw	14
   699   000820  6E81               	movwf	129,c	;volatile
   700   000822                     
   701                           ;newpassword.c: 89:     if(RB4==0)
   702   000822  B881               	btfsc	3969,4,c	;volatile
   703   000824  EF16  F004         	goto	u61
   704   000828  EF18  F004         	goto	u60
   705   00082C                     u61:
   706   00082C  EF1B  F004         	goto	l89
   707   000830                     u60:
   708   000830                     
   709                           ;newpassword.c: 90:     {;newpassword.c: 91:         return '0';
   710   000830  0E30               	movlw	48
   711   000832  EFB9  F004         	goto	l90
   712   000836                     l89:
   713   000836  BA81               	btfsc	3969,5,c	;volatile
   714   000838  EF20  F004         	goto	u71
   715   00083C  EF22  F004         	goto	u70
   716   000840                     u71:
   717   000840  EF25  F004         	goto	l92
   718   000844                     u70:
   719   000844                     
   720                           ;newpassword.c: 94:     {;newpassword.c: 95:         return '1';
   721   000844  0E31               	movlw	49
   722   000846  EFB9  F004         	goto	l90
   723   00084A                     l92:
   724   00084A  BC81               	btfsc	3969,6,c	;volatile
   725   00084C  EF2A  F004         	goto	u81
   726   000850  EF2C  F004         	goto	u80
   727   000854                     u81:
   728   000854  EF2F  F004         	goto	l94
   729   000858                     u80:
   730   000858                     
   731                           ;newpassword.c: 98:     {;newpassword.c: 99:         return '2';
   732   000858  0E32               	movlw	50
   733   00085A  EFB9  F004         	goto	l90
   734   00085E                     l94:
   735   00085E  BE81               	btfsc	3969,7,c	;volatile
   736   000860  EF34  F004         	goto	u91
   737   000864  EF36  F004         	goto	u90
   738   000868                     u91:
   739   000868  EF39  F004         	goto	l93
   740   00086C                     u90:
   741   00086C                     
   742                           ;newpassword.c: 102:     {;newpassword.c: 103:         return '3';
   743   00086C  0E33               	movlw	51
   744   00086E  EFB9  F004         	goto	l90
   745   000872                     l93:
   746   000872                     
   747                           ;newpassword.c: 105:     PORTB=0X0D;
   748   000872  0E0D               	movlw	13
   749   000874  6E81               	movwf	129,c	;volatile
   750   000876                     
   751                           ;newpassword.c: 106:      if(RB4==0)
   752   000876  B881               	btfsc	3969,4,c	;volatile
   753   000878  EF40  F004         	goto	u101
   754   00087C  EF42  F004         	goto	u100
   755   000880                     u101:
   756   000880  EF45  F004         	goto	l97
   757   000884                     u100:
   758   000884                     
   759                           ;newpassword.c: 107:     {;newpassword.c: 108:          return '4';
   760   000884  0E34               	movlw	52
   761   000886  EFB9  F004         	goto	l90
   762   00088A                     l97:
   763   00088A  BA81               	btfsc	3969,5,c	;volatile
   764   00088C  EF4A  F004         	goto	u111
   765   000890  EF4C  F004         	goto	u110
   766   000894                     u111:
   767   000894  EF4F  F004         	goto	l99
   768   000898                     u110:
   769   000898                     
   770                           ;newpassword.c: 111:     {;newpassword.c: 112:         return '5';
   771   000898  0E35               	movlw	53
   772   00089A  EFB9  F004         	goto	l90
   773   00089E                     l99:
   774   00089E  BC81               	btfsc	3969,6,c	;volatile
   775   0008A0  EF54  F004         	goto	u121
   776   0008A4  EF56  F004         	goto	u120
   777   0008A8                     u121:
   778   0008A8  EF59  F004         	goto	l101
   779   0008AC                     u120:
   780   0008AC                     
   781                           ;newpassword.c: 115:     {;newpassword.c: 116:         return '6';
   782   0008AC  0E36               	movlw	54
   783   0008AE  EFB9  F004         	goto	l90
   784   0008B2                     l101:
   785   0008B2  BE81               	btfsc	3969,7,c	;volatile
   786   0008B4  EF5E  F004         	goto	u131
   787   0008B8  EF60  F004         	goto	u130
   788   0008BC                     u131:
   789   0008BC  EF63  F004         	goto	l100
   790   0008C0                     u130:
   791   0008C0                     
   792                           ;newpassword.c: 119:     {;newpassword.c: 120:         return '7';
   793   0008C0  0E37               	movlw	55
   794   0008C2  EFB9  F004         	goto	l90
   795   0008C6                     l100:
   796   0008C6                     
   797                           ;newpassword.c: 122:     PORTB=0X0B;
   798   0008C6  0E0B               	movlw	11
   799   0008C8  6E81               	movwf	129,c	;volatile
   800   0008CA                     
   801                           ;newpassword.c: 123:      if(RB4==0)
   802   0008CA  B881               	btfsc	3969,4,c	;volatile
   803   0008CC  EF6A  F004         	goto	u141
   804   0008D0  EF6C  F004         	goto	u140
   805   0008D4                     u141:
   806   0008D4  EF6F  F004         	goto	l104
   807   0008D8                     u140:
   808   0008D8                     
   809                           ;newpassword.c: 124:     {;newpassword.c: 125:          return '8';
   810   0008D8  0E38               	movlw	56
   811   0008DA  EFB9  F004         	goto	l90
   812   0008DE                     l104:
   813   0008DE  BA81               	btfsc	3969,5,c	;volatile
   814   0008E0  EF74  F004         	goto	u151
   815   0008E4  EF76  F004         	goto	u150
   816   0008E8                     u151:
   817   0008E8  EF79  F004         	goto	l106
   818   0008EC                     u150:
   819   0008EC                     
   820                           ;newpassword.c: 128:     {;newpassword.c: 129:         return '9';
   821   0008EC  0E39               	movlw	57
   822   0008EE  EFB9  F004         	goto	l90
   823   0008F2                     l106:
   824   0008F2  BC81               	btfsc	3969,6,c	;volatile
   825   0008F4  EF7E  F004         	goto	u161
   826   0008F8  EF80  F004         	goto	u160
   827   0008FC                     u161:
   828   0008FC  EF83  F004         	goto	l108
   829   000900                     u160:
   830   000900                     
   831                           ;newpassword.c: 132:     {;newpassword.c: 133:          return 'a ';
   832   000900  0E20               	movlw	32
   833   000902  EFB9  F004         	goto	l90
   834   000906                     l108:
   835   000906  BE81               	btfsc	3969,7,c	;volatile
   836   000908  EF88  F004         	goto	u171
   837   00090C  EF8A  F004         	goto	u170
   838   000910                     u171:
   839   000910  EF8D  F004         	goto	l107
   840   000914                     u170:
   841   000914                     
   842                           ;newpassword.c: 136:     {;newpassword.c: 137:         return 'B';
   843   000914  0E42               	movlw	66
   844   000916  EFB9  F004         	goto	l90
   845   00091A                     l107:
   846   00091A                     
   847                           ;newpassword.c: 139:     PORTB=0X07;
   848   00091A  0E07               	movlw	7
   849   00091C  6E81               	movwf	129,c	;volatile
   850   00091E                     
   851                           ;newpassword.c: 140:     if(RB4==0)
   852   00091E  B881               	btfsc	3969,4,c	;volatile
   853   000920  EF94  F004         	goto	u181
   854   000924  EF96  F004         	goto	u180
   855   000928                     u181:
   856   000928  EF99  F004         	goto	l111
   857   00092C                     u180:
   858   00092C                     
   859                           ;newpassword.c: 141:     {;newpassword.c: 142:         return 'C';
   860   00092C  0E43               	movlw	67
   861   00092E  EFB9  F004         	goto	l90
   862   000932                     l111:
   863   000932  BA81               	btfsc	3969,5,c	;volatile
   864   000934  EF9E  F004         	goto	u191
   865   000938  EFA0  F004         	goto	u190
   866   00093C                     u191:
   867   00093C  EFA3  F004         	goto	l113
   868   000940                     u190:
   869   000940                     
   870                           ;newpassword.c: 145:     {;newpassword.c: 146:         return 'D';
   871   000940  0E44               	movlw	68
   872   000942  EFB9  F004         	goto	l90
   873   000946                     l113:
   874   000946  BC81               	btfsc	3969,6,c	;volatile
   875   000948  EFA8  F004         	goto	u201
   876   00094C  EFAA  F004         	goto	u200
   877   000950                     u201:
   878   000950  EFAD  F004         	goto	l115
   879   000954                     u200:
   880   000954                     
   881                           ;newpassword.c: 149:     {;newpassword.c: 150:         return 'E';
   882   000954  0E45               	movlw	69
   883   000956  EFB9  F004         	goto	l90
   884   00095A                     l115:
   885   00095A  BE81               	btfsc	3969,7,c	;volatile
   886   00095C  EFB2  F004         	goto	u211
   887   000960  EFB4  F004         	goto	u210
   888   000964                     u211:
   889   000964  EFB7  F004         	goto	l112
   890   000968                     u210:
   891   000968                     
   892                           ;newpassword.c: 153:     {;newpassword.c: 154:         return 'new password';
   893   000968  0E64               	movlw	100
   894   00096A  EFB9  F004         	goto	l90
   895   00096E                     l112:
   896   00096E  EF0F  F004         	goto	l88
   897   000972                     l90:
   898   000972  0012               	return		;funcret
   899   000974                     __end_of_keypad:
   900                           	callstack 0
   901                           
   902 ;; *************** function _display *****************
   903 ;; Defined at:
   904 ;;		line 75 in file "newpassword.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  p               1    5[COMRAM] PTR const unsigned char 
   907 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         1       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0
   922 ;;      Totals:         1       0       0       0       0       0       0
   923 ;;Total ram usage:        1 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 1
   926 ;; This function calls:
   927 ;;		_data
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text3
   934   000AC2                     __ptext3:
   935                           	callstack 0
   936   000AC2                     _display:
   937                           	callstack 29
   938   000AC2                     
   939                           ;newpassword.c: 75: void display(const char *p);newpassword.c: 76: {;newpassword.c: 77: 
      +                              while(*p)
   940   000AC2  EF6A  F005         	goto	l1061
   941   000AC6                     l1057:
   942                           
   943                           ;newpassword.c: 78:     {;newpassword.c: 79:         data(*p);
   944   000AC6  C006  FFF6         	movff	display@p,tblptrl
   945   000ACA                     	if	0	;There is only one active tblptr byte
   946   000ACA                     	endif
   947   000ACA                     	if	0	;tblptru may be non-zero
   948   000ACA                     	endif
   949   000ACA                     	if	0	;tblptru may be non-zero
   950   000ACA                     	endif
   951   000ACA  0008               	tblrd		*
   952   000ACC  50F5               	movf	tablat,w,c
   953   000ACE  ECBA  F004         	call	_data
   954   000AD2                     
   955                           ;newpassword.c: 80:         p++;
   956   000AD2  2A06               	incf	display@p^0,f,c
   957   000AD4                     l1061:
   958                           
   959                           ;newpassword.c: 77:     while(*p)
   960   000AD4  C006  FFF6         	movff	display@p,tblptrl
   961   000AD8                     	if	0	;There is only one active tblptr byte
   962   000AD8                     	endif
   963   000AD8                     	if	0	;tblptru may be non-zero
   964   000AD8                     	endif
   965   000AD8                     	if	0	;tblptru may be non-zero
   966   000AD8                     	endif
   967   000AD8  0008               	tblrd		*
   968   000ADA  50F5               	movf	tablat,w,c
   969   000ADC  0900               	iorlw	0
   970   000ADE  A4D8               	btfss	status,2,c
   971   000AE0  EF74  F005         	goto	u341
   972   000AE4  EF76  F005         	goto	u340
   973   000AE8                     u341:
   974   000AE8  EF63  F005         	goto	l1057
   975   000AEC                     u340:
   976   000AEC  0012               	return		;funcret
   977   000AEE                     __end_of_display:
   978                           	callstack 0
   979                           
   980 ;; *************** function _data *****************
   981 ;; Defined at:
   982 ;;		line 65 in file "newpassword.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  a               1    wreg     unsigned char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  a               1    0[COMRAM] unsigned char 
   987 ;;  i               2    3[COMRAM] int 
   988 ;;  i               2    1[COMRAM] int 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   998 ;;      Params:         0       0       0       0       0       0       0
   999 ;;      Locals:         5       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0
  1001 ;;      Totals:         5       0       0       0       0       0       0
  1002 ;;Total ram usage:        5 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;;		_display
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text4
  1013   000974                     __ptext4:
  1014                           	callstack 0
  1015   000974                     _data:
  1016                           	callstack 29
  1017                           
  1018                           ;incstack = 0
  1019                           ;data@a stored from wreg
  1020   000974  6E01               	movwf	data@a^0,c
  1021   000976                     
  1022                           ;newpassword.c: 65: void data(unsigned char a);newpassword.c: 66: {;newpassword.c: 67:  
      +                             RC0=1;
  1023   000976  8082               	bsf	3970,0,c	;volatile
  1024                           
  1025                           ;newpassword.c: 68:      RC1=0;
  1026   000978  9282               	bcf	3970,1,c	;volatile
  1027   00097A                     
  1028                           ;newpassword.c: 69:      PORTD=a;
  1029   00097A  C001  FF83         	movff	data@a,3971	;volatile
  1030   00097E                     
  1031                           ;newpassword.c: 70:     RC2=1;
  1032   00097E  8482               	bsf	3970,2,c	;volatile
  1033   000980                     
  1034                           ;newpassword.c: 71:     for(int i=0;i<=100;i++);
  1035   000980  0E00               	movlw	0
  1036   000982  6E03               	movwf	(data@i+1)^0,c
  1037   000984  0E00               	movlw	0
  1038   000986  6E02               	movwf	data@i^0,c
  1039   000988                     l815:
  1040   000988  4A02               	infsnz	data@i^0,f,c
  1041   00098A  2A03               	incf	(data@i+1)^0,f,c
  1042   00098C  BE03               	btfsc	(data@i+1)^0,7,c
  1043   00098E  EFD2  F004         	goto	u11
  1044   000992  5003               	movf	(data@i+1)^0,w,c
  1045   000994  E109               	bnz	u10
  1046   000996  0E65               	movlw	101
  1047   000998  5C02               	subwf	data@i^0,w,c
  1048   00099A  A0D8               	btfss	status,0,c
  1049   00099C  EFD2  F004         	goto	u11
  1050   0009A0  EFD4  F004         	goto	u10
  1051   0009A4                     u11:
  1052   0009A4  EFC4  F004         	goto	l815
  1053   0009A8                     u10:
  1054   0009A8                     
  1055                           ;newpassword.c: 72:     RC2=0;
  1056   0009A8  9482               	bcf	3970,2,c	;volatile
  1057   0009AA                     
  1058                           ;newpassword.c: 73:     for(int i=0;i<=10000;i++);
  1059   0009AA  0E00               	movlw	0
  1060   0009AC  6E05               	movwf	(data@i_84+1)^0,c
  1061   0009AE  0E00               	movlw	0
  1062   0009B0  6E04               	movwf	data@i_84^0,c
  1063   0009B2                     l825:
  1064   0009B2  4A04               	infsnz	data@i_84^0,f,c
  1065   0009B4  2A05               	incf	(data@i_84+1)^0,f,c
  1066   0009B6  BE05               	btfsc	(data@i_84+1)^0,7,c
  1067   0009B8  EFE7  F004         	goto	u21
  1068   0009BC  0E11               	movlw	17
  1069   0009BE  5C04               	subwf	data@i_84^0,w,c
  1070   0009C0  0E27               	movlw	39
  1071   0009C2  5805               	subwfb	(data@i_84+1)^0,w,c
  1072   0009C4  A0D8               	btfss	status,0,c
  1073   0009C6  EFE7  F004         	goto	u21
  1074   0009CA  EFE9  F004         	goto	u20
  1075   0009CE                     u21:
  1076   0009CE  EFD9  F004         	goto	l825
  1077   0009D2                     u20:
  1078   0009D2  0012               	return		;funcret
  1079   0009D4                     __end_of_data:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _cmd *****************
  1083 ;; Defined at:
  1084 ;;		line 56 in file "newpassword.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  a               1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  a               1    0[COMRAM] unsigned char 
  1089 ;;  i               2    3[COMRAM] int 
  1090 ;;  i               2    1[COMRAM] int 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1100 ;;      Params:         0       0       0       0       0       0       0
  1101 ;;      Locals:         5       0       0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0
  1103 ;;      Totals:         5       0       0       0       0       0       0
  1104 ;;Total ram usage:        5 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text5
  1114   0009D4                     __ptext5:
  1115                           	callstack 0
  1116   0009D4                     _cmd:
  1117                           	callstack 30
  1118                           
  1119                           ;incstack = 0
  1120                           ;cmd@a stored from wreg
  1121   0009D4  6E01               	movwf	cmd@a^0,c
  1122   0009D6                     
  1123                           ;newpassword.c: 56: void cmd(unsigned char a);newpassword.c: 57: {;newpassword.c: 58:   
      +                             RC0=RC1=0;
  1124   0009D6  9282               	bcf	3970,1,c	;volatile
  1125   0009D8  9082               	bcf	3970,0,c	;volatile
  1126   0009DA                     
  1127                           ;newpassword.c: 59:     PORTD=a;
  1128   0009DA  C001  FF83         	movff	cmd@a,3971	;volatile
  1129   0009DE                     
  1130                           ;newpassword.c: 60:     RC2=1;
  1131   0009DE  8482               	bsf	3970,2,c	;volatile
  1132   0009E0                     
  1133                           ;newpassword.c: 61:     for(int i=0;i<=100;i++);
  1134   0009E0  0E00               	movlw	0
  1135   0009E2  6E03               	movwf	(cmd@i+1)^0,c
  1136   0009E4  0E00               	movlw	0
  1137   0009E6  6E02               	movwf	cmd@i^0,c
  1138   0009E8                     l841:
  1139   0009E8  4A02               	infsnz	cmd@i^0,f,c
  1140   0009EA  2A03               	incf	(cmd@i+1)^0,f,c
  1141   0009EC  BE03               	btfsc	(cmd@i+1)^0,7,c
  1142   0009EE  EF02  F005         	goto	u31
  1143   0009F2  5003               	movf	(cmd@i+1)^0,w,c
  1144   0009F4  E109               	bnz	u30
  1145   0009F6  0E65               	movlw	101
  1146   0009F8  5C02               	subwf	cmd@i^0,w,c
  1147   0009FA  A0D8               	btfss	status,0,c
  1148   0009FC  EF02  F005         	goto	u31
  1149   000A00  EF04  F005         	goto	u30
  1150   000A04                     u31:
  1151   000A04  EFF4  F004         	goto	l841
  1152   000A08                     u30:
  1153   000A08                     
  1154                           ;newpassword.c: 62:     RC2=0;
  1155   000A08  9482               	bcf	3970,2,c	;volatile
  1156   000A0A                     
  1157                           ;newpassword.c: 63:      for(int i=0;i<=10000;i++);
  1158   000A0A  0E00               	movlw	0
  1159   000A0C  6E05               	movwf	(cmd@i_80+1)^0,c
  1160   000A0E  0E00               	movlw	0
  1161   000A10  6E04               	movwf	cmd@i_80^0,c
  1162   000A12                     l851:
  1163   000A12  4A04               	infsnz	cmd@i_80^0,f,c
  1164   000A14  2A05               	incf	(cmd@i_80+1)^0,f,c
  1165   000A16  BE05               	btfsc	(cmd@i_80+1)^0,7,c
  1166   000A18  EF17  F005         	goto	u41
  1167   000A1C  0E11               	movlw	17
  1168   000A1E  5C04               	subwf	cmd@i_80^0,w,c
  1169   000A20  0E27               	movlw	39
  1170   000A22  5805               	subwfb	(cmd@i_80+1)^0,w,c
  1171   000A24  A0D8               	btfss	status,0,c
  1172   000A26  EF17  F005         	goto	u41
  1173   000A2A  EF19  F005         	goto	u40
  1174   000A2E                     u41:
  1175   000A2E  EF09  F005         	goto	l851
  1176   000A32                     u40:
  1177   000A32  0012               	return		;funcret
  1178   000A34                     __end_of_cmd:
  1179                           	callstack 0
  1180                           
  1181                           	psect	rparam
  1182   000000                     tosu	equ	0xFFF
  1183                           tosh	equ	0xFFE
  1184                           tosl	equ	0xFFD
  1185                           stkptr	equ	0xFFC
  1186                           pclatu	equ	0xFFB
  1187                           pclath	equ	0xFFA
  1188                           pcl	equ	0xFF9
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           prodh	equ	0xFF4
  1194                           prodl	equ	0xFF3
  1195                           indf0	equ	0xFEF
  1196                           postinc0	equ	0xFEE
  1197                           postdec0	equ	0xFED
  1198                           preinc0	equ	0xFEC
  1199                           plusw0	equ	0xFEB
  1200                           fsr0h	equ	0xFEA
  1201                           fsr0l	equ	0xFE9
  1202                           wreg	equ	0xFE8
  1203                           indf1	equ	0xFE7
  1204                           postinc1	equ	0xFE6
  1205                           postdec1	equ	0xFE5
  1206                           preinc1	equ	0xFE4
  1207                           plusw1	equ	0xFE3
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           bsr	equ	0xFE0
  1211                           indf2	equ	0xFDF
  1212                           postinc2	equ	0xFDE
  1213                           postdec2	equ	0xFDD
  1214                           preinc2	equ	0xFDC
  1215                           plusw2	equ	0xFDB
  1216                           fsr2h	equ	0xFDA
  1217                           fsr2l	equ	0xFD9
  1218                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     946
                                              6 COMRAM    16    16      0
                                _cmd
                               _data
                            _display
                             _keypad
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     348
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data
   _display
     _data
   _keypad
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      21       1       34.7%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      20        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 10:21:43 2024

                     l50 068E                       l72 0A32                       l90 0972  
                     l76 09A8                       l92 084A                       l69 0A08  
                     l85 0AEC                       l93 0872                       l94 085E  
                     l79 09D2                       l88 081E                       l97 088A  
                     l89 0836                       l99 089E                       u10 09A8  
                     u11 09A4                       u20 09D2                       u21 09CE  
                     u30 0A08                       u31 0A04                       u40 0A32  
                     u41 0A2E                       u60 0830                       u61 082C  
                     u70 0844                       u71 0840                       u80 0858  
                     u81 0854                       u90 086C                       u91 0868  
                    l100 08C6                      l101 08B2                      l111 0932  
                    l112 096E                      l104 08DE                      l113 0946  
                    l106 08F2                      l115 095A                      l107 091A  
                    l108 0906                      l801 0A90                      l803 0976  
                    l805 097A                      l831 09DA                      l815 0988  
                    l807 097E                      l911 08C0                      l841 09E8  
                    l833 09DE                      l825 09B2                      l817 098C  
                    l809 0980                      l905 08AC                      l851 0A12  
                    l843 09EC                      l835 09E0                      l827 09B6  
                    l819 09AA                      l931 0900                      l915 08C6  
                    l853 0A16                      l845 0A0A                      l829 09D6  
                    l941 091A                      l925 08EC                      l917 08CA  
                    l951 0940                      l943 091E                      l919 08D8  
                    l863 081E                      l945 092C                      l937 0914  
                    l873 0844                      l865 0822                      l963 0968  
                    l891 0876                      l867 0830                      l957 0954  
                    l893 0884                      l885 086C                      l879 0858  
                    l889 0872                      l899 0898                      _RC0 7C10  
                    _RC1 7C11                      _RB4 7C0C                      _RC2 7C12  
                    _RB5 7C0D                      _RB6 7C0E                      _RB7 7C0F  
                    u100 0884                      u101 0880                      u110 0898  
                    u111 0894                      u200 0954                      u120 08AC  
                    u201 0950                      u121 08A8                      u210 0968  
                    u130 08C0                      u211 0964                      u131 08BC  
                    u140 08D8                      u141 08D4                      u150 08EC  
                    u151 08E8                      u160 0900                      u400 06C6  
                    u161 08FC                      u401 06C2                      u170 0914  
                    u410 06D8                      u171 0910                      u411 06D4  
                    u340 0AEC                      u180 092C                      u420 06F6  
                    u341 0AE8                      u181 0928                      u421 06F2  
                    u190 0940                      u350 0A5A                      u430 0736  
                    u191 093C                      u351 0A56                      u431 0732  
                    u360 0A70                      u440 0784                      u361 0A6C  
                    u441 0780                      u450 07C8                      u370 069C  
                    u451 07C4                      u371 0698                      u460 0816  
                    u380 06AA                      u461 0812                      u381 06A6  
                    u390 06B8                      u391 06B4                      _cmd 09D4  
                    _inp 0017                     l1101 06AA                     l1111 06F6  
                   l1103 06B8                     l1121 073C                     l1105 06C6  
                   l1123 0744                     l1131 0788                     l1107 06C8  
                   l1061 0AD4                     l1141 07CE                     l1117 0706  
                   l1109 06D8                     l1055 0AC2                     l1071 0A70  
                   l1063 0A34                     l1143 07D6                     l1119 0736  
                   l1057 0AC6                     l1065 0A38                     l1137 0798  
                   l1129 0754                     l1081 064E                     l1059 0AD2  
                   l1067 0A3C                     l1139 07C8                     l1091 066E  
                   l1083 0654                     l1075 0632                     l1069 0A5A  
                   l1149 07E6                     l1085 065A                     l1077 0642  
                   l1087 0660                     l1079 0648                     l1097 0672  
                   l1089 0668                     ?_cmd 0001                     l1099 069C  
                   STR_1 0612                     STR_2 0601                     STR_3 0621  
                   _data 0974                     cmd@a 0001                     cmd@i 0002  
                   _main 0632                     _pass 001C                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 0AEE  
                  data@a 0001                    data@i 0002                    _index 0021  
                  main@i 0007                    tablat 0FF5                    status 0FD8  
        __initialization 0A92             __end_of_data 09D4             __end_of_main 081E  
                 ??_data 0001                   ??_main 0007            __activetblptr 0001  
                 _ADCON1 0FC1                   _keypad 081E                   isa$std 0001  
                 _strcmp 0A34                ??_display 0007             __pdataCOMRAM 0017  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0AB4  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  ?_keypad 0001  
                ?_strcmp 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0A92                  __ramtop 0600  
                __ptext0 0632                  __ptext1 0A34                  __ptext2 081E  
                __ptext3 0AC2                  __ptext4 0974                  cmd@i_80 0004  
                __ptext5 09D4                  _display 0AC2     end_of_initialization 0AB4  
                postdec1 0FE5                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE                  strcmp@l 0001                  strcmp@r 0002  
          __pidataCOMRAM 0AEE           __end_of_keypad 0974           __end_of_strcmp 0A92  
    start_initialization 0A92              __end_of_cmd 0A34                 ??_keypad 0001  
               ??_strcmp 0003              __pbssCOMRAM 0021                 ?_display 0006  
            __smallconst 0600                copy_data0 0AA6                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_84 0004  
               isa$xinst 0000                 main@i_73 000B                 main@i_74 000F  
               main@i_76 0013                 display@p 0006  
