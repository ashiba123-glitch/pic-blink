

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 10:29:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTC	set	3970
    48   000000                     _TRISC	set	3988
    49   000000                     _TRISD	set	3989
    50   000000                     _PORTD	set	3971
    51                           
    52                           ; #config settings
    53                           
    54                           	psect	cinit
    55   0007A6                     __pcinit:
    56                           	callstack 0
    57   0007A6                     start_initialization:
    58                           	callstack 0
    59   0007A6                     __initialization:
    60                           	callstack 0
    61   0007A6                     end_of_initialization:
    62                           	callstack 0
    63   0007A6                     __end_of__initialization:
    64                           	callstack 0
    65   0007A6  0100               	movlb	0
    66   0007A8  EF01  F003         	goto	_main	;jump to C main() function
    67                           
    68                           	psect	cstackCOMRAM
    69   000001                     __pcstackCOMRAM:
    70                           	callstack 0
    71   000001                     ?___awdiv:
    72                           	callstack 0
    73   000001                     ___awdiv@dividend:
    74                           	callstack 0
    75                           
    76                           ; 2 bytes @ 0x0
    77   000001                     	ds	2
    78   000003                     ___awdiv@divisor:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x2
    82   000003                     	ds	2
    83   000005                     ___awdiv@counter:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x4
    87   000005                     	ds	1
    88   000006                     ___awdiv@sign:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x5
    92   000006                     	ds	1
    93   000007                     ___awdiv@quotient:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x6
    97   000007                     	ds	2
    98   000009                     main@i:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0x8
   102   000009                     	ds	2
   103   00000B                     main@i_36:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0xA
   107   00000B                     	ds	2
   108   00000D                     main@j:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0xC
   112   00000D                     	ds	2
   113   00000F                     main@j_35:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0xE
   117   00000F                     	ds	2
   118                           
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 11 in file "PORTCANDDBACK.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;  i               2   10[COMRAM] unsigned int 
   129 ;;  i               2    8[COMRAM] unsigned int 
   130 ;;  j               2   14[COMRAM] int 
   131 ;;  j               2   12[COMRAM] int 
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : 0/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   141 ;;      Params:         0       0       0       0       0       0       0
   142 ;;      Locals:         8       0       0       0       0       0       0
   143 ;;      Temps:          0       0       0       0       0       0       0
   144 ;;      Totals:         8       0       0       0       0       0       0
   145 ;;Total ram usage:        8 bytes
   146 ;; Hardware stack levels required when called: 1
   147 ;; This function calls:
   148 ;;		___awdiv
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155   000602                     __ptext0:
   156                           	callstack 0
   157   000602                     _main:
   158                           	callstack 30
   159   000602                     
   160                           ;PORTCANDDBACK.c: 12:     TRISC=0X00;
   161   000602  0E00               	movlw	0
   162   000604  6E94               	movwf	148,c	;volatile
   163                           
   164                           ;PORTCANDDBACK.c: 13:     TRISD=0X00;
   165   000606  0E00               	movlw	0
   166   000608  6E95               	movwf	149,c	;volatile
   167   00060A                     l13:
   168                           
   169                           ;PORTCANDDBACK.c: 16:     {;PORTCANDDBACK.c: 17:         for(int j =0X80;j>=0X01;j=j/2 )
   170   00060A  0E00               	movlw	0
   171   00060C  6E0E               	movwf	(main@j+1)^0,c
   172   00060E  0E80               	movlw	128
   173   000610  6E0D               	movwf	main@j^0,c
   174   000612                     l14:
   175                           
   176                           ;PORTCANDDBACK.c: 18:         {;PORTCANDDBACK.c: 19:            PORTC=j;
   177   000612  C00D  FF82         	movff	main@j,3970	;volatile
   178   000616                     
   179                           ;PORTCANDDBACK.c: 20: for(unsigned int i=0;i<60000;i++ );
   180   000616  0E00               	movlw	0
   181   000618  6E0A               	movwf	(main@i+1)^0,c
   182   00061A  0E00               	movlw	0
   183   00061C  6E09               	movwf	main@i^0,c
   184   00061E                     l842:
   185   00061E  4A09               	infsnz	main@i^0,f,c
   186   000620  2A0A               	incf	(main@i+1)^0,f,c
   187   000622  0E60               	movlw	96
   188   000624  5C09               	subwf	main@i^0,w,c
   189   000626  0EEA               	movlw	234
   190   000628  580A               	subwfb	(main@i+1)^0,w,c
   191   00062A  A0D8               	btfss	status,0,c
   192   00062C  EF1A  F003         	goto	u171
   193   000630  EF1C  F003         	goto	u170
   194   000634                     u171:
   195   000634  EF0F  F003         	goto	l842
   196   000638                     u170:
   197   000638                     
   198                           ;PORTCANDDBACK.c: 22:        }
   199   000638  C00D  F001         	movff	main@j,___awdiv@dividend
   200   00063C  C00E  F002         	movff	main@j+1,___awdiv@dividend+1
   201   000640  0E00               	movlw	0
   202   000642  6E04               	movwf	(___awdiv@divisor+1)^0,c
   203   000644  0E02               	movlw	2
   204   000646  6E03               	movwf	___awdiv@divisor^0,c
   205   000648  EC71  F003         	call	___awdiv	;wreg free
   206   00064C  C001  F00D         	movff	?___awdiv,main@j
   207   000650  C002  F00E         	movff	?___awdiv+1,main@j+1
   208   000654  BE0E               	btfsc	(main@j+1)^0,7,c
   209   000656  EF37  F003         	goto	u180
   210   00065A  500E               	movf	(main@j+1)^0,w,c
   211   00065C  E106               	bnz	u181
   212   00065E  040D               	decf	main@j^0,w,c
   213   000660  B0D8               	btfsc	status,0,c
   214   000662  EF35  F003         	goto	u181
   215   000666  EF37  F003         	goto	u180
   216   00066A                     u181:
   217   00066A  EF09  F003         	goto	l14
   218   00066E                     u180:
   219   00066E                     
   220                           ;PORTCANDDBACK.c: 23:         PORTC=0X00;
   221   00066E  0E00               	movlw	0
   222   000670  6E82               	movwf	130,c	;volatile
   223                           
   224                           ;PORTCANDDBACK.c: 26:      for(int j=0x80;j>=0x01;j=j/2)
   225   000672  0E00               	movlw	0
   226   000674  6E10               	movwf	(main@j_35+1)^0,c
   227   000676  0E80               	movlw	128
   228   000678  6E0F               	movwf	main@j_35^0,c
   229   00067A                     l18:
   230                           
   231                           ;PORTCANDDBACK.c: 27:         {;PORTCANDDBACK.c: 28:             PORTD=j;
   232   00067A  C00F  FF83         	movff	main@j_35,3971	;volatile
   233   00067E                     
   234                           ;PORTCANDDBACK.c: 29:             for(unsigned int i=0;i<60000;i++);
   235   00067E  0E00               	movlw	0
   236   000680  6E0C               	movwf	(main@i_36+1)^0,c
   237   000682  0E00               	movlw	0
   238   000684  6E0B               	movwf	main@i_36^0,c
   239   000686                     l862:
   240   000686  4A0B               	infsnz	main@i_36^0,f,c
   241   000688  2A0C               	incf	(main@i_36+1)^0,f,c
   242   00068A  0E60               	movlw	96
   243   00068C  5C0B               	subwf	main@i_36^0,w,c
   244   00068E  0EEA               	movlw	234
   245   000690  580C               	subwfb	(main@i_36+1)^0,w,c
   246   000692  A0D8               	btfss	status,0,c
   247   000694  EF4E  F003         	goto	u191
   248   000698  EF50  F003         	goto	u190
   249   00069C                     u191:
   250   00069C  EF43  F003         	goto	l862
   251   0006A0                     u190:
   252   0006A0                     
   253                           ;PORTCANDDBACK.c: 30:         }
   254   0006A0  C00F  F001         	movff	main@j_35,___awdiv@dividend
   255   0006A4  C010  F002         	movff	main@j_35+1,___awdiv@dividend+1
   256   0006A8  0E00               	movlw	0
   257   0006AA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   258   0006AC  0E02               	movlw	2
   259   0006AE  6E03               	movwf	___awdiv@divisor^0,c
   260   0006B0  EC71  F003         	call	___awdiv	;wreg free
   261   0006B4  C001  F00F         	movff	?___awdiv,main@j_35
   262   0006B8  C002  F010         	movff	?___awdiv+1,main@j_35+1
   263   0006BC  BE10               	btfsc	(main@j_35+1)^0,7,c
   264   0006BE  EF6B  F003         	goto	u200
   265   0006C2  5010               	movf	(main@j_35+1)^0,w,c
   266   0006C4  E106               	bnz	u201
   267   0006C6  040F               	decf	main@j_35^0,w,c
   268   0006C8  B0D8               	btfsc	status,0,c
   269   0006CA  EF69  F003         	goto	u201
   270   0006CE  EF6B  F003         	goto	u200
   271   0006D2                     u201:
   272   0006D2  EF3D  F003         	goto	l18
   273   0006D6                     u200:
   274   0006D6                     
   275                           ;PORTCANDDBACK.c: 31:         PORTD=0X00;
   276   0006D6  0E00               	movlw	0
   277   0006D8  6E83               	movwf	131,c	;volatile
   278   0006DA  EF05  F003         	goto	l13
   279   0006DE  EF00  F000         	goto	start
   280   0006E2                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function ___awdiv *****************
   284 ;; Defined at:
   285 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  dividend        2    0[COMRAM] int 
   288 ;;  divisor         2    2[COMRAM] int 
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  quotient        2    6[COMRAM] int 
   291 ;;  sign            1    5[COMRAM] unsigned char 
   292 ;;  counter         1    4[COMRAM] unsigned char 
   293 ;; Return value:  Size  Location     Type
   294 ;;                  2    0[COMRAM] int 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   302 ;;      Params:         4       0       0       0       0       0       0
   303 ;;      Locals:         4       0       0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0
   305 ;;      Totals:         8       0       0       0       0       0       0
   306 ;;Total ram usage:        8 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text1
   316   0006E2                     __ptext1:
   317                           	callstack 0
   318   0006E2                     ___awdiv:
   319                           	callstack 30
   320   0006E2  0E00               	movlw	0
   321   0006E4  6E06               	movwf	___awdiv@sign^0,c
   322   0006E6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   323   0006E8  EF7A  F003         	goto	u110
   324   0006EC  EF78  F003         	goto	u111
   325   0006F0                     u111:
   326   0006F0  EF80  F003         	goto	l794
   327   0006F4                     u110:
   328   0006F4  6C03               	negf	___awdiv@divisor^0,c
   329   0006F6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   330   0006F8  B0D8               	btfsc	status,0,c
   331   0006FA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   332   0006FC  0E01               	movlw	1
   333   0006FE  6E06               	movwf	___awdiv@sign^0,c
   334   000700                     l794:
   335   000700  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   336   000702  EF87  F003         	goto	u120
   337   000706  EF85  F003         	goto	u121
   338   00070A                     u121:
   339   00070A  EF8D  F003         	goto	l800
   340   00070E                     u120:
   341   00070E  6C01               	negf	___awdiv@dividend^0,c
   342   000710  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   343   000712  B0D8               	btfsc	status,0,c
   344   000714  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   345   000716  0E01               	movlw	1
   346   000718  1A06               	xorwf	___awdiv@sign^0,f,c
   347   00071A                     l800:
   348   00071A  0E00               	movlw	0
   349   00071C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   350   00071E  0E00               	movlw	0
   351   000720  6E07               	movwf	___awdiv@quotient^0,c
   352   000722  5003               	movf	___awdiv@divisor^0,w,c
   353   000724  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   354   000726  B4D8               	btfsc	status,2,c
   355   000728  EF98  F003         	goto	u131
   356   00072C  EF9A  F003         	goto	u130
   357   000730                     u131:
   358   000730  EFC2  F003         	goto	l822
   359   000734                     u130:
   360   000734  0E01               	movlw	1
   361   000736  6E05               	movwf	___awdiv@counter^0,c
   362   000738  EFA2  F003         	goto	l808
   363   00073C                     l806:
   364   00073C  90D8               	bcf	status,0,c
   365   00073E  3603               	rlcf	___awdiv@divisor^0,f,c
   366   000740  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   367   000742  2A05               	incf	___awdiv@counter^0,f,c
   368   000744                     l808:
   369   000744  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   370   000746  EFA7  F003         	goto	u141
   371   00074A  EFA9  F003         	goto	u140
   372   00074E                     u141:
   373   00074E  EF9E  F003         	goto	l806
   374   000752                     u140:
   375   000752                     l810:
   376   000752  90D8               	bcf	status,0,c
   377   000754  3607               	rlcf	___awdiv@quotient^0,f,c
   378   000756  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   379   000758  5003               	movf	___awdiv@divisor^0,w,c
   380   00075A  5C01               	subwf	___awdiv@dividend^0,w,c
   381   00075C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   382   00075E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   383   000760  A0D8               	btfss	status,0,c
   384   000762  EFB5  F003         	goto	u151
   385   000766  EFB7  F003         	goto	u150
   386   00076A                     u151:
   387   00076A  EFBC  F003         	goto	l818
   388   00076E                     u150:
   389   00076E  5003               	movf	___awdiv@divisor^0,w,c
   390   000770  5E01               	subwf	___awdiv@dividend^0,f,c
   391   000772  5004               	movf	(___awdiv@divisor+1)^0,w,c
   392   000774  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   393   000776  8007               	bsf	___awdiv@quotient^0,0,c
   394   000778                     l818:
   395   000778  90D8               	bcf	status,0,c
   396   00077A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   397   00077C  3203               	rrcf	___awdiv@divisor^0,f,c
   398   00077E  2E05               	decfsz	___awdiv@counter^0,f,c
   399   000780  EFA9  F003         	goto	l810
   400   000784                     l822:
   401   000784  5006               	movf	___awdiv@sign^0,w,c
   402   000786  B4D8               	btfsc	status,2,c
   403   000788  EFC8  F003         	goto	u161
   404   00078C  EFCA  F003         	goto	u160
   405   000790                     u161:
   406   000790  EFCE  F003         	goto	l826
   407   000794                     u160:
   408   000794  6C07               	negf	___awdiv@quotient^0,c
   409   000796  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   410   000798  B0D8               	btfsc	status,0,c
   411   00079A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   412   00079C                     l826:
   413   00079C  C007  F001         	movff	___awdiv@quotient,?___awdiv
   414   0007A0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   415   0007A4  0012               	return		;funcret
   416   0007A6                     __end_of___awdiv:
   417                           	callstack 0
   418                           
   419                           	psect	smallconst
   420   000600                     __psmallconst:
   421                           	callstack 0
   422   000600  00                 	db	0
   423   000601  00                 	db	0	; dummy byte at the end
   424   000000                     
   425                           	psect	rparam
   426   000000                     tosu	equ	0xFFF
   427                           tosh	equ	0xFFE
   428                           tosl	equ	0xFFD
   429                           stkptr	equ	0xFFC
   430                           pclatu	equ	0xFFB
   431                           pclath	equ	0xFFA
   432                           pcl	equ	0xFF9
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           prodh	equ	0xFF4
   438                           prodl	equ	0xFF3
   439                           indf0	equ	0xFEF
   440                           postinc0	equ	0xFEE
   441                           postdec0	equ	0xFED
   442                           preinc0	equ	0xFEC
   443                           plusw0	equ	0xFEB
   444                           fsr0h	equ	0xFEA
   445                           fsr0l	equ	0xFE9
   446                           wreg	equ	0xFE8
   447                           indf1	equ	0xFE7
   448                           postinc1	equ	0xFE6
   449                           postdec1	equ	0xFE5
   450                           preinc1	equ	0xFE4
   451                           plusw1	equ	0xFE3
   452                           fsr1h	equ	0xFE2
   453                           fsr1l	equ	0xFE1
   454                           bsr	equ	0xFE0
   455                           indf2	equ	0xFDF
   456                           postinc2	equ	0xFDE
   457                           postdec2	equ	0xFDD
   458                           preinc2	equ	0xFDC
   459                           plusw2	equ	0xFDB
   460                           fsr2h	equ	0xFDA
   461                           fsr2l	equ	0xFD9
   462                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     876
                                              8 COMRAM     8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     10      10       1       16.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 10:29:42 2024

                     l13 060A                       l14 0612                       l18 067A  
           ___awdiv@sign 0006                      l258 07A4                      l800 071A  
                    l810 0752                      l802 0722                      l820 077E  
                    l812 0758                      l804 0734                      l814 076E  
                    l806 073C                      l822 0784                      l830 0602  
                    l824 0794                      l816 0776                      l808 0744  
                    l826 079C                      l818 0778                      l850 066E  
                    l842 061E                      l844 0622                      l836 0616  
                    l790 06F4                      l870 06D6                      l862 0686  
                    l846 0638                      l792 06FC                      l864 068A  
                    l856 067E                      l848 0654                      l794 0700  
                    l786 06E2                      l866 06A0                      l796 070E  
                    l788 06E6                      l868 06BC                      l798 0716  
                    u110 06F4                      u111 06F0                      u120 070E  
                    u200 06D6                      u121 070A                      u201 06D2  
                    u130 0734                      u131 0730                      u140 0752  
                    u141 074E                      u150 076E                      u151 076A  
                    u160 0794                      u161 0790                      u170 0638  
                    u171 0634                      u180 066E                      u181 066A  
                    u190 06A0                      u191 069C                     _main 0602  
                   start 0000             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 07A6          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTC 0F82                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    main@i 0009                    main@j 000D  
                  status 0FD8          __initialization 07A6             __end_of_main 06E2  
                 ??_main 0009            __activetblptr 0000         ___awdiv@dividend 0001  
              ??___awdiv 0005         ___awdiv@quotient 0007                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 07A6  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 06E2             __psmallconst 0600  
                __pcinit 07A6                  __ramtop 0600                  __ptext0 0602  
                __ptext1 06E2     end_of_initialization 07A6      start_initialization 07A6  
               ?___awdiv 0001              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@i_36 000B  
               main@j_35 000F  
