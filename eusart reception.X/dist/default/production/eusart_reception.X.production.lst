

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 20 17:28:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 17/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4580 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _RC2	set	31762
    49   000000                     _RC1	set	31761
    50   000000                     _TRISB	set	3987
    51   000000                     _ADCON1	set	4033
    52   000000                     _RC0	set	31760
    53   000000                     _RCSTA	set	4011
    54   000000                     _TXSTA	set	4012
    55   000000                     _TRISC	set	3988
    56   000000                     _RCIF	set	31989
    57   000000                     _RCREG	set	4014
    58   000000                     _SPBRG	set	4015
    59   000000                     _BAUDCON	set	4024
    60   000000                     _PORTD	set	3971
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   00071A                     __pcinit:
    66                           	callstack 0
    67   00071A                     start_initialization:
    68                           	callstack 0
    69   00071A                     __initialization:
    70                           	callstack 0
    71   00071A                     end_of_initialization:
    72                           	callstack 0
    73   00071A                     __end_of__initialization:
    74                           	callstack 0
    75   00071A  0100               	movlb	0
    76   00071C  EF61  F003         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79   000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81   000001                     cmd@a:
    82                           	callstack 0
    83   000001                     data@b:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x0
    87   000001                     	ds	1
    88   000002                     cmd@i:
    89                           	callstack 0
    90   000002                     data@i:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x1
    94   000002                     	ds	2
    95   000004                     cmd@i_56:
    96                           	callstack 0
    97   000004                     data@i_60:
    98                           	callstack 0
    99                           
   100                           ; 2 bytes @ 0x3
   101   000004                     	ds	2
   102   000006                     main@w:
   103                           	callstack 0
   104                           
   105                           ; 1 bytes @ 0x5
   106   000006                     	ds	1
   107                           
   108 ;;
   109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   110 ;;
   111 ;; *************** function _main *****************
   112 ;; Defined at:
   113 ;;		line 13 in file "eusartreception.c"
   114 ;; Parameters:    Size  Location     Type
   115 ;;		None
   116 ;; Auto vars:     Size  Location     Type
   117 ;;  w               1    5[COMRAM] unsigned char 
   118 ;; Return value:  Size  Location     Type
   119 ;;                  1    wreg      void 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   127 ;;      Params:         0       0       0       0       0       0       0
   128 ;;      Locals:         1       0       0       0       0       0       0
   129 ;;      Temps:          0       0       0       0       0       0       0
   130 ;;      Totals:         1       0       0       0       0       0       0
   131 ;;Total ram usage:        1 bytes
   132 ;; Hardware stack levels required when called: 1
   133 ;; This function calls:
   134 ;;		_cmd
   135 ;;		_data
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142   0006C2                     __ptext0:
   143                           	callstack 0
   144   0006C2                     _main:
   145                           	callstack 30
   146   0006C2                     
   147                           ;eusartreception.c: 15:     ADCON1=0X0F;
   148   0006C2  0E0F               	movlw	15
   149   0006C4  6EC1               	movwf	193,c	;volatile
   150                           
   151                           ;eusartreception.c: 16:     TRISB=0X03;
   152   0006C6  0E03               	movlw	3
   153   0006C8  6E93               	movwf	147,c	;volatile
   154                           
   155                           ;eusartreception.c: 17:     TRISC=0X00;
   156   0006CA  0E00               	movlw	0
   157   0006CC  6E94               	movwf	148,c	;volatile
   158                           
   159                           ;eusartreception.c: 18:     TRISC=0X80;
   160   0006CE  0E80               	movlw	128
   161   0006D0  6E94               	movwf	148,c	;volatile
   162                           
   163                           ;eusartreception.c: 19:     TXSTA =0X24;
   164   0006D2  0E24               	movlw	36
   165   0006D4  6EAC               	movwf	172,c	;volatile
   166                           
   167                           ;eusartreception.c: 20:     RCSTA=0X90;
   168   0006D6  0E90               	movlw	144
   169   0006D8  6EAB               	movwf	171,c	;volatile
   170                           
   171                           ;eusartreception.c: 21:     BAUDCON=0X00;
   172   0006DA  0E00               	movlw	0
   173   0006DC  6EB8               	movwf	184,c	;volatile
   174                           
   175                           ;eusartreception.c: 22:     SPBRG=129;
   176   0006DE  0E81               	movlw	129
   177   0006E0  6EAF               	movwf	175,c	;volatile
   178   0006E2                     
   179                           ;eusartreception.c: 23:     char w;;eusartreception.c: 24:     cmd(0x01);
   180   0006E2  0E01               	movlw	1
   181   0006E4  EC31  F003         	call	_cmd
   182   0006E8                     
   183                           ;eusartreception.c: 25:     cmd(0x0f);
   184   0006E8  0E0F               	movlw	15
   185   0006EA  EC31  F003         	call	_cmd
   186   0006EE                     
   187                           ;eusartreception.c: 26:     cmd(0x80);
   188   0006EE  0E80               	movlw	128
   189   0006F0  EC31  F003         	call	_cmd
   190   0006F4                     
   191                           ;eusartreception.c: 27:     cmd(0x06);
   192   0006F4  0E06               	movlw	6
   193   0006F6  EC31  F003         	call	_cmd
   194   0006FA                     l36:
   195   0006FA  AA9E               	btfss	3998,5,c	;volatile
   196   0006FC  EF82  F003         	goto	u51
   197   000700  EF84  F003         	goto	u50
   198   000704                     u51:
   199   000704  EF7D  F003         	goto	l36
   200   000708                     u50:
   201   000708                     
   202                           ;eusartreception.c: 31:     w=RCREG;
   203   000708  CFAE F006          	movff	4014,main@w	;volatile
   204   00070C                     
   205                           ;eusartreception.c: 32:     data(w);
   206   00070C  5006               	movf	main@w^0,w,c
   207   00070E  EC01  F003         	call	_data
   208   000712  EF7D  F003         	goto	l36
   209   000716  EF00  F000         	goto	start
   210   00071A                     __end_of_main:
   211                           	callstack 0
   212                           
   213 ;; *************** function _data *****************
   214 ;; Defined at:
   215 ;;		line 45 in file "eusartreception.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;  b               1    wreg     unsigned char 
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  b               1    0[COMRAM] unsigned char 
   220 ;;  i               2    3[COMRAM] int 
   221 ;;  i               2    1[COMRAM] int 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   231 ;;      Params:         0       0       0       0       0       0       0
   232 ;;      Locals:         5       0       0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0
   234 ;;      Totals:         5       0       0       0       0       0       0
   235 ;;Total ram usage:        5 bytes
   236 ;; Hardware stack levels used: 1
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		_main
   241 ;;		_display
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text1
   246   000602                     __ptext1:
   247                           	callstack 0
   248   000602                     _data:
   249                           	callstack 30
   250                           
   251                           ;incstack = 0
   252                           ;data@b stored from wreg
   253   000602  6E01               	movwf	data@b^0,c
   254   000604                     
   255                           ;eusartreception.c: 45: void data(unsigned char b);eusartreception.c: 46: {;eusartrecept
      +                          ion.c: 47:     RC0=1;
   256   000604  8082               	bsf	3970,0,c	;volatile
   257                           
   258                           ;eusartreception.c: 48:      RC1=0;
   259   000606  9282               	bcf	3970,1,c	;volatile
   260   000608                     
   261                           ;eusartreception.c: 49:      PORTD=b;
   262   000608  C001  FF83         	movff	data@b,3971	;volatile
   263   00060C                     
   264                           ;eusartreception.c: 50:     RC2=1;
   265   00060C  8482               	bsf	3970,2,c	;volatile
   266   00060E                     
   267                           ;eusartreception.c: 51:     for(int i=0;i<=100;i++);
   268   00060E  0E00               	movlw	0
   269   000610  6E03               	movwf	(data@i+1)^0,c
   270   000612  0E00               	movlw	0
   271   000614  6E02               	movwf	data@i^0,c
   272   000616                     l775:
   273   000616  4A02               	infsnz	data@i^0,f,c
   274   000618  2A03               	incf	(data@i+1)^0,f,c
   275   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   276   00061C  EF19  F003         	goto	u31
   277   000620  5003               	movf	(data@i+1)^0,w,c
   278   000622  E109               	bnz	u30
   279   000624  0E65               	movlw	101
   280   000626  5C02               	subwf	data@i^0,w,c
   281   000628  A0D8               	btfss	status,0,c
   282   00062A  EF19  F003         	goto	u31
   283   00062E  EF1B  F003         	goto	u30
   284   000632                     u31:
   285   000632  EF0B  F003         	goto	l775
   286   000636                     u30:
   287   000636                     
   288                           ;eusartreception.c: 52:     RC2=0;
   289   000636  9482               	bcf	3970,2,c	;volatile
   290   000638                     
   291                           ;eusartreception.c: 53:     for(int i=0;i<=10000;i++);
   292   000638  0E00               	movlw	0
   293   00063A  6E05               	movwf	(data@i_60+1)^0,c
   294   00063C  0E00               	movlw	0
   295   00063E  6E04               	movwf	data@i_60^0,c
   296   000640                     l785:
   297   000640  4A04               	infsnz	data@i_60^0,f,c
   298   000642  2A05               	incf	(data@i_60+1)^0,f,c
   299   000644  BE05               	btfsc	(data@i_60+1)^0,7,c
   300   000646  EF2E  F003         	goto	u41
   301   00064A  0E11               	movlw	17
   302   00064C  5C04               	subwf	data@i_60^0,w,c
   303   00064E  0E27               	movlw	39
   304   000650  5805               	subwfb	(data@i_60+1)^0,w,c
   305   000652  A0D8               	btfss	status,0,c
   306   000654  EF2E  F003         	goto	u41
   307   000658  EF30  F003         	goto	u40
   308   00065C                     u41:
   309   00065C  EF20  F003         	goto	l785
   310   000660                     u40:
   311   000660  0012               	return		;funcret
   312   000662                     __end_of_data:
   313                           	callstack 0
   314                           
   315 ;; *************** function _cmd *****************
   316 ;; Defined at:
   317 ;;		line 36 in file "eusartreception.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  a               1    wreg     unsigned char 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  a               1    0[COMRAM] unsigned char 
   322 ;;  i               2    3[COMRAM] int 
   323 ;;  i               2    1[COMRAM] int 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         5       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         5       0       0       0       0       0       0
   337 ;;Total ram usage:        5 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text2
   347   000662                     __ptext2:
   348                           	callstack 0
   349   000662                     _cmd:
   350                           	callstack 30
   351                           
   352                           ;incstack = 0
   353                           ;cmd@a stored from wreg
   354   000662  6E01               	movwf	cmd@a^0,c
   355   000664                     
   356                           ;eusartreception.c: 36:     void cmd(unsigned char a);eusartreception.c: 37: {;eusartrec
      +                          eption.c: 38:      RC0=RC1=0;
   357   000664  9282               	bcf	3970,1,c	;volatile
   358   000666  9082               	bcf	3970,0,c	;volatile
   359   000668                     
   360                           ;eusartreception.c: 39:     PORTD=a;
   361   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   362   00066C                     
   363                           ;eusartreception.c: 40:     RC2=1;
   364   00066C  8482               	bsf	3970,2,c	;volatile
   365   00066E                     
   366                           ;eusartreception.c: 41:     for(int i=0;i<=100;i++);
   367   00066E  0E00               	movlw	0
   368   000670  6E03               	movwf	(cmd@i+1)^0,c
   369   000672  0E00               	movlw	0
   370   000674  6E02               	movwf	cmd@i^0,c
   371   000676                     l749:
   372   000676  4A02               	infsnz	cmd@i^0,f,c
   373   000678  2A03               	incf	(cmd@i+1)^0,f,c
   374   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   375   00067C  EF49  F003         	goto	u11
   376   000680  5003               	movf	(cmd@i+1)^0,w,c
   377   000682  E109               	bnz	u10
   378   000684  0E65               	movlw	101
   379   000686  5C02               	subwf	cmd@i^0,w,c
   380   000688  A0D8               	btfss	status,0,c
   381   00068A  EF49  F003         	goto	u11
   382   00068E  EF4B  F003         	goto	u10
   383   000692                     u11:
   384   000692  EF3B  F003         	goto	l749
   385   000696                     u10:
   386   000696                     
   387                           ;eusartreception.c: 42:     RC2=0;
   388   000696  9482               	bcf	3970,2,c	;volatile
   389   000698                     
   390                           ;eusartreception.c: 43:      for(int i=0;i<=10000;i++);
   391   000698  0E00               	movlw	0
   392   00069A  6E05               	movwf	(cmd@i_56+1)^0,c
   393   00069C  0E00               	movlw	0
   394   00069E  6E04               	movwf	cmd@i_56^0,c
   395   0006A0                     l759:
   396   0006A0  4A04               	infsnz	cmd@i_56^0,f,c
   397   0006A2  2A05               	incf	(cmd@i_56+1)^0,f,c
   398   0006A4  BE05               	btfsc	(cmd@i_56+1)^0,7,c
   399   0006A6  EF5E  F003         	goto	u21
   400   0006AA  0E11               	movlw	17
   401   0006AC  5C04               	subwf	cmd@i_56^0,w,c
   402   0006AE  0E27               	movlw	39
   403   0006B0  5805               	subwfb	(cmd@i_56+1)^0,w,c
   404   0006B2  A0D8               	btfss	status,0,c
   405   0006B4  EF5E  F003         	goto	u21
   406   0006B8  EF60  F003         	goto	u20
   407   0006BC                     u21:
   408   0006BC  EF50  F003         	goto	l759
   409   0006C0                     u20:
   410   0006C0  0012               	return		;funcret
   411   0006C2                     __end_of_cmd:
   412                           	callstack 0
   413                           
   414                           	psect	smallconst
   415   000600                     __psmallconst:
   416                           	callstack 0
   417   000600  00                 	db	0
   418   000601  00                 	db	0	; dummy byte at the end
   419   000000                     
   420                           	psect	rparam
   421   000000                     tosu	equ	0xFFF
   422                           tosh	equ	0xFFE
   423                           tosl	equ	0xFFD
   424                           stkptr	equ	0xFFC
   425                           pclatu	equ	0xFFB
   426                           pclath	equ	0xFFA
   427                           pcl	equ	0xFF9
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           prodh	equ	0xFF4
   433                           prodl	equ	0xFF3
   434                           indf0	equ	0xFEF
   435                           postinc0	equ	0xFEE
   436                           postdec0	equ	0xFED
   437                           preinc0	equ	0xFEC
   438                           plusw0	equ	0xFEB
   439                           fsr0h	equ	0xFEA
   440                           fsr0l	equ	0xFE9
   441                           wreg	equ	0xFE8
   442                           indf1	equ	0xFE7
   443                           postinc1	equ	0xFE6
   444                           postdec1	equ	0xFE5
   445                           preinc1	equ	0xFE4
   446                           plusw1	equ	0xFE3
   447                           fsr1h	equ	0xFE2
   448                           fsr1l	equ	0xFE1
   449                           bsr	equ	0xFE0
   450                           indf2	equ	0xFDF
   451                           postinc2	equ	0xFDE
   452                           postdec2	equ	0xFDD
   453                           preinc2	equ	0xFDC
   454                           plusw2	equ	0xFDB
   455                           fsr2h	equ	0xFDA
   456                           fsr2l	equ	0xFD9
   457                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _main->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     165
                                              5 COMRAM     1     1      0
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (1) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlhhh        8      0       0      17        0.0%
BITBIGSFRlhhlh       8      0       0      18        0.0%
BITBIGSFRlhhll       1      0       0      19        0.0%
BITBIGSFRlhlh        C      0       0      20        0.0%
BITBIGSFRlhll        9      0       0      21        0.0%
BITBIGSFRllh         F      0       0      22        0.0%
BITBIGSFRlll       282      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             5FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 20 17:28:31 2024

                     l52 0636                       l36 06FA                       l45 0696  
                     l38 0708                       l55 0660                       l48 06C0  
                     u10 0696                       u11 0692                       u20 06C0  
                     u21 06BC                       u30 0636                       u31 0632  
                     u40 0660                       u41 065C                       u50 0708  
                     u51 0704                      l741 066C                      l751 067A  
                    l743 066E                      l761 06A4                      l753 0698  
                    l737 0664                      l739 0668                      l763 0604  
                    l749 0676                      l765 0608                      l759 06A0  
                    l775 0616                      l767 060C                      l791 06E2  
                    l785 0640                      l777 061A                      l769 060E  
                    l793 06E8                      l787 0644                      l779 0638  
                    l795 06EE                      l797 06F4                      l789 06C2  
                    l799 070C                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _cmd 0662                     ?_cmd 0001  
                   _RCIF 7CF5                     _data 0602                     cmd@a 0001  
                   cmd@i 0002                     _main 06C2                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _RCREG 0FAE                    _RCSTA 0FAB  
                  _SPBRG 0FAF                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TXSTA 0FAC                    data@b 0001  
                  data@i 0002                    main@w 0006                    status 0FD8  
        __initialization 071A             __end_of_data 0662             __end_of_main 071A  
                 ??_data 0001                   ??_main 0006            __activetblptr 0000  
                 _ADCON1 0FC1                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 071A            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  _BAUDCON 0FB8                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 071A  
                __ramtop 0600                  __ptext0 06C2                  __ptext1 0602  
                __ptext2 0662                  cmd@i_56 0004     end_of_initialization 071A  
    start_initialization 071A              __end_of_cmd 06C2              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000                 data@i_60 0004  
               isa$xinst 0000  
