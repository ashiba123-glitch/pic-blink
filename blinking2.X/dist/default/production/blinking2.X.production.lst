

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 09:22:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTC	set	3970
    48   000000                     _TRISC	set	3988
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53   000736                     __pcinit:
    54                           	callstack 0
    55   000736                     start_initialization:
    56                           	callstack 0
    57   000736                     __initialization:
    58                           	callstack 0
    59   000736                     end_of_initialization:
    60                           	callstack 0
    61   000736                     __end_of__initialization:
    62                           	callstack 0
    63   000736  0100               	movlb	0
    64   000738  EF63  F003         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67   000001                     __pcstackCOMRAM:
    68                           	callstack 0
    69   000001                     ?___awdiv:
    70                           	callstack 0
    71   000001                     ___awdiv@dividend:
    72                           	callstack 0
    73                           
    74                           ; 2 bytes @ 0x0
    75   000001                     	ds	2
    76   000003                     ___awdiv@divisor:
    77                           	callstack 0
    78                           
    79                           ; 2 bytes @ 0x2
    80   000003                     	ds	2
    81   000005                     ___awdiv@counter:
    82                           	callstack 0
    83                           
    84                           ; 1 bytes @ 0x4
    85   000005                     	ds	1
    86   000006                     ___awdiv@sign:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x5
    90   000006                     	ds	1
    91   000007                     ___awdiv@quotient:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0x6
    95   000007                     	ds	2
    96   000009                     main@i:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0x8
   100   000009                     	ds	2
   101   00000B                     main@j:
   102                           	callstack 0
   103                           
   104                           ; 2 bytes @ 0xA
   105   00000B                     	ds	2
   106                           
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 11 in file "newmain1.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;  i               2    8[COMRAM] unsigned int 
   117 ;;  j               2   10[COMRAM] int 
   118 ;; Return value:  Size  Location     Type
   119 ;;                  1    wreg      void 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   127 ;;      Params:         0       0       0       0       0       0       0
   128 ;;      Locals:         4       0       0       0       0       0       0
   129 ;;      Temps:          0       0       0       0       0       0       0
   130 ;;      Totals:         4       0       0       0       0       0       0
   131 ;;Total ram usage:        4 bytes
   132 ;; Hardware stack levels required when called: 1
   133 ;; This function calls:
   134 ;;		___awdiv
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141   0006C6                     __ptext0:
   142                           	callstack 0
   143   0006C6                     _main:
   144                           	callstack 30
   145   0006C6                     
   146                           ;newmain1.c: 12:     TRISC=0X00;
   147   0006C6  0E00               	movlw	0
   148   0006C8  6E94               	movwf	148,c	;volatile
   149   0006CA                     l9:
   150                           
   151                           ;newmain1.c: 14:     {;newmain1.c: 15:         for(int j =0X80;j>=0X01;j=j/2 )
   152   0006CA  0E00               	movlw	0
   153   0006CC  6E0C               	movwf	(main@j+1)^0,c
   154   0006CE  0E80               	movlw	128
   155   0006D0  6E0B               	movwf	main@j^0,c
   156   0006D2                     l10:
   157                           
   158                           ;newmain1.c: 16:         {;newmain1.c: 17:            PORTC=j;
   159   0006D2  C00B  FF82         	movff	main@j,3970	;volatile
   160   0006D6                     
   161                           ;newmain1.c: 18: for(unsigned int i=0;i<60000;i++ );
   162   0006D6  0E00               	movlw	0
   163   0006D8  6E0A               	movwf	(main@i+1)^0,c
   164   0006DA  0E00               	movlw	0
   165   0006DC  6E09               	movwf	main@i^0,c
   166   0006DE                     l812:
   167   0006DE  4A09               	infsnz	main@i^0,f,c
   168   0006E0  2A0A               	incf	(main@i+1)^0,f,c
   169   0006E2  0E60               	movlw	96
   170   0006E4  5C09               	subwf	main@i^0,w,c
   171   0006E6  0EEA               	movlw	234
   172   0006E8  580A               	subwfb	(main@i+1)^0,w,c
   173   0006EA  A0D8               	btfss	status,0,c
   174   0006EC  EF7A  F003         	goto	u151
   175   0006F0  EF7C  F003         	goto	u150
   176   0006F4                     u151:
   177   0006F4  EF6F  F003         	goto	l812
   178   0006F8                     u150:
   179   0006F8                     
   180                           ;newmain1.c: 20:        }
   181   0006F8  C00B  F001         	movff	main@j,___awdiv@dividend
   182   0006FC  C00C  F002         	movff	main@j+1,___awdiv@dividend+1
   183   000700  0E00               	movlw	0
   184   000702  6E04               	movwf	(___awdiv@divisor+1)^0,c
   185   000704  0E02               	movlw	2
   186   000706  6E03               	movwf	___awdiv@divisor^0,c
   187   000708  EC01  F003         	call	___awdiv	;wreg free
   188   00070C  C001  F00B         	movff	?___awdiv,main@j
   189   000710  C002  F00C         	movff	?___awdiv+1,main@j+1
   190   000714  BE0C               	btfsc	(main@j+1)^0,7,c
   191   000716  EF97  F003         	goto	u160
   192   00071A  500C               	movf	(main@j+1)^0,w,c
   193   00071C  E106               	bnz	u161
   194   00071E  040B               	decf	main@j^0,w,c
   195   000720  B0D8               	btfsc	status,0,c
   196   000722  EF95  F003         	goto	u161
   197   000726  EF97  F003         	goto	u160
   198   00072A                     u161:
   199   00072A  EF69  F003         	goto	l10
   200   00072E                     u160:
   201   00072E  EF65  F003         	goto	l9
   202   000732  EF00  F000         	goto	start
   203   000736                     __end_of_main:
   204                           	callstack 0
   205                           
   206 ;; *************** function ___awdiv *****************
   207 ;; Defined at:
   208 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;  dividend        2    0[COMRAM] int 
   211 ;;  divisor         2    2[COMRAM] int 
   212 ;; Auto vars:     Size  Location     Type
   213 ;;  quotient        2    6[COMRAM] int 
   214 ;;  sign            1    5[COMRAM] unsigned char 
   215 ;;  counter         1    4[COMRAM] unsigned char 
   216 ;; Return value:  Size  Location     Type
   217 ;;                  2    0[COMRAM] int 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   225 ;;      Params:         4       0       0       0       0       0       0
   226 ;;      Locals:         4       0       0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0
   228 ;;      Totals:         8       0       0       0       0       0       0
   229 ;;Total ram usage:        8 bytes
   230 ;; Hardware stack levels used: 1
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		_main
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text1
   239   000602                     __ptext1:
   240                           	callstack 0
   241   000602                     ___awdiv:
   242                           	callstack 30
   243   000602  0E00               	movlw	0
   244   000604  6E06               	movwf	___awdiv@sign^0,c
   245   000606  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   246   000608  EF0A  F003         	goto	u90
   247   00060C  EF08  F003         	goto	u91
   248   000610                     u91:
   249   000610  EF10  F003         	goto	l764
   250   000614                     u90:
   251   000614  6C03               	negf	___awdiv@divisor^0,c
   252   000616  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   253   000618  B0D8               	btfsc	status,0,c
   254   00061A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   255   00061C  0E01               	movlw	1
   256   00061E  6E06               	movwf	___awdiv@sign^0,c
   257   000620                     l764:
   258   000620  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   259   000622  EF17  F003         	goto	u100
   260   000626  EF15  F003         	goto	u101
   261   00062A                     u101:
   262   00062A  EF1D  F003         	goto	l770
   263   00062E                     u100:
   264   00062E  6C01               	negf	___awdiv@dividend^0,c
   265   000630  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   266   000632  B0D8               	btfsc	status,0,c
   267   000634  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   268   000636  0E01               	movlw	1
   269   000638  1A06               	xorwf	___awdiv@sign^0,f,c
   270   00063A                     l770:
   271   00063A  0E00               	movlw	0
   272   00063C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   273   00063E  0E00               	movlw	0
   274   000640  6E07               	movwf	___awdiv@quotient^0,c
   275   000642  5003               	movf	___awdiv@divisor^0,w,c
   276   000644  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   277   000646  B4D8               	btfsc	status,2,c
   278   000648  EF28  F003         	goto	u111
   279   00064C  EF2A  F003         	goto	u110
   280   000650                     u111:
   281   000650  EF52  F003         	goto	l792
   282   000654                     u110:
   283   000654  0E01               	movlw	1
   284   000656  6E05               	movwf	___awdiv@counter^0,c
   285   000658  EF32  F003         	goto	l778
   286   00065C                     l776:
   287   00065C  90D8               	bcf	status,0,c
   288   00065E  3603               	rlcf	___awdiv@divisor^0,f,c
   289   000660  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   290   000662  2A05               	incf	___awdiv@counter^0,f,c
   291   000664                     l778:
   292   000664  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   293   000666  EF37  F003         	goto	u121
   294   00066A  EF39  F003         	goto	u120
   295   00066E                     u121:
   296   00066E  EF2E  F003         	goto	l776
   297   000672                     u120:
   298   000672                     l780:
   299   000672  90D8               	bcf	status,0,c
   300   000674  3607               	rlcf	___awdiv@quotient^0,f,c
   301   000676  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   302   000678  5003               	movf	___awdiv@divisor^0,w,c
   303   00067A  5C01               	subwf	___awdiv@dividend^0,w,c
   304   00067C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   305   00067E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   306   000680  A0D8               	btfss	status,0,c
   307   000682  EF45  F003         	goto	u131
   308   000686  EF47  F003         	goto	u130
   309   00068A                     u131:
   310   00068A  EF4C  F003         	goto	l788
   311   00068E                     u130:
   312   00068E  5003               	movf	___awdiv@divisor^0,w,c
   313   000690  5E01               	subwf	___awdiv@dividend^0,f,c
   314   000692  5004               	movf	(___awdiv@divisor+1)^0,w,c
   315   000694  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   316   000696  8007               	bsf	___awdiv@quotient^0,0,c
   317   000698                     l788:
   318   000698  90D8               	bcf	status,0,c
   319   00069A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   320   00069C  3203               	rrcf	___awdiv@divisor^0,f,c
   321   00069E  2E05               	decfsz	___awdiv@counter^0,f,c
   322   0006A0  EF39  F003         	goto	l780
   323   0006A4                     l792:
   324   0006A4  5006               	movf	___awdiv@sign^0,w,c
   325   0006A6  B4D8               	btfsc	status,2,c
   326   0006A8  EF58  F003         	goto	u141
   327   0006AC  EF5A  F003         	goto	u140
   328   0006B0                     u141:
   329   0006B0  EF5E  F003         	goto	l796
   330   0006B4                     u140:
   331   0006B4  6C07               	negf	___awdiv@quotient^0,c
   332   0006B6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   333   0006B8  B0D8               	btfsc	status,0,c
   334   0006BA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   335   0006BC                     l796:
   336   0006BC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   337   0006C0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   338   0006C4  0012               	return		;funcret
   339   0006C6                     __end_of___awdiv:
   340                           	callstack 0
   341                           
   342                           	psect	smallconst
   343   000600                     __psmallconst:
   344                           	callstack 0
   345   000600  00                 	db	0
   346   000601  00                 	db	0	; dummy byte at the end
   347   000000                     
   348                           	psect	rparam
   349   000000                     tosu	equ	0xFFF
   350                           tosh	equ	0xFFE
   351                           tosl	equ	0xFFD
   352                           stkptr	equ	0xFFC
   353                           pclatu	equ	0xFFB
   354                           pclath	equ	0xFFA
   355                           pcl	equ	0xFF9
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           prodh	equ	0xFF4
   361                           prodl	equ	0xFF3
   362                           indf0	equ	0xFEF
   363                           postinc0	equ	0xFEE
   364                           postdec0	equ	0xFED
   365                           preinc0	equ	0xFEC
   366                           plusw0	equ	0xFEB
   367                           fsr0h	equ	0xFEA
   368                           fsr0l	equ	0xFE9
   369                           wreg	equ	0xFE8
   370                           indf1	equ	0xFE7
   371                           postinc1	equ	0xFE6
   372                           postdec1	equ	0xFE5
   373                           preinc1	equ	0xFE4
   374                           plusw1	equ	0xFE3
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           bsr	equ	0xFE0
   378                           indf2	equ	0xFDF
   379                           postinc2	equ	0xFDE
   380                           postdec2	equ	0xFDD
   381                           preinc2	equ	0xFDC
   382                           plusw2	equ	0xFDB
   383                           fsr2h	equ	0xFDA
   384                           fsr2l	equ	0xFD9
   385                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     588
                                              8 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6B      0       0      16        0.0%
BITBIGSFRlh         11      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 09:22:30 2024

                      l9 06CA                       l10 06D2                       u90 0614  
                     u91 0610             ___awdiv@sign 0006                      l250 06C4  
                    l800 06C6                      l812 06DE                      l814 06E2  
                    l806 06D6                      l760 0614                      l816 06F8  
                    l770 063A                      l762 061C                      l818 0714  
                    l780 0672                      l772 0642                      l764 0620  
                    l756 0602                      l790 069E                      l782 0678  
                    l774 0654                      l766 062E                      l758 0606  
                    l784 068E                      l776 065C                      l792 06A4  
                    l768 0636                      l794 06B4                      l786 0696  
                    l778 0664                      l796 06BC                      l788 0698  
                    u100 062E                      u101 062A                      u110 0654  
                    u111 0650                      u120 0672                      u121 066E  
                    u130 068E                      u131 068A                      u140 06B4  
                    u141 06B0                      u150 06F8                      u151 06F4  
                    u160 072E                      u161 072A                     _main 06C6  
                   start 0000             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 06C6          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTC 0F82                    _TRISC 0F94                    main@i 0009  
                  main@j 000B                    status 0FD8          __initialization 0736  
           __end_of_main 0736                   ??_main 0009            __activetblptr 0000  
       ___awdiv@dividend 0001                ??___awdiv 0005         ___awdiv@quotient 0007  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 0736            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0602  
           __psmallconst 0600                  __pcinit 0736                  __ramtop 0600  
                __ptext0 06C6                  __ptext1 0602     end_of_initialization 0736  
    start_initialization 0736                 ?___awdiv 0001              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
