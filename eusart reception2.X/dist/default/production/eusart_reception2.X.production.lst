

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 09:29:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _TRISC	set	3988
    52   000000                     _TRISD	set	3989
    53   000000                     _RC0	set	31760
    54   000000                     _RCSTA	set	4011
    55   000000                     _TXSTA	set	4012
    56   000000                     _RCIF	set	31989
    57   000000                     _RCREG	set	4014
    58   000000                     _SPBRG	set	4015
    59   000000                     _PORTD	set	3971
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64   000718                     __pcinit:
    65                           	callstack 0
    66   000718                     start_initialization:
    67                           	callstack 0
    68   000718                     __initialization:
    69                           	callstack 0
    70   000718                     end_of_initialization:
    71                           	callstack 0
    72   000718                     __end_of__initialization:
    73                           	callstack 0
    74   000718  0100               	movlb	0
    75   00071A  EF61  F003         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78   000001                     __pcstackCOMRAM:
    79                           	callstack 0
    80   000001                     cmd@a:
    81                           	callstack 0
    82   000001                     data@b:
    83                           	callstack 0
    84                           
    85                           ; 1 bytes @ 0x0
    86   000001                     	ds	1
    87   000002                     cmd@i:
    88                           	callstack 0
    89   000002                     data@i:
    90                           	callstack 0
    91                           
    92                           ; 2 bytes @ 0x1
    93   000002                     	ds	2
    94   000004                     cmd@i_58:
    95                           	callstack 0
    96   000004                     data@i_62:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0x3
   100   000004                     	ds	2
   101   000006                     
   102                           ; 1 bytes @ 0x5
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 14 in file "reception2.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0
   124 ;;      Temps:          0       0       0       0       0       0       0
   125 ;;      Totals:         0       0       0       0       0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called: 2
   128 ;; This function calls:
   129 ;;		_cmd
   130 ;;		_reception
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137   0006C2                     __ptext0:
   138                           	callstack 0
   139   0006C2                     _main:
   140                           	callstack 29
   141   0006C2                     
   142                           ;reception2.c: 15:     TRISD=0X00;
   143   0006C2  0E00               	movlw	0
   144   0006C4  6E95               	movwf	149,c	;volatile
   145                           
   146                           ;reception2.c: 16:     TRISC=0X80;
   147   0006C6  0E80               	movlw	128
   148   0006C8  6E94               	movwf	148,c	;volatile
   149                           
   150                           ;reception2.c: 17:     TXSTA=0X24;
   151   0006CA  0E24               	movlw	36
   152   0006CC  6EAC               	movwf	172,c	;volatile
   153                           
   154                           ;reception2.c: 18:     RCSTA=0X90;
   155   0006CE  0E90               	movlw	144
   156   0006D0  6EAB               	movwf	171,c	;volatile
   157                           
   158                           ;reception2.c: 19:     SPBRG=129;
   159   0006D2  0E81               	movlw	129
   160   0006D4  6EAF               	movwf	175,c	;volatile
   161   0006D6                     
   162                           ;reception2.c: 21:     cmd(0x01);
   163   0006D6  0E01               	movlw	1
   164   0006D8  EC31  F003         	call	_cmd
   165   0006DC                     
   166                           ;reception2.c: 22:     cmd(0x0f);
   167   0006DC  0E0F               	movlw	15
   168   0006DE  EC31  F003         	call	_cmd
   169   0006E2                     
   170                           ;reception2.c: 23:     cmd(0x38);
   171   0006E2  0E38               	movlw	56
   172   0006E4  EC31  F003         	call	_cmd
   173   0006E8                     
   174                           ;reception2.c: 24:     cmd(0x06);
   175   0006E8  0E06               	movlw	6
   176   0006EA  EC31  F003         	call	_cmd
   177   0006EE                     
   178                           ;reception2.c: 25:     cmd(0x80);
   179   0006EE  0E80               	movlw	128
   180   0006F0  EC31  F003         	call	_cmd
   181   0006F4                     l806:
   182                           
   183                           ;reception2.c: 27:     {;reception2.c: 28:     reception();
   184   0006F4  EC80  F003         	call	_reception	;wreg free
   185   0006F8  EF7A  F003         	goto	l806
   186   0006FC  EF00  F000         	goto	start
   187   000700                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _reception *****************
   191 ;; Defined at:
   192 ;;		line 32 in file "reception2.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   206 ;;      Params:         0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0
   208 ;;      Temps:          0       0       0       0       0       0       0
   209 ;;      Totals:         0       0       0       0       0       0       0
   210 ;;Total ram usage:        0 bytes
   211 ;; Hardware stack levels used: 1
   212 ;; Hardware stack levels required when called: 1
   213 ;; This function calls:
   214 ;;		_data
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221   000700                     __ptext1:
   222                           	callstack 0
   223   000700                     _reception:
   224                           	callstack 29
   225   000700                     l39:
   226   000700  AA9E               	btfss	3998,5,c	;volatile
   227   000702  EF85  F003         	goto	u51
   228   000706  EF87  F003         	goto	u50
   229   00070A                     u51:
   230   00070A  EF80  F003         	goto	l39
   231   00070E                     u50:
   232   00070E                     
   233                           ;reception2.c: 36:     RCIF=0;
   234   00070E  9A9E               	bcf	3998,5,c	;volatile
   235   000710                     
   236                           ;reception2.c: 37:     data(RCREG);
   237   000710  50AE               	movf	174,w,c	;volatile
   238   000712  EC01  F003         	call	_data
   239   000716  0012               	return		;funcret
   240   000718                     __end_of_reception:
   241                           	callstack 0
   242                           
   243 ;; *************** function _data *****************
   244 ;; Defined at:
   245 ;;		line 51 in file "reception2.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;  b               1    wreg     unsigned char 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  b               1    0[COMRAM] unsigned char 
   250 ;;  i               2    3[COMRAM] int 
   251 ;;  i               2    1[COMRAM] int 
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   261 ;;      Params:         0       0       0       0       0       0       0
   262 ;;      Locals:         5       0       0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0       0       0
   264 ;;      Totals:         5       0       0       0       0       0       0
   265 ;;Total ram usage:        5 bytes
   266 ;; Hardware stack levels used: 1
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		_reception
   271 ;;		_display
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text2
   276   000602                     __ptext2:
   277                           	callstack 0
   278   000602                     _data:
   279                           	callstack 29
   280                           
   281                           ;incstack = 0
   282                           ;data@b stored from wreg
   283   000602  6E01               	movwf	data@b^0,c
   284   000604                     
   285                           ;reception2.c: 51: void data(unsigned char b );reception2.c: 52: {;reception2.c: 53:    
      +                           RC0=1;
   286   000604  8082               	bsf	3970,0,c	;volatile
   287                           
   288                           ;reception2.c: 54:     RC1=0;
   289   000606  9282               	bcf	3970,1,c	;volatile
   290   000608                     
   291                           ;reception2.c: 55:     PORTD=b;
   292   000608  C001  FF83         	movff	data@b,3971	;volatile
   293   00060C                     
   294                           ;reception2.c: 56:     RC2=1;
   295   00060C  8482               	bsf	3970,2,c	;volatile
   296   00060E                     
   297                           ;reception2.c: 57:     for(int i=0;i<=100;i++);
   298   00060E  0E00               	movlw	0
   299   000610  6E03               	movwf	(data@i+1)^0,c
   300   000612  0E00               	movlw	0
   301   000614  6E02               	movwf	data@i^0,c
   302   000616                     l750:
   303   000616  4A02               	infsnz	data@i^0,f,c
   304   000618  2A03               	incf	(data@i+1)^0,f,c
   305   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   306   00061C  EF19  F003         	goto	u11
   307   000620  5003               	movf	(data@i+1)^0,w,c
   308   000622  E109               	bnz	u10
   309   000624  0E65               	movlw	101
   310   000626  5C02               	subwf	data@i^0,w,c
   311   000628  A0D8               	btfss	status,0,c
   312   00062A  EF19  F003         	goto	u11
   313   00062E  EF1B  F003         	goto	u10
   314   000632                     u11:
   315   000632  EF0B  F003         	goto	l750
   316   000636                     u10:
   317   000636                     
   318                           ;reception2.c: 58:     RC2=0;
   319   000636  9482               	bcf	3970,2,c	;volatile
   320   000638                     
   321                           ;reception2.c: 59:     for(int i=0;i<=5000;i++);
   322   000638  0E00               	movlw	0
   323   00063A  6E05               	movwf	(data@i_62+1)^0,c
   324   00063C  0E00               	movlw	0
   325   00063E  6E04               	movwf	data@i_62^0,c
   326   000640                     l760:
   327   000640  4A04               	infsnz	data@i_62^0,f,c
   328   000642  2A05               	incf	(data@i_62+1)^0,f,c
   329   000644  BE05               	btfsc	(data@i_62+1)^0,7,c
   330   000646  EF2E  F003         	goto	u21
   331   00064A  0E89               	movlw	137
   332   00064C  5C04               	subwf	data@i_62^0,w,c
   333   00064E  0E13               	movlw	19
   334   000650  5805               	subwfb	(data@i_62+1)^0,w,c
   335   000652  A0D8               	btfss	status,0,c
   336   000654  EF2E  F003         	goto	u21
   337   000658  EF30  F003         	goto	u20
   338   00065C                     u21:
   339   00065C  EF20  F003         	goto	l760
   340   000660                     u20:
   341   000660  0012               	return		;funcret
   342   000662                     __end_of_data:
   343                           	callstack 0
   344                           
   345 ;; *************** function _cmd *****************
   346 ;; Defined at:
   347 ;;		line 41 in file "reception2.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  a               1    wreg     unsigned char 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  a               1    0[COMRAM] unsigned char 
   352 ;;  i               2    3[COMRAM] int 
   353 ;;  i               2    1[COMRAM] int 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   363 ;;      Params:         0       0       0       0       0       0       0
   364 ;;      Locals:         5       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0
   366 ;;      Totals:         5       0       0       0       0       0       0
   367 ;;Total ram usage:        5 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text3
   377   000662                     __ptext3:
   378                           	callstack 0
   379   000662                     _cmd:
   380                           	callstack 30
   381                           
   382                           ;incstack = 0
   383                           ;cmd@a stored from wreg
   384   000662  6E01               	movwf	cmd@a^0,c
   385   000664                     
   386                           ;reception2.c: 41:     void cmd(unsigned char a );reception2.c: 42: {;reception2.c: 43: 
      +                              RC0=0;
   387   000664  9082               	bcf	3970,0,c	;volatile
   388                           
   389                           ;reception2.c: 44:     RC1=0;
   390   000666  9282               	bcf	3970,1,c	;volatile
   391   000668                     
   392                           ;reception2.c: 45:     PORTD=a;
   393   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   394   00066C                     
   395                           ;reception2.c: 46:     RC2=1;
   396   00066C  8482               	bsf	3970,2,c	;volatile
   397   00066E                     
   398                           ;reception2.c: 47:     for(int i=0;i<=100;i++);
   399   00066E  0E00               	movlw	0
   400   000670  6E03               	movwf	(cmd@i+1)^0,c
   401   000672  0E00               	movlw	0
   402   000674  6E02               	movwf	cmd@i^0,c
   403   000676                     l776:
   404   000676  4A02               	infsnz	cmd@i^0,f,c
   405   000678  2A03               	incf	(cmd@i+1)^0,f,c
   406   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   407   00067C  EF49  F003         	goto	u31
   408   000680  5003               	movf	(cmd@i+1)^0,w,c
   409   000682  E109               	bnz	u30
   410   000684  0E65               	movlw	101
   411   000686  5C02               	subwf	cmd@i^0,w,c
   412   000688  A0D8               	btfss	status,0,c
   413   00068A  EF49  F003         	goto	u31
   414   00068E  EF4B  F003         	goto	u30
   415   000692                     u31:
   416   000692  EF3B  F003         	goto	l776
   417   000696                     u30:
   418   000696                     
   419                           ;reception2.c: 48:     RC2=0;
   420   000696  9482               	bcf	3970,2,c	;volatile
   421   000698                     
   422                           ;reception2.c: 49:     for(int i=0;i<=5000;i++);
   423   000698  0E00               	movlw	0
   424   00069A  6E05               	movwf	(cmd@i_58+1)^0,c
   425   00069C  0E00               	movlw	0
   426   00069E  6E04               	movwf	cmd@i_58^0,c
   427   0006A0                     l786:
   428   0006A0  4A04               	infsnz	cmd@i_58^0,f,c
   429   0006A2  2A05               	incf	(cmd@i_58+1)^0,f,c
   430   0006A4  BE05               	btfsc	(cmd@i_58+1)^0,7,c
   431   0006A6  EF5E  F003         	goto	u41
   432   0006AA  0E89               	movlw	137
   433   0006AC  5C04               	subwf	cmd@i_58^0,w,c
   434   0006AE  0E13               	movlw	19
   435   0006B0  5805               	subwfb	(cmd@i_58+1)^0,w,c
   436   0006B2  A0D8               	btfss	status,0,c
   437   0006B4  EF5E  F003         	goto	u41
   438   0006B8  EF60  F003         	goto	u40
   439   0006BC                     u41:
   440   0006BC  EF50  F003         	goto	l786
   441   0006C0                     u40:
   442   0006C0  0012               	return		;funcret
   443   0006C2                     __end_of_cmd:
   444                           	callstack 0
   445                           
   446                           	psect	smallconst
   447   000600                     __psmallconst:
   448                           	callstack 0
   449   000600  00                 	db	0
   450   000601  00                 	db	0	; dummy byte at the end
   451   000000                     
   452                           	psect	rparam
   453   000000                     tosu	equ	0xFFF
   454                           tosh	equ	0xFFE
   455                           tosl	equ	0xFFD
   456                           stkptr	equ	0xFFC
   457                           pclatu	equ	0xFFB
   458                           pclath	equ	0xFFA
   459                           pcl	equ	0xFF9
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           prodh	equ	0xFF4
   465                           prodl	equ	0xFF3
   466                           indf0	equ	0xFEF
   467                           postinc0	equ	0xFEE
   468                           postdec0	equ	0xFED
   469                           preinc0	equ	0xFEC
   470                           plusw0	equ	0xFEB
   471                           fsr0h	equ	0xFEA
   472                           fsr0l	equ	0xFE9
   473                           wreg	equ	0xFE8
   474                           indf1	equ	0xFE7
   475                           postinc1	equ	0xFE6
   476                           postdec1	equ	0xFE5
   477                           preinc1	equ	0xFE4
   478                           plusw1	equ	0xFE3
   479                           fsr1h	equ	0xFE2
   480                           fsr1l	equ	0xFE1
   481                           bsr	equ	0xFE0
   482                           indf2	equ	0xFDF
   483                           postinc2	equ	0xFDE
   484                           postdec2	equ	0xFDD
   485                           preinc2	equ	0xFDC
   486                           plusw2	equ	0xFDB
   487                           fsr2h	equ	0xFDA
   488                           fsr2l	equ	0xFD9
   489                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _reception->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _cmd
                          _reception
 ---------------------------------------------------------------------------------
 (1) _reception                                            0     0      0      75
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _reception
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        50      0       0      16        0.0%
BITBIGSFRhhl         1      0       0      17        0.0%
BITBIGSFRhlh         C      0       0      18        0.0%
BITBIGSFRhll         8      0       0      19        0.0%
BITBIGSFRlh         10      0       0      20        0.0%
BITBIGSFRll        282      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 09:29:37 2024

                     l41 070E                       l42 0716                       l53 0636  
                     l46 0696                       l39 0700                       l56 0660  
                     l49 06C0                       u10 0636                       u11 0632  
                     u20 0660                       u21 065C                       u30 0696  
                     u31 0692                       u40 06C0                       u41 06BC  
                     u50 070E                       u51 070A                      l800 06E2  
                    l802 06E8                      l740 0608                      l804 06EE  
                    l750 0616                      l742 060C                      l806 06F4  
                    l760 0640                      l752 061A                      l744 060E  
                    l770 066E                      l762 0644                      l754 0638  
                    l738 0604                      l780 0698                      l764 0664  
                    l766 0668                      l790 0700                      l776 0676  
                    l768 066C                      l792 0710                      l786 06A0  
                    l778 067A                      l794 06C2                      l788 06A4  
                    l796 06D6                      l798 06DC                      _RC0 7C10  
                    _RC1 7C11                      _RC2 7C12                      _cmd 0662  
                   ?_cmd 0001                     _RCIF 7CF5                     _data 0602  
                   cmd@a 0001                     cmd@i 0002                     _main 06C2  
                   start 0000             ___param_bank 0000                    ??_cmd 0001  
                  ?_data 0001                    ?_main 0001                    _RCREG 0FAE  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    _TXSTA 0FAC  
                  data@b 0001                    data@i 0002                    status 0FD8  
        __initialization 0718             __end_of_data 0662             __end_of_main 0700  
                 ??_data 0001                   ??_main 0006            __activetblptr 0000  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 0718            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0718                  __ramtop 0600                  __ptext0 06C2  
                __ptext1 0700                  __ptext2 0602                  __ptext3 0662  
                cmd@i_58 0004        __end_of_reception 0718     end_of_initialization 0718  
    start_initialization 0718              __end_of_cmd 06C2              __smallconst 0600  
              _reception 0700               ?_reception 0001                 __Hrparam 0000  
               __Lrparam 0000                 data@i_62 0004                 isa$xinst 0000  
            ??_reception 0006  
