

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 18:01:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _RC5	set	31765
    53   000000                     _PORTB	set	3969
    54   000000                     _TRISB	set	3987
    55   000000                     _TRISC	set	3988
    56   000000                     _RC4	set	31764
    57   000000                     _TRISD	set	3989
    58   000000                     _PORTD	set	3971
    59                           
    60                           	psect	smallconst
    61   000600                     __psmallconst:
    62                           	callstack 0
    63   000600  00                 	db	0
    64   000601                     STR_2:
    65   000601  41                 	db	65	;'A'
    66   000602  4E                 	db	78	;'N'
    67   000603  54                 	db	84	;'T'
    68   000604  49                 	db	73	;'I'
    69   000605  43                 	db	67	;'C'
    70   000606  4C                 	db	76	;'L'
    71   000607  4F                 	db	79	;'O'
    72   000608  43                 	db	67	;'C'
    73   000609  4B                 	db	75	;'K'
    74   00060A  57                 	db	87	;'W'
    75   00060B  49                 	db	73	;'I'
    76   00060C  53                 	db	83	;'S'
    77   00060D  45                 	db	69	;'E'
    78   00060E  00                 	db	0
    79   00060F                     STR_3:
    80   00060F  53                 	db	83	;'S'
    81   000610  54                 	db	84	;'T'
    82   000611  4F                 	db	79	;'O'
    83   000612  50                 	db	80	;'P'
    84   000613  00                 	db	0
    85   000614  00                 	db	0	; dummy byte at the end
    86   000000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   00087E                     __pcinit:
    91                           	callstack 0
    92   00087E                     start_initialization:
    93                           	callstack 0
    94   00087E                     __initialization:
    95                           	callstack 0
    96   00087E                     end_of_initialization:
    97                           	callstack 0
    98   00087E                     __end_of__initialization:
    99                           	callstack 0
   100   00087E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   101   000880  6EF8               	movwf	tblptru,c
   102   000882  0E06               	movlw	high __Lsmallconst
   103   000884  6EF7               	movwf	tblptrh,c
   104   000886  0100               	movlb	0
   105   000888  EF0B  F003         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     cmd@a:
   111                           	callstack 0
   112   000001                     data@b:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	1
   117   000002                     cmd@i:
   118                           	callstack 0
   119   000002                     data@i:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x1
   123   000002                     	ds	2
   124   000004                     cmd@i_59:
   125                           	callstack 0
   126   000004                     data@i_63:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x3
   130   000004                     	ds	2
   131   000006                     display@p:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x5
   135   000006                     	ds	1
   136   000007                     main@count:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x6
   140   000007                     	ds	2
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 15 in file "swl2.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;  count           2    6[COMRAM] int 
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         0       0       0       0       0       0       0
   162 ;;      Locals:         2       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0
   164 ;;      Totals:         2       0       0       0       0       0       0
   165 ;;Total ram usage:        2 bytes
   166 ;; Hardware stack levels required when called: 2
   167 ;; This function calls:
   168 ;;		_cmd
   169 ;;		_display
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176   000616                     __ptext0:
   177                           	callstack 0
   178   000616                     _main:
   179                           	callstack 29
   180   000616                     
   181                           ;swl2.c: 17:      TRISC=0X30;
   182   000616  0E30               	movlw	48
   183   000618  6E94               	movwf	148,c	;volatile
   184                           
   185                           ;swl2.c: 18:      TRISD=0X00;
   186   00061A  0E00               	movlw	0
   187   00061C  6E95               	movwf	149,c	;volatile
   188                           
   189                           ;swl2.c: 19:      TRISB=0X00;
   190   00061E  0E00               	movlw	0
   191   000620  6E93               	movwf	147,c	;volatile
   192   000622                     
   193                           ;swl2.c: 20:     cmd(0x01);
   194   000622  0E01               	movlw	1
   195   000624  ECF9  F003         	call	_cmd
   196   000628                     
   197                           ;swl2.c: 21:     cmd(0x0f);
   198   000628  0E0F               	movlw	15
   199   00062A  ECF9  F003         	call	_cmd
   200   00062E                     
   201                           ;swl2.c: 22:     cmd(0x38);
   202   00062E  0E38               	movlw	56
   203   000630  ECF9  F003         	call	_cmd
   204   000634                     
   205                           ;swl2.c: 23:     cmd(0x0c);
   206   000634  0E0C               	movlw	12
   207   000636  ECF9  F003         	call	_cmd
   208   00063A                     
   209                           ;swl2.c: 24:     int count=-1;
   210   00063A  6807               	setf	main@count^0,c
   211   00063C  6808               	setf	(main@count+1)^0,c
   212   00063E                     l896:
   213                           
   214                           ;swl2.c: 26: {;swl2.c: 27:      if(RC4==1)
   215   00063E  A882               	btfss	3970,4,c	;volatile
   216   000640  EF24  F003         	goto	u191
   217   000644  EF26  F003         	goto	u190
   218   000648                     u191:
   219   000648  EF72  F003         	goto	l924
   220   00064C                     u190:
   221   00064C                     
   222                           ;swl2.c: 28:         {;swl2.c: 29:             if(count==2)
   223   00064C  0E02               	movlw	2
   224   00064E  1807               	xorwf	main@count^0,w,c
   225   000650  1008               	iorwf	(main@count+1)^0,w,c
   226   000652  A4D8               	btfss	status,2,c
   227   000654  EF2E  F003         	goto	u201
   228   000658  EF30  F003         	goto	u200
   229   00065C                     u201:
   230   00065C  EF32  F003         	goto	l902
   231   000660                     u200:
   232   000660                     
   233                           ;swl2.c: 30:             {;swl2.c: 31:                 count=-1;
   234   000660  6807               	setf	main@count^0,c
   235   000662  6808               	setf	(main@count+1)^0,c
   236   000664                     l902:
   237                           
   238                           ;swl2.c: 33:             count++;
   239   000664  4A07               	infsnz	main@count^0,f,c
   240   000666  2A08               	incf	(main@count+1)^0,f,c
   241   000668                     l32:
   242   000668  B882               	btfsc	3970,4,c	;volatile
   243   00066A  EF39  F003         	goto	u211
   244   00066E  EF3B  F003         	goto	u210
   245   000672                     u211:
   246   000672  EF34  F003         	goto	l32
   247   000676                     u210:
   248   000676                     
   249                           ;swl2.c: 35:             cmd(0x01);
   250   000676  0E01               	movlw	1
   251   000678  ECF9  F003         	call	_cmd
   252   00067C                     
   253                           ;swl2.c: 37:      if(count==0)
   254   00067C  5007               	movf	main@count^0,w,c
   255   00067E  1008               	iorwf	(main@count+1)^0,w,c
   256   000680  A4D8               	btfss	status,2,c
   257   000682  EF45  F003         	goto	u221
   258   000686  EF47  F003         	goto	u220
   259   00068A                     u221:
   260   00068A  EF4F  F003         	goto	l912
   261   00068E                     u220:
   262   00068E                     
   263                           ;swl2.c: 38:      {;swl2.c: 39:          PORTB=0X01;
   264   00068E  0E01               	movlw	1
   265   000690  6E81               	movwf	129,c	;volatile
   266   000692                     
   267                           ;swl2.c: 40:          display("CLOCKWISE");
   268   000692  0E05               	movlw	low (STR_2+4)
   269   000694  6E06               	movwf	display@p^0,c
   270   000696  EC29  F004         	call	_display	;wreg free
   271                           
   272                           ;swl2.c: 42:      }
   273   00069A  EF72  F003         	goto	l924
   274   00069E                     l912:
   275   00069E  0407               	decf	main@count^0,w,c
   276   0006A0  1008               	iorwf	(main@count+1)^0,w,c
   277   0006A2  A4D8               	btfss	status,2,c
   278   0006A4  EF56  F003         	goto	u231
   279   0006A8  EF58  F003         	goto	u230
   280   0006AC                     u231:
   281   0006AC  EF60  F003         	goto	l918
   282   0006B0                     u230:
   283   0006B0                     
   284                           ;swl2.c: 44:             {;swl2.c: 45:           PORTB=0X02;
   285   0006B0  0E02               	movlw	2
   286   0006B2  6E81               	movwf	129,c	;volatile
   287   0006B4                     
   288                           ;swl2.c: 46:           display("ANTICLOCKWISE");
   289   0006B4  0E01               	movlw	low STR_2
   290   0006B6  6E06               	movwf	display@p^0,c
   291   0006B8  EC29  F004         	call	_display	;wreg free
   292                           
   293                           ;swl2.c: 49: }
   294   0006BC  EF72  F003         	goto	l924
   295   0006C0                     l918:
   296   0006C0  0E02               	movlw	2
   297   0006C2  1807               	xorwf	main@count^0,w,c
   298   0006C4  1008               	iorwf	(main@count+1)^0,w,c
   299   0006C6  A4D8               	btfss	status,2,c
   300   0006C8  EF68  F003         	goto	u241
   301   0006CC  EF6A  F003         	goto	u240
   302   0006D0                     u241:
   303   0006D0  EF72  F003         	goto	l36
   304   0006D4                     u240:
   305   0006D4                     
   306                           ;swl2.c: 51:       {;swl2.c: 52:           PORTB=0X03;
   307   0006D4  0E03               	movlw	3
   308   0006D6  6E81               	movwf	129,c	;volatile
   309   0006D8                     
   310                           ;swl2.c: 53:           display("STOP");
   311   0006D8  0E0F               	movlw	low STR_3
   312   0006DA  6E06               	movwf	display@p^0,c
   313   0006DC  EC29  F004         	call	_display	;wreg free
   314   0006E0  EF72  F003         	goto	l924
   315   0006E4                     l36:
   316   0006E4                     l924:
   317                           
   318                           ;swl2.c: 58:     {;swl2.c: 59:         if(RC5==1)
   319   0006E4  AA82               	btfss	3970,5,c	;volatile
   320   0006E6  EF77  F003         	goto	u251
   321   0006EA  EF79  F003         	goto	u250
   322   0006EE                     u251:
   323   0006EE  EF1F  F003         	goto	l896
   324   0006F2                     u250:
   325   0006F2                     
   326                           ;swl2.c: 60:         {;swl2.c: 61:             if(count==2)
   327   0006F2  0E02               	movlw	2
   328   0006F4  1807               	xorwf	main@count^0,w,c
   329   0006F6  1008               	iorwf	(main@count+1)^0,w,c
   330   0006F8  A4D8               	btfss	status,2,c
   331   0006FA  EF81  F003         	goto	u261
   332   0006FE  EF83  F003         	goto	u260
   333   000702                     u261:
   334   000702  EF85  F003         	goto	l930
   335   000706                     u260:
   336   000706                     
   337                           ;swl2.c: 62:             {;swl2.c: 63:                 count=-1;
   338   000706  6807               	setf	main@count^0,c
   339   000708  6808               	setf	(main@count+1)^0,c
   340   00070A                     l930:
   341                           
   342                           ;swl2.c: 65:             count++;
   343   00070A  4A07               	infsnz	main@count^0,f,c
   344   00070C  2A08               	incf	(main@count+1)^0,f,c
   345   00070E                     l42:
   346   00070E  BA82               	btfsc	3970,5,c	;volatile
   347   000710  EF8C  F003         	goto	u271
   348   000714  EF8E  F003         	goto	u270
   349   000718                     u271:
   350   000718  EF87  F003         	goto	l42
   351   00071C                     u270:
   352   00071C                     
   353                           ;swl2.c: 67:             cmd(0x01);
   354   00071C  0E01               	movlw	1
   355   00071E  ECF9  F003         	call	_cmd
   356   000722                     
   357                           ;swl2.c: 69:      if(count==0)
   358   000722  5007               	movf	main@count^0,w,c
   359   000724  1008               	iorwf	(main@count+1)^0,w,c
   360   000726  A4D8               	btfss	status,2,c
   361   000728  EF98  F003         	goto	u281
   362   00072C  EF9A  F003         	goto	u280
   363   000730                     u281:
   364   000730  EFA2  F003         	goto	l940
   365   000734                     u280:
   366   000734                     
   367                           ;swl2.c: 70:      {;swl2.c: 71:          PORTB=0X04;
   368   000734  0E04               	movlw	4
   369   000736  6E81               	movwf	129,c	;volatile
   370   000738                     
   371                           ;swl2.c: 72:          display("CLOCKWISE");
   372   000738  0E05               	movlw	low (STR_2+4)
   373   00073A  6E06               	movwf	display@p^0,c
   374   00073C  EC29  F004         	call	_display	;wreg free
   375                           
   376                           ;swl2.c: 74:      }
   377   000740  EF1F  F003         	goto	l896
   378   000744                     l940:
   379   000744  0407               	decf	main@count^0,w,c
   380   000746  1008               	iorwf	(main@count+1)^0,w,c
   381   000748  A4D8               	btfss	status,2,c
   382   00074A  EFA9  F003         	goto	u291
   383   00074E  EFAB  F003         	goto	u290
   384   000752                     u291:
   385   000752  EFB3  F003         	goto	l946
   386   000756                     u290:
   387   000756                     
   388                           ;swl2.c: 76:             {;swl2.c: 77:           PORTB=0X08;
   389   000756  0E08               	movlw	8
   390   000758  6E81               	movwf	129,c	;volatile
   391   00075A                     
   392                           ;swl2.c: 78:           display("ANTICLOCKWISE");
   393   00075A  0E01               	movlw	low STR_2
   394   00075C  6E06               	movwf	display@p^0,c
   395   00075E  EC29  F004         	call	_display	;wreg free
   396                           
   397                           ;swl2.c: 81: }
   398   000762  EF1F  F003         	goto	l896
   399   000766                     l946:
   400   000766  0E02               	movlw	2
   401   000768  1807               	xorwf	main@count^0,w,c
   402   00076A  1008               	iorwf	(main@count+1)^0,w,c
   403   00076C  A4D8               	btfss	status,2,c
   404   00076E  EFBB  F003         	goto	u301
   405   000772  EFBD  F003         	goto	u300
   406   000776                     u301:
   407   000776  EFC5  F003         	goto	l40
   408   00077A                     u300:
   409   00077A                     
   410                           ;swl2.c: 83:       {;swl2.c: 84:           PORTB=0X40;
   411   00077A  0E40               	movlw	64
   412   00077C  6E81               	movwf	129,c	;volatile
   413   00077E                     
   414                           ;swl2.c: 85:           display("STOP");
   415   00077E  0E0F               	movlw	low STR_3
   416   000780  6E06               	movwf	display@p^0,c
   417   000782  EC29  F004         	call	_display	;wreg free
   418   000786  EF1F  F003         	goto	l896
   419   00078A                     l40:
   420   00078A  EF1F  F003         	goto	l896
   421   00078E  EF00  F000         	goto	start
   422   000792                     __end_of_main:
   423                           	callstack 0
   424                           
   425 ;; *************** function _display *****************
   426 ;; Defined at:
   427 ;;		line 116 in file "swl2.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  p               1    5[COMRAM] PTR const unsigned char 
   430 ;;		 -> STR_6(5), STR_5(14), STR_4(10), STR_3(5), 
   431 ;;		 -> STR_2(14), STR_1(10), 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   443 ;;      Params:         1       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0
   446 ;;      Totals:         1       0       0       0       0       0       0
   447 ;;Total ram usage:        1 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 1
   450 ;; This function calls:
   451 ;;		_data
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text1
   458   000852                     __ptext1:
   459                           	callstack 0
   460   000852                     _display:
   461                           	callstack 29
   462   000852                     
   463                           ;swl2.c: 116: void display(const char *p);swl2.c: 117: {;swl2.c: 118:     while(*p)
   464   000852  EF32  F004         	goto	l882
   465   000856                     l878:
   466                           
   467                           ;swl2.c: 119:     {;swl2.c: 120:         data(*p);
   468   000856  C006  FFF6         	movff	display@p,tblptrl
   469   00085A                     	if	0	;There is only one active tblptr byte
   470   00085A                     	endif
   471   00085A                     	if	0	;tblptru may be non-zero
   472   00085A                     	endif
   473   00085A                     	if	0	;tblptru may be non-zero
   474   00085A                     	endif
   475   00085A  0008               	tblrd		*
   476   00085C  50F5               	movf	tablat,w,c
   477   00085E  ECC9  F003         	call	_data
   478   000862                     
   479                           ;swl2.c: 121: p++;
   480   000862  2A06               	incf	display@p^0,f,c
   481   000864                     l882:
   482                           
   483                           ;swl2.c: 118:     while(*p)
   484   000864  C006  FFF6         	movff	display@p,tblptrl
   485   000868                     	if	0	;There is only one active tblptr byte
   486   000868                     	endif
   487   000868                     	if	0	;tblptru may be non-zero
   488   000868                     	endif
   489   000868                     	if	0	;tblptru may be non-zero
   490   000868                     	endif
   491   000868  0008               	tblrd		*
   492   00086A  50F5               	movf	tablat,w,c
   493   00086C  0900               	iorlw	0
   494   00086E  A4D8               	btfss	status,2,c
   495   000870  EF3C  F004         	goto	u181
   496   000874  EF3E  F004         	goto	u180
   497   000878                     u181:
   498   000878  EF2B  F004         	goto	l878
   499   00087C                     u180:
   500   00087C  0012               	return		;funcret
   501   00087E                     __end_of_display:
   502                           	callstack 0
   503                           
   504 ;; *************** function _data *****************
   505 ;; Defined at:
   506 ;;		line 105 in file "swl2.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  b               1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  b               1    0[COMRAM] unsigned char 
   511 ;;  i               2    3[COMRAM] int 
   512 ;;  i               2    1[COMRAM] int 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   522 ;;      Params:         0       0       0       0       0       0       0
   523 ;;      Locals:         5       0       0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0
   525 ;;      Totals:         5       0       0       0       0       0       0
   526 ;;Total ram usage:        5 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_display
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536   000792                     __ptext2:
   537                           	callstack 0
   538   000792                     _data:
   539                           	callstack 29
   540                           
   541                           ;incstack = 0
   542                           ;data@b stored from wreg
   543   000792  6E01               	movwf	data@b^0,c
   544   000794                     
   545                           ;swl2.c: 105: void data(unsigned char b );swl2.c: 106: {;swl2.c: 107:     RC0=1;
   546   000794  8082               	bsf	3970,0,c	;volatile
   547                           
   548                           ;swl2.c: 108:     RC1=0;
   549   000796  9282               	bcf	3970,1,c	;volatile
   550   000798                     
   551                           ;swl2.c: 109:     PORTD=b;
   552   000798  C001  FF83         	movff	data@b,3971	;volatile
   553   00079C                     
   554                           ;swl2.c: 110:     RC2=1;
   555   00079C  8482               	bsf	3970,2,c	;volatile
   556   00079E                     
   557                           ;swl2.c: 111:     for(int i=0;i<=100;i++);
   558   00079E  0E00               	movlw	0
   559   0007A0  6E03               	movwf	(data@i+1)^0,c
   560   0007A2  0E00               	movlw	0
   561   0007A4  6E02               	movwf	data@i^0,c
   562   0007A6                     l760:
   563   0007A6  4A02               	infsnz	data@i^0,f,c
   564   0007A8  2A03               	incf	(data@i+1)^0,f,c
   565   0007AA  BE03               	btfsc	(data@i+1)^0,7,c
   566   0007AC  EFE1  F003         	goto	u11
   567   0007B0  5003               	movf	(data@i+1)^0,w,c
   568   0007B2  E109               	bnz	u10
   569   0007B4  0E65               	movlw	101
   570   0007B6  5C02               	subwf	data@i^0,w,c
   571   0007B8  A0D8               	btfss	status,0,c
   572   0007BA  EFE1  F003         	goto	u11
   573   0007BE  EFE3  F003         	goto	u10
   574   0007C2                     u11:
   575   0007C2  EFD3  F003         	goto	l760
   576   0007C6                     u10:
   577   0007C6                     
   578                           ;swl2.c: 112:     RC2=0;
   579   0007C6  9482               	bcf	3970,2,c	;volatile
   580   0007C8                     
   581                           ;swl2.c: 113:     for(int i=0;i<=5000;i++);
   582   0007C8  0E00               	movlw	0
   583   0007CA  6E05               	movwf	(data@i_63+1)^0,c
   584   0007CC  0E00               	movlw	0
   585   0007CE  6E04               	movwf	data@i_63^0,c
   586   0007D0                     l770:
   587   0007D0  4A04               	infsnz	data@i_63^0,f,c
   588   0007D2  2A05               	incf	(data@i_63+1)^0,f,c
   589   0007D4  BE05               	btfsc	(data@i_63+1)^0,7,c
   590   0007D6  EFF6  F003         	goto	u21
   591   0007DA  0E89               	movlw	137
   592   0007DC  5C04               	subwf	data@i_63^0,w,c
   593   0007DE  0E13               	movlw	19
   594   0007E0  5805               	subwfb	(data@i_63+1)^0,w,c
   595   0007E2  A0D8               	btfss	status,0,c
   596   0007E4  EFF6  F003         	goto	u21
   597   0007E8  EFF8  F003         	goto	u20
   598   0007EC                     u21:
   599   0007EC  EFE8  F003         	goto	l770
   600   0007F0                     u20:
   601   0007F0  0012               	return		;funcret
   602   0007F2                     __end_of_data:
   603                           	callstack 0
   604                           
   605 ;; *************** function _cmd *****************
   606 ;; Defined at:
   607 ;;		line 95 in file "swl2.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  a               1    wreg     unsigned char 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  a               1    0[COMRAM] unsigned char 
   612 ;;  i               2    3[COMRAM] int 
   613 ;;  i               2    1[COMRAM] int 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   623 ;;      Params:         0       0       0       0       0       0       0
   624 ;;      Locals:         5       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0
   626 ;;      Totals:         5       0       0       0       0       0       0
   627 ;;Total ram usage:        5 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text3
   637   0007F2                     __ptext3:
   638                           	callstack 0
   639   0007F2                     _cmd:
   640                           	callstack 30
   641                           
   642                           ;incstack = 0
   643                           ;cmd@a stored from wreg
   644   0007F2  6E01               	movwf	cmd@a^0,c
   645   0007F4                     
   646                           ;swl2.c: 95: void cmd(unsigned char a );swl2.c: 96: {;swl2.c: 97:     RC0=0;
   647   0007F4  9082               	bcf	3970,0,c	;volatile
   648                           
   649                           ;swl2.c: 98:     RC1=0;
   650   0007F6  9282               	bcf	3970,1,c	;volatile
   651   0007F8                     
   652                           ;swl2.c: 99:     PORTD=a;
   653   0007F8  C001  FF83         	movff	cmd@a,3971	;volatile
   654   0007FC                     
   655                           ;swl2.c: 100:     RC2=1;
   656   0007FC  8482               	bsf	3970,2,c	;volatile
   657   0007FE                     
   658                           ;swl2.c: 101:     for(int i=0;i<=100;i++);
   659   0007FE  0E00               	movlw	0
   660   000800  6E03               	movwf	(cmd@i+1)^0,c
   661   000802  0E00               	movlw	0
   662   000804  6E02               	movwf	cmd@i^0,c
   663   000806                     l786:
   664   000806  4A02               	infsnz	cmd@i^0,f,c
   665   000808  2A03               	incf	(cmd@i+1)^0,f,c
   666   00080A  BE03               	btfsc	(cmd@i+1)^0,7,c
   667   00080C  EF11  F004         	goto	u31
   668   000810  5003               	movf	(cmd@i+1)^0,w,c
   669   000812  E109               	bnz	u30
   670   000814  0E65               	movlw	101
   671   000816  5C02               	subwf	cmd@i^0,w,c
   672   000818  A0D8               	btfss	status,0,c
   673   00081A  EF11  F004         	goto	u31
   674   00081E  EF13  F004         	goto	u30
   675   000822                     u31:
   676   000822  EF03  F004         	goto	l786
   677   000826                     u30:
   678   000826                     
   679                           ;swl2.c: 102:     RC2=0;
   680   000826  9482               	bcf	3970,2,c	;volatile
   681   000828                     
   682                           ;swl2.c: 103:     for(int i=0;i<=5000;i++);
   683   000828  0E00               	movlw	0
   684   00082A  6E05               	movwf	(cmd@i_59+1)^0,c
   685   00082C  0E00               	movlw	0
   686   00082E  6E04               	movwf	cmd@i_59^0,c
   687   000830                     l796:
   688   000830  4A04               	infsnz	cmd@i_59^0,f,c
   689   000832  2A05               	incf	(cmd@i_59+1)^0,f,c
   690   000834  BE05               	btfsc	(cmd@i_59+1)^0,7,c
   691   000836  EF26  F004         	goto	u41
   692   00083A  0E89               	movlw	137
   693   00083C  5C04               	subwf	cmd@i_59^0,w,c
   694   00083E  0E13               	movlw	19
   695   000840  5805               	subwfb	(cmd@i_59+1)^0,w,c
   696   000842  A0D8               	btfss	status,0,c
   697   000844  EF26  F004         	goto	u41
   698   000848  EF28  F004         	goto	u40
   699   00084C                     u41:
   700   00084C  EF18  F004         	goto	l796
   701   000850                     u40:
   702   000850  0012               	return		;funcret
   703   000852                     __end_of_cmd:
   704                           	callstack 0
   705                           
   706                           	psect	rparam
   707   000000                     tosu	equ	0xFFF
   708                           tosh	equ	0xFFE
   709                           tosl	equ	0xFFD
   710                           stkptr	equ	0xFFC
   711                           pclatu	equ	0xFFB
   712                           pclath	equ	0xFFA
   713                           pcl	equ	0xFF9
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           prodh	equ	0xFF4
   719                           prodl	equ	0xFF3
   720                           indf0	equ	0xFEF
   721                           postinc0	equ	0xFEE
   722                           postdec0	equ	0xFED
   723                           preinc0	equ	0xFEC
   724                           plusw0	equ	0xFEB
   725                           fsr0h	equ	0xFEA
   726                           fsr0l	equ	0xFE9
   727                           wreg	equ	0xFE8
   728                           indf1	equ	0xFE7
   729                           postinc1	equ	0xFE6
   730                           postdec1	equ	0xFE5
   731                           preinc1	equ	0xFE4
   732                           plusw1	equ	0xFE3
   733                           fsr1h	equ	0xFE2
   734                           fsr1l	equ	0xFE1
   735                           bsr	equ	0xFE0
   736                           indf2	equ	0xFDF
   737                           postinc2	equ	0xFDE
   738                           postdec2	equ	0xFDD
   739                           preinc2	equ	0xFDC
   740                           plusw2	equ	0xFDB
   741                           fsr2h	equ	0xFDA
   742                           fsr2l	equ	0xFD9
   743                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[10]), STR_2(CODE[14]), STR_3(CODE[5]), STR_4(CODE[10]), 
		 -> STR_5(CODE[14]), STR_6(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     832
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     576
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 18:01:44 2024

                     l40 078A                       l32 0668                       l42 070E  
                     l36 06E4                       l63 07C6                       l56 0826  
                     l72 087C                       l66 07F0                       l59 0850  
                     u10 07C6                       u11 07C2                       u20 07F0  
                     u21 07EC                       u30 0826                       u31 0822  
                     u40 0850                       u41 084C                      l900 0660  
                    l750 0798                      l910 0692                      l902 0664  
                    l760 07A6                      l752 079C                      l920 06D4  
                    l912 069E                      l904 0676                      l770 07D0  
                    l762 07AA                      l754 079E                      l930 070A  
                    l922 06D8                      l914 06B0                      l906 067C  
                    l780 07FE                      l772 07D4                      l764 07C8  
                    l748 0794                      l940 0744                      l932 071C  
                    l916 06B4                      l908 068E                      l924 06E4  
                    l790 0828                      l774 07F4                      l950 077E  
                    l942 0756                      l934 0722                      l926 06F2  
                    l918 06C0                      l776 07F8                      l880 0862  
                    l944 075A                      l936 0734                      l928 0706  
                    l786 0806                      l778 07FC                      l882 0864  
                    l946 0766                      l938 0738                      l890 062E  
                    l796 0830                      l788 080A                      l876 0852  
                    l948 077A                      l892 0634                      l884 0616  
                    l798 0834                      l878 0856                      l894 063A  
                    l886 0622                      l896 063E                      l888 0628  
                    l898 064C                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _RC4 7C14                      _RC5 7C15  
                    u200 0660                      u201 065C                      u210 0676  
                    u211 0672                      u300 077A                      u220 068E  
                    u301 0776                      u221 068A                      u230 06B0  
                    u231 06AC                      u240 06D4                      u241 06D0  
                    u250 06F2                      u251 06EE                      u180 087C  
                    u260 0706                      u181 0878                      u261 0702  
                    u270 071C                      u190 064C                      u271 0718  
                    u191 0648                      u280 0734                      u281 0730  
                    u290 0756                      u291 0752                      _cmd 07F2  
                   ?_cmd 0001                     STR_1 0605                     STR_2 0601  
                   STR_3 060F                     STR_4 0605                     STR_5 0601  
                   STR_6 060F                     _data 0792                     cmd@a 0001  
                   cmd@i 0002                     _main 0616                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTB 0F81                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
        __end_of_display 087E                    data@b 0001                    data@i 0002  
                  tablat 0FF5                    status 0FD8          __initialization 087E  
           __end_of_data 07F2             __end_of_main 0792                   ??_data 0001  
                 ??_main 0007            __activetblptr 0001                   isa$std 0001  
              ??_display 0007             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 087E            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 087E                  __ramtop 0600                  __ptext0 0616  
                __ptext1 0852                  __ptext2 0792                  __ptext3 07F2  
                cmd@i_59 0004                  _display 0852     end_of_initialization 087E  
    start_initialization 087E              __end_of_cmd 0852                 ?_display 0006  
            __smallconst 0600                main@count 0007                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_63 0004  
               isa$xinst 0000                 display@p 0006  
