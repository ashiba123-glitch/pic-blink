

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 20:00:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _RC5	set	31765
    53   000000                     _PORTB	set	3969
    54   000000                     _TRISB	set	3987
    55   000000                     _TRISC	set	3988
    56   000000                     _RC4	set	31764
    57   000000                     _TRISD	set	3989
    58   000000                     _PORTD	set	3971
    59                           
    60                           	psect	smallconst
    61   000600                     __psmallconst:
    62                           	callstack 0
    63   000600  00                 	db	0
    64   000601                     STR_2:
    65   000601  41                 	db	65	;'A'
    66   000602  4E                 	db	78	;'N'
    67   000603  54                 	db	84	;'T'
    68   000604  49                 	db	73	;'I'
    69   000605  43                 	db	67	;'C'
    70   000606  4C                 	db	76	;'L'
    71   000607  4F                 	db	79	;'O'
    72   000608  43                 	db	67	;'C'
    73   000609  4B                 	db	75	;'K'
    74   00060A  57                 	db	87	;'W'
    75   00060B  49                 	db	73	;'I'
    76   00060C  53                 	db	83	;'S'
    77   00060D  45                 	db	69	;'E'
    78   00060E  00                 	db	0
    79   00060F                     STR_3:
    80   00060F  53                 	db	83	;'S'
    81   000610  54                 	db	84	;'T'
    82   000611  4F                 	db	79	;'O'
    83   000612  50                 	db	80	;'P'
    84   000613  00                 	db	0
    85   000614  00                 	db	0	; dummy byte at the end
    86   000000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   0008C4                     __pcinit:
    91                           	callstack 0
    92   0008C4                     start_initialization:
    93                           	callstack 0
    94   0008C4                     __initialization:
    95                           	callstack 0
    96   0008C4                     end_of_initialization:
    97                           	callstack 0
    98   0008C4                     __end_of__initialization:
    99                           	callstack 0
   100   0008C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   101   0008C6  6EF8               	movwf	tblptru,c
   102   0008C8  0E06               	movlw	high __Lsmallconst
   103   0008CA  6EF7               	movwf	tblptrh,c
   104   0008CC  0100               	movlb	0
   105   0008CE  EF0B  F003         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     cmd@a:
   111                           	callstack 0
   112   000001                     data@b:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	1
   117   000002                     cmd@i:
   118                           	callstack 0
   119   000002                     data@i:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x1
   123   000002                     	ds	2
   124   000004                     cmd@i_60:
   125                           	callstack 0
   126   000004                     data@i_64:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x3
   130   000004                     	ds	2
   131   000006                     display@p:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x5
   135   000006                     	ds	1
   136   000007                     main@c1:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x6
   140   000007                     	ds	2
   141   000009                     main@c2:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x8
   145   000009                     	ds	2
   146                           
   147 ;;
   148 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   149 ;;
   150 ;; *************** function _main *****************
   151 ;; Defined at:
   152 ;;		line 14 in file "swl3.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;  c2              2    8[COMRAM] int 
   157 ;;  c1              2    6[COMRAM] int 
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   167 ;;      Params:         0       0       0       0       0       0       0
   168 ;;      Locals:         4       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0
   170 ;;      Totals:         4       0       0       0       0       0       0
   171 ;;Total ram usage:        4 bytes
   172 ;; Hardware stack levels required when called: 2
   173 ;; This function calls:
   174 ;;		_cmd
   175 ;;		_display
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182   000616                     __ptext0:
   183                           	callstack 0
   184   000616                     _main:
   185                           	callstack 29
   186   000616                     
   187                           ;swl3.c: 16:      TRISC=0X30;
   188   000616  0E30               	movlw	48
   189   000618  6E94               	movwf	148,c	;volatile
   190                           
   191                           ;swl3.c: 17:      TRISD=0X00;
   192   00061A  0E00               	movlw	0
   193   00061C  6E95               	movwf	149,c	;volatile
   194                           
   195                           ;swl3.c: 18:      TRISB=0X00;
   196   00061E  0E00               	movlw	0
   197   000620  6E93               	movwf	147,c	;volatile
   198   000622                     
   199                           ;swl3.c: 19:     cmd(0x01);
   200   000622  0E01               	movlw	1
   201   000624  EC1C  F004         	call	_cmd
   202   000628                     
   203                           ;swl3.c: 20:     cmd(0x0F);
   204   000628  0E0F               	movlw	15
   205   00062A  EC1C  F004         	call	_cmd
   206   00062E                     
   207                           ;swl3.c: 21:     cmd(0X82);
   208   00062E  0E82               	movlw	130
   209   000630  EC1C  F004         	call	_cmd
   210   000634                     
   211                           ;swl3.c: 22:     cmd(0X38);
   212   000634  0E38               	movlw	56
   213   000636  EC1C  F004         	call	_cmd
   214   00063A                     
   215                           ;swl3.c: 23:     cmd(0x0c);
   216   00063A  0E0C               	movlw	12
   217   00063C  EC1C  F004         	call	_cmd
   218   000640                     
   219                           ;swl3.c: 24:     cmd(0X18);
   220   000640  0E18               	movlw	24
   221   000642  EC1C  F004         	call	_cmd
   222   000646                     
   223                           ;swl3.c: 25:     cmd(0XC1);
   224   000646  0EC1               	movlw	193
   225   000648  EC1C  F004         	call	_cmd
   226   00064C                     
   227                           ;swl3.c: 26:     cmd(0X1C);
   228   00064C  0E1C               	movlw	28
   229   00064E  EC1C  F004         	call	_cmd
   230   000652                     
   231                           ;swl3.c: 27:     int c1=-1,c2=-1;
   232   000652  6807               	setf	main@c1^0,c
   233   000654  6808               	setf	(main@c1+1)^0,c
   234   000656  6809               	setf	main@c2^0,c
   235   000658  680A               	setf	(main@c2+1)^0,c
   236   00065A                     l916:
   237                           
   238                           ;swl3.c: 29: {;swl3.c: 30:      if(RC4==1)
   239   00065A  A882               	btfss	3970,4,c	;volatile
   240   00065C  EF32  F003         	goto	u191
   241   000660  EF34  F003         	goto	u190
   242   000664                     u191:
   243   000664  EF8C  F003         	goto	l944
   244   000668                     u190:
   245   000668                     
   246                           ;swl3.c: 31:         {;swl3.c: 32:             if(c1==2)
   247   000668  0E02               	movlw	2
   248   00066A  1807               	xorwf	main@c1^0,w,c
   249   00066C  1008               	iorwf	(main@c1+1)^0,w,c
   250   00066E  A4D8               	btfss	status,2,c
   251   000670  EF3C  F003         	goto	u201
   252   000674  EF3E  F003         	goto	u200
   253   000678                     u201:
   254   000678  EF40  F003         	goto	l922
   255   00067C                     u200:
   256   00067C                     
   257                           ;swl3.c: 33:             {;swl3.c: 34:                 c1=-1;
   258   00067C  6807               	setf	main@c1^0,c
   259   00067E  6808               	setf	(main@c1+1)^0,c
   260   000680                     l922:
   261                           
   262                           ;swl3.c: 36:             c1++;
   263   000680  4A07               	infsnz	main@c1^0,f,c
   264   000682  2A08               	incf	(main@c1+1)^0,f,c
   265   000684                     l32:
   266   000684  B882               	btfsc	3970,4,c	;volatile
   267   000686  EF47  F003         	goto	u211
   268   00068A  EF49  F003         	goto	u210
   269   00068E                     u211:
   270   00068E  EF42  F003         	goto	l32
   271   000692                     u210:
   272   000692                     
   273                           ;swl3.c: 38:             cmd(0x01);
   274   000692  0E01               	movlw	1
   275   000694  EC1C  F004         	call	_cmd
   276                           
   277                           ;swl3.c: 39:             cmd(0X82);
   278   000698  0E82               	movlw	130
   279   00069A  EC1C  F004         	call	_cmd
   280                           
   281                           ;swl3.c: 40:             cmd(0x38);
   282   00069E  0E38               	movlw	56
   283   0006A0  EC1C  F004         	call	_cmd
   284                           
   285                           ;swl3.c: 41:             cmd(0X18);
   286   0006A4  0E18               	movlw	24
   287   0006A6  EC1C  F004         	call	_cmd
   288                           
   289                           ;swl3.c: 42:             cmd(0X1C);
   290   0006AA  0E1C               	movlw	28
   291   0006AC  EC1C  F004         	call	_cmd
   292   0006B0                     
   293                           ;swl3.c: 43:      if(c1==0)
   294   0006B0  5007               	movf	main@c1^0,w,c
   295   0006B2  1008               	iorwf	(main@c1+1)^0,w,c
   296   0006B4  A4D8               	btfss	status,2,c
   297   0006B6  EF5F  F003         	goto	u221
   298   0006BA  EF61  F003         	goto	u220
   299   0006BE                     u221:
   300   0006BE  EF69  F003         	goto	l932
   301   0006C2                     u220:
   302   0006C2                     
   303                           ;swl3.c: 44:      {;swl3.c: 45:          PORTB=0X01;
   304   0006C2  0E01               	movlw	1
   305   0006C4  6E81               	movwf	129,c	;volatile
   306   0006C6                     
   307                           ;swl3.c: 46:          display("CLOCKWISE");
   308   0006C6  0E05               	movlw	low (STR_2+4)
   309   0006C8  6E06               	movwf	display@p^0,c
   310   0006CA  EC4C  F004         	call	_display	;wreg free
   311                           
   312                           ;swl3.c: 48:      }
   313   0006CE  EF8C  F003         	goto	l944
   314   0006D2                     l932:
   315   0006D2  0407               	decf	main@c1^0,w,c
   316   0006D4  1008               	iorwf	(main@c1+1)^0,w,c
   317   0006D6  A4D8               	btfss	status,2,c
   318   0006D8  EF70  F003         	goto	u231
   319   0006DC  EF72  F003         	goto	u230
   320   0006E0                     u231:
   321   0006E0  EF7A  F003         	goto	l938
   322   0006E4                     u230:
   323   0006E4                     
   324                           ;swl3.c: 50:             {;swl3.c: 51:           PORTB=0X02;
   325   0006E4  0E02               	movlw	2
   326   0006E6  6E81               	movwf	129,c	;volatile
   327   0006E8                     
   328                           ;swl3.c: 52:           display("ANTICLOCKWISE");
   329   0006E8  0E01               	movlw	low STR_2
   330   0006EA  6E06               	movwf	display@p^0,c
   331   0006EC  EC4C  F004         	call	_display	;wreg free
   332                           
   333                           ;swl3.c: 55: }
   334   0006F0  EF8C  F003         	goto	l944
   335   0006F4                     l938:
   336   0006F4  0E02               	movlw	2
   337   0006F6  1807               	xorwf	main@c1^0,w,c
   338   0006F8  1008               	iorwf	(main@c1+1)^0,w,c
   339   0006FA  A4D8               	btfss	status,2,c
   340   0006FC  EF82  F003         	goto	u241
   341   000700  EF84  F003         	goto	u240
   342   000704                     u241:
   343   000704  EF8C  F003         	goto	l36
   344   000708                     u240:
   345   000708                     
   346                           ;swl3.c: 57:       {;swl3.c: 58:           PORTB=0X03;
   347   000708  0E03               	movlw	3
   348   00070A  6E81               	movwf	129,c	;volatile
   349   00070C                     
   350                           ;swl3.c: 59:           display("STOP");
   351   00070C  0E0F               	movlw	low STR_3
   352   00070E  6E06               	movwf	display@p^0,c
   353   000710  EC4C  F004         	call	_display	;wreg free
   354   000714  EF8C  F003         	goto	l944
   355   000718                     l36:
   356   000718                     l944:
   357                           
   358                           ;swl3.c: 64:      {;swl3.c: 65:      if(RC5==1)
   359   000718  AA82               	btfss	3970,5,c	;volatile
   360   00071A  EF91  F003         	goto	u251
   361   00071E  EF93  F003         	goto	u250
   362   000722                     u251:
   363   000722  EF2D  F003         	goto	l916
   364   000726                     u250:
   365   000726                     
   366                           ;swl3.c: 66:         {;swl3.c: 67:             if(c2==2)
   367   000726  0E02               	movlw	2
   368   000728  1809               	xorwf	main@c2^0,w,c
   369   00072A  100A               	iorwf	(main@c2+1)^0,w,c
   370   00072C  A4D8               	btfss	status,2,c
   371   00072E  EF9B  F003         	goto	u261
   372   000732  EF9D  F003         	goto	u260
   373   000736                     u261:
   374   000736  EF9F  F003         	goto	l950
   375   00073A                     u260:
   376   00073A                     
   377                           ;swl3.c: 68:             {;swl3.c: 69:                 c2=-1;
   378   00073A  6809               	setf	main@c2^0,c
   379   00073C  680A               	setf	(main@c2+1)^0,c
   380   00073E                     l950:
   381                           
   382                           ;swl3.c: 71:             c2++;
   383   00073E  4A09               	infsnz	main@c2^0,f,c
   384   000740  2A0A               	incf	(main@c2+1)^0,f,c
   385   000742                     l42:
   386   000742  BA82               	btfsc	3970,5,c	;volatile
   387   000744  EFA6  F003         	goto	u271
   388   000748  EFA8  F003         	goto	u270
   389   00074C                     u271:
   390   00074C  EFA1  F003         	goto	l42
   391   000750                     u270:
   392   000750                     
   393                           ;swl3.c: 73:             cmd(0x01);
   394   000750  0E01               	movlw	1
   395   000752  EC1C  F004         	call	_cmd
   396                           
   397                           ;swl3.c: 75:             cmd(0X38);
   398   000756  0E38               	movlw	56
   399   000758  EC1C  F004         	call	_cmd
   400                           
   401                           ;swl3.c: 76:             cmd(0X18);
   402   00075C  0E18               	movlw	24
   403   00075E  EC1C  F004         	call	_cmd
   404                           
   405                           ;swl3.c: 77:             cmd(0XC1);
   406   000762  0EC1               	movlw	193
   407   000764  EC1C  F004         	call	_cmd
   408   000768                     
   409                           ;swl3.c: 79:             if(c2==0)
   410   000768  5009               	movf	main@c2^0,w,c
   411   00076A  100A               	iorwf	(main@c2+1)^0,w,c
   412   00076C  A4D8               	btfss	status,2,c
   413   00076E  EFBB  F003         	goto	u281
   414   000772  EFBD  F003         	goto	u280
   415   000776                     u281:
   416   000776  EFC5  F003         	goto	l960
   417   00077A                     u280:
   418   00077A                     
   419                           ;swl3.c: 80:      {;swl3.c: 81:          PORTB=0X04;
   420   00077A  0E04               	movlw	4
   421   00077C  6E81               	movwf	129,c	;volatile
   422   00077E                     
   423                           ;swl3.c: 82:          display("CLOCKWISE");
   424   00077E  0E05               	movlw	low (STR_2+4)
   425   000780  6E06               	movwf	display@p^0,c
   426   000782  EC4C  F004         	call	_display	;wreg free
   427                           
   428                           ;swl3.c: 84:      }
   429   000786  EF2D  F003         	goto	l916
   430   00078A                     l960:
   431   00078A  0409               	decf	main@c2^0,w,c
   432   00078C  100A               	iorwf	(main@c2+1)^0,w,c
   433   00078E  A4D8               	btfss	status,2,c
   434   000790  EFCC  F003         	goto	u291
   435   000794  EFCE  F003         	goto	u290
   436   000798                     u291:
   437   000798  EFD6  F003         	goto	l966
   438   00079C                     u290:
   439   00079C                     
   440                           ;swl3.c: 86:             {;swl3.c: 87:           PORTB=0X08;
   441   00079C  0E08               	movlw	8
   442   00079E  6E81               	movwf	129,c	;volatile
   443   0007A0                     
   444                           ;swl3.c: 88:           display("ANTICLOCKWISE");
   445   0007A0  0E01               	movlw	low STR_2
   446   0007A2  6E06               	movwf	display@p^0,c
   447   0007A4  EC4C  F004         	call	_display	;wreg free
   448                           
   449                           ;swl3.c: 91: }
   450   0007A8  EF2D  F003         	goto	l916
   451   0007AC                     l966:
   452   0007AC  0E02               	movlw	2
   453   0007AE  1809               	xorwf	main@c2^0,w,c
   454   0007B0  100A               	iorwf	(main@c2+1)^0,w,c
   455   0007B2  A4D8               	btfss	status,2,c
   456   0007B4  EFDE  F003         	goto	u301
   457   0007B8  EFE0  F003         	goto	u300
   458   0007BC                     u301:
   459   0007BC  EFE8  F003         	goto	l40
   460   0007C0                     u300:
   461   0007C0                     
   462                           ;swl3.c: 93:       {;swl3.c: 94:           PORTB=0X60;
   463   0007C0  0E60               	movlw	96
   464   0007C2  6E81               	movwf	129,c	;volatile
   465   0007C4                     
   466                           ;swl3.c: 95:           display("STOP");
   467   0007C4  0E0F               	movlw	low STR_3
   468   0007C6  6E06               	movwf	display@p^0,c
   469   0007C8  EC4C  F004         	call	_display	;wreg free
   470   0007CC  EF2D  F003         	goto	l916
   471   0007D0                     l40:
   472   0007D0  EF2D  F003         	goto	l916
   473   0007D4  EF00  F000         	goto	start
   474   0007D8                     __end_of_main:
   475                           	callstack 0
   476                           
   477 ;; *************** function _display *****************
   478 ;; Defined at:
   479 ;;		line 128 in file "swl3.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  p               1    5[COMRAM] PTR const unsigned char 
   482 ;;		 -> STR_6(5), STR_5(14), STR_4(10), STR_3(5), 
   483 ;;		 -> STR_2(14), STR_1(10), 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         1       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0
   498 ;;      Totals:         1       0       0       0       0       0       0
   499 ;;Total ram usage:        1 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 1
   502 ;; This function calls:
   503 ;;		_data
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text1
   510   000898                     __ptext1:
   511                           	callstack 0
   512   000898                     _display:
   513                           	callstack 29
   514   000898                     
   515                           ;swl3.c: 128: void display(const char *p);swl3.c: 129: {;swl3.c: 130:     while(*p)
   516   000898  EF55  F004         	goto	l892
   517   00089C                     l888:
   518                           
   519                           ;swl3.c: 131:     {;swl3.c: 132:         data(*p);
   520   00089C  C006  FFF6         	movff	display@p,tblptrl
   521   0008A0                     	if	0	;There is only one active tblptr byte
   522   0008A0                     	endif
   523   0008A0                     	if	0	;tblptru may be non-zero
   524   0008A0                     	endif
   525   0008A0                     	if	0	;tblptru may be non-zero
   526   0008A0                     	endif
   527   0008A0  0008               	tblrd		*
   528   0008A2  50F5               	movf	tablat,w,c
   529   0008A4  ECEC  F003         	call	_data
   530   0008A8                     
   531                           ;swl3.c: 133:     p++;
   532   0008A8  2A06               	incf	display@p^0,f,c
   533   0008AA                     l892:
   534                           
   535                           ;swl3.c: 130:     while(*p)
   536   0008AA  C006  FFF6         	movff	display@p,tblptrl
   537   0008AE                     	if	0	;There is only one active tblptr byte
   538   0008AE                     	endif
   539   0008AE                     	if	0	;tblptru may be non-zero
   540   0008AE                     	endif
   541   0008AE                     	if	0	;tblptru may be non-zero
   542   0008AE                     	endif
   543   0008AE  0008               	tblrd		*
   544   0008B0  50F5               	movf	tablat,w,c
   545   0008B2  0900               	iorlw	0
   546   0008B4  A4D8               	btfss	status,2,c
   547   0008B6  EF5F  F004         	goto	u181
   548   0008BA  EF61  F004         	goto	u180
   549   0008BE                     u181:
   550   0008BE  EF4E  F004         	goto	l888
   551   0008C2                     u180:
   552   0008C2  0012               	return		;funcret
   553   0008C4                     __end_of_display:
   554                           	callstack 0
   555                           
   556 ;; *************** function _data *****************
   557 ;; Defined at:
   558 ;;		line 117 in file "swl3.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  b               1    wreg     unsigned char 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  b               1    0[COMRAM] unsigned char 
   563 ;;  i               2    3[COMRAM] int 
   564 ;;  i               2    1[COMRAM] int 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   574 ;;      Params:         0       0       0       0       0       0       0
   575 ;;      Locals:         5       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0
   577 ;;      Totals:         5       0       0       0       0       0       0
   578 ;;Total ram usage:        5 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_display
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text2
   588   0007D8                     __ptext2:
   589                           	callstack 0
   590   0007D8                     _data:
   591                           	callstack 29
   592                           
   593                           ;incstack = 0
   594                           ;data@b stored from wreg
   595   0007D8  6E01               	movwf	data@b^0,c
   596   0007DA                     
   597                           ;swl3.c: 117: void data(unsigned char b );swl3.c: 118: {;swl3.c: 119:     RC0=1;
   598   0007DA  8082               	bsf	3970,0,c	;volatile
   599                           
   600                           ;swl3.c: 120:     RC1=0;
   601   0007DC  9282               	bcf	3970,1,c	;volatile
   602   0007DE                     
   603                           ;swl3.c: 121:     PORTD=b;
   604   0007DE  C001  FF83         	movff	data@b,3971	;volatile
   605   0007E2                     
   606                           ;swl3.c: 122:     RC2=1;
   607   0007E2  8482               	bsf	3970,2,c	;volatile
   608   0007E4                     
   609                           ;swl3.c: 123:     for(int i=0;i<=100;i++);
   610   0007E4  0E00               	movlw	0
   611   0007E6  6E03               	movwf	(data@i+1)^0,c
   612   0007E8  0E00               	movlw	0
   613   0007EA  6E02               	movwf	data@i^0,c
   614   0007EC                     l760:
   615   0007EC  4A02               	infsnz	data@i^0,f,c
   616   0007EE  2A03               	incf	(data@i+1)^0,f,c
   617   0007F0  BE03               	btfsc	(data@i+1)^0,7,c
   618   0007F2  EF04  F004         	goto	u11
   619   0007F6  5003               	movf	(data@i+1)^0,w,c
   620   0007F8  E109               	bnz	u10
   621   0007FA  0E65               	movlw	101
   622   0007FC  5C02               	subwf	data@i^0,w,c
   623   0007FE  A0D8               	btfss	status,0,c
   624   000800  EF04  F004         	goto	u11
   625   000804  EF06  F004         	goto	u10
   626   000808                     u11:
   627   000808  EFF6  F003         	goto	l760
   628   00080C                     u10:
   629   00080C                     
   630                           ;swl3.c: 124:     RC2=0;
   631   00080C  9482               	bcf	3970,2,c	;volatile
   632   00080E                     
   633                           ;swl3.c: 125:     for(int i=0;i<=5000;i++);
   634   00080E  0E00               	movlw	0
   635   000810  6E05               	movwf	(data@i_64+1)^0,c
   636   000812  0E00               	movlw	0
   637   000814  6E04               	movwf	data@i_64^0,c
   638   000816                     l770:
   639   000816  4A04               	infsnz	data@i_64^0,f,c
   640   000818  2A05               	incf	(data@i_64+1)^0,f,c
   641   00081A  BE05               	btfsc	(data@i_64+1)^0,7,c
   642   00081C  EF19  F004         	goto	u21
   643   000820  0E89               	movlw	137
   644   000822  5C04               	subwf	data@i_64^0,w,c
   645   000824  0E13               	movlw	19
   646   000826  5805               	subwfb	(data@i_64+1)^0,w,c
   647   000828  A0D8               	btfss	status,0,c
   648   00082A  EF19  F004         	goto	u21
   649   00082E  EF1B  F004         	goto	u20
   650   000832                     u21:
   651   000832  EF0B  F004         	goto	l770
   652   000836                     u20:
   653   000836  0012               	return		;funcret
   654   000838                     __end_of_data:
   655                           	callstack 0
   656                           
   657 ;; *************** function _cmd *****************
   658 ;; Defined at:
   659 ;;		line 107 in file "swl3.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  a               1    wreg     unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  a               1    0[COMRAM] unsigned char 
   664 ;;  i               2    3[COMRAM] int 
   665 ;;  i               2    1[COMRAM] int 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         0       0       0       0       0       0       0
   676 ;;      Locals:         5       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0
   678 ;;      Totals:         5       0       0       0       0       0       0
   679 ;;Total ram usage:        5 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text3
   689   000838                     __ptext3:
   690                           	callstack 0
   691   000838                     _cmd:
   692                           	callstack 30
   693                           
   694                           ;incstack = 0
   695                           ;cmd@a stored from wreg
   696   000838  6E01               	movwf	cmd@a^0,c
   697   00083A                     
   698                           ;swl3.c: 107: void cmd(unsigned char a );swl3.c: 108: {;swl3.c: 109:     RC0=0;
   699   00083A  9082               	bcf	3970,0,c	;volatile
   700                           
   701                           ;swl3.c: 110:     RC1=0;
   702   00083C  9282               	bcf	3970,1,c	;volatile
   703   00083E                     
   704                           ;swl3.c: 111:     PORTD=a;
   705   00083E  C001  FF83         	movff	cmd@a,3971	;volatile
   706   000842                     
   707                           ;swl3.c: 112:     RC2=1;
   708   000842  8482               	bsf	3970,2,c	;volatile
   709   000844                     
   710                           ;swl3.c: 113:     for(int i=0;i<=100;i++);
   711   000844  0E00               	movlw	0
   712   000846  6E03               	movwf	(cmd@i+1)^0,c
   713   000848  0E00               	movlw	0
   714   00084A  6E02               	movwf	cmd@i^0,c
   715   00084C                     l786:
   716   00084C  4A02               	infsnz	cmd@i^0,f,c
   717   00084E  2A03               	incf	(cmd@i+1)^0,f,c
   718   000850  BE03               	btfsc	(cmd@i+1)^0,7,c
   719   000852  EF34  F004         	goto	u31
   720   000856  5003               	movf	(cmd@i+1)^0,w,c
   721   000858  E109               	bnz	u30
   722   00085A  0E65               	movlw	101
   723   00085C  5C02               	subwf	cmd@i^0,w,c
   724   00085E  A0D8               	btfss	status,0,c
   725   000860  EF34  F004         	goto	u31
   726   000864  EF36  F004         	goto	u30
   727   000868                     u31:
   728   000868  EF26  F004         	goto	l786
   729   00086C                     u30:
   730   00086C                     
   731                           ;swl3.c: 114:     RC2=0;
   732   00086C  9482               	bcf	3970,2,c	;volatile
   733   00086E                     
   734                           ;swl3.c: 115:     for(int i=0;i<=5000;i++);
   735   00086E  0E00               	movlw	0
   736   000870  6E05               	movwf	(cmd@i_60+1)^0,c
   737   000872  0E00               	movlw	0
   738   000874  6E04               	movwf	cmd@i_60^0,c
   739   000876                     l796:
   740   000876  4A04               	infsnz	cmd@i_60^0,f,c
   741   000878  2A05               	incf	(cmd@i_60+1)^0,f,c
   742   00087A  BE05               	btfsc	(cmd@i_60+1)^0,7,c
   743   00087C  EF49  F004         	goto	u41
   744   000880  0E89               	movlw	137
   745   000882  5C04               	subwf	cmd@i_60^0,w,c
   746   000884  0E13               	movlw	19
   747   000886  5805               	subwfb	(cmd@i_60+1)^0,w,c
   748   000888  A0D8               	btfss	status,0,c
   749   00088A  EF49  F004         	goto	u41
   750   00088E  EF4B  F004         	goto	u40
   751   000892                     u41:
   752   000892  EF3B  F004         	goto	l796
   753   000896                     u40:
   754   000896  0012               	return		;funcret
   755   000898                     __end_of_cmd:
   756                           	callstack 0
   757                           
   758                           	psect	rparam
   759   000000                     tosu	equ	0xFFF
   760                           tosh	equ	0xFFE
   761                           tosl	equ	0xFFD
   762                           stkptr	equ	0xFFC
   763                           pclatu	equ	0xFFB
   764                           pclath	equ	0xFFA
   765                           pcl	equ	0xFF9
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           indf0	equ	0xFEF
   773                           postinc0	equ	0xFEE
   774                           postdec0	equ	0xFED
   775                           preinc0	equ	0xFEC
   776                           plusw0	equ	0xFEB
   777                           fsr0h	equ	0xFEA
   778                           fsr0l	equ	0xFE9
   779                           wreg	equ	0xFE8
   780                           indf1	equ	0xFE7
   781                           postinc1	equ	0xFE6
   782                           postdec1	equ	0xFE5
   783                           preinc1	equ	0xFE4
   784                           plusw1	equ	0xFE3
   785                           fsr1h	equ	0xFE2
   786                           fsr1l	equ	0xFE1
   787                           bsr	equ	0xFE0
   788                           indf2	equ	0xFDF
   789                           postinc2	equ	0xFDE
   790                           postdec2	equ	0xFDD
   791                           preinc2	equ	0xFDC
   792                           plusw2	equ	0xFDB
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[10]), STR_2(CODE[14]), STR_3(CODE[5]), STR_4(CODE[10]), 
		 -> STR_5(CODE[14]), STR_6(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     833
                                              6 COMRAM     4     4      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     576
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 20:00:10 2024

                     l40 07D0                       l32 0684                       l42 0742  
                     l36 0718                       l63 080C                       l56 086C  
                     l72 08C2                       l66 0836                       l59 0896  
                     u10 080C                       u11 0808                       u20 0836  
                     u21 0832                       u30 086C                       u31 0868  
                     u40 0896                       u41 0892                      l900 062E  
                    l750 07DE                      l910 064C                      l902 0634  
                    l760 07EC                      l752 07E2                      l920 067C  
                    l912 0652                      l904 063A                      l770 0816  
                    l762 07F0                      l754 07E4                      l930 06C6  
                    l922 0680                      l914 0656                      l906 0640  
                    l780 0844                      l772 081A                      l764 080E  
                    l748 07DA                      l940 0708                      l932 06D2  
                    l924 0692                      l916 065A                      l908 0646  
                    l790 086E                      l774 083A                      l950 073E  
                    l942 070C                      l934 06E4                      l926 06B0  
                    l918 0668                      l776 083E                      l960 078A  
                    l952 0750                      l936 06E8                      l928 06C2  
                    l944 0718                      l786 084C                      l778 0842  
                    l890 08A8                      l970 07C4                      l962 079C  
                    l954 0768                      l946 0726                      l938 06F4  
                    l796 0876                      l788 0850                      l892 08AA  
                    l964 07A0                      l956 077A                      l948 073A  
                    l798 087A                      l886 0898                      l966 07AC  
                    l958 077E                      l894 0616                      l888 089C  
                    l968 07C0                      l896 0622                      l898 0628  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _RC4 7C14                      _RC5 7C15                      u200 067C  
                    u201 0678                      u210 0692                      u211 068E  
                    u300 07C0                      u220 06C2                      u301 07BC  
                    u221 06BE                      u230 06E4                      u231 06E0  
                    u240 0708                      u241 0704                      u250 0726  
                    u251 0722                      u180 08C2                      u260 073A  
                    u181 08BE                      u261 0736                      u270 0750  
                    u190 0668                      u271 074C                      u191 0664  
                    u280 077A                      u281 0776                      u290 079C  
                    u291 0798                      _cmd 0838                     ?_cmd 0001  
                   STR_1 0605                     STR_2 0601                     STR_3 060F  
                   STR_4 0605                     STR_5 0601                     STR_6 060F  
                   _data 07D8                     cmd@a 0001                     cmd@i 0002  
                   _main 0616                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 08C4  
                  data@b 0001                    data@i 0002                    tablat 0FF5  
                  status 0FD8          __initialization 08C4             __end_of_data 0838  
           __end_of_main 07D8                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   isa$std 0001                   main@c1 0007  
                 main@c2 0009                ??_display 0007             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 08C4            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 08C4                  __ramtop 0600  
                __ptext0 0616                  cmd@i_60 0004                  __ptext1 0898  
                __ptext2 07D8                  __ptext3 0838                  _display 0898  
   end_of_initialization 08C4      start_initialization 08C4              __end_of_cmd 0898  
               ?_display 0006              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_64 0004  
               isa$xinst 0000                 display@p 0006  
