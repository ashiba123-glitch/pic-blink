

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 17:40:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RCREG	set	4014
    51   000000                     _TXREG	set	4013
    52   000000                     _SPBRG	set	4015
    53   000000                     _RC2	set	31762
    54   000000                     _RC1	set	31761
    55   000000                     _RCIF	set	31989
    56   000000                     _TRISC	set	3988
    57   000000                     _RC0	set	31760
    58   000000                     _RCSTA	set	4011
    59   000000                     _TXSTA	set	4012
    60   000000                     _TRISD	set	3989
    61   000000                     _TXIF	set	31988
    62   000000                     _BAUDCON	set	4024
    63   000000                     _PORTD	set	3971
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   000736                     __pcinit:
    69                           	callstack 0
    70   000736                     start_initialization:
    71                           	callstack 0
    72   000736                     __initialization:
    73                           	callstack 0
    74   000736                     end_of_initialization:
    75                           	callstack 0
    76   000736                     __end_of__initialization:
    77                           	callstack 0
    78   000736  0100               	movlb	0
    79   000738  EF61  F003         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82   000001                     __pcstackCOMRAM:
    83                           	callstack 0
    84   000001                     cmd@a:
    85                           	callstack 0
    86   000001                     data@a:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x0
    90   000001                     	ds	1
    91   000002                     cmd@i:
    92                           	callstack 0
    93   000002                     data@i:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x1
    97   000002                     	ds	2
    98   000004                     cmd@i_66:
    99                           	callstack 0
   100   000004                     data@i_70:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x3
   104   000004                     	ds	2
   105   000006                     
   106                           ; 1 bytes @ 0x5
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 15 in file "TRANSRECE.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   126 ;;      Params:         0       0       0       0       0       0       0
   127 ;;      Locals:         0       0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0
   129 ;;      Totals:         0       0       0       0       0       0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called: 2
   132 ;; This function calls:
   133 ;;		_cmd
   134 ;;		_reception
   135 ;;		_transmission
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142   0006C2                     __ptext0:
   143                           	callstack 0
   144   0006C2                     _main:
   145                           	callstack 29
   146   0006C2                     
   147                           ;TRANSRECE.c: 17:     TRISC=0X80;
   148   0006C2  0E80               	movlw	128
   149   0006C4  6E94               	movwf	148,c	;volatile
   150                           
   151                           ;TRANSRECE.c: 18:     TRISD=0X00;
   152   0006C6  0E00               	movlw	0
   153   0006C8  6E95               	movwf	149,c	;volatile
   154                           
   155                           ;TRANSRECE.c: 20:     TXSTA =0X24;
   156   0006CA  0E24               	movlw	36
   157   0006CC  6EAC               	movwf	172,c	;volatile
   158                           
   159                           ;TRANSRECE.c: 21:     RCSTA =0X90;
   160   0006CE  0E90               	movlw	144
   161   0006D0  6EAB               	movwf	171,c	;volatile
   162                           
   163                           ;TRANSRECE.c: 22:     SPBRG=129;
   164   0006D2  0E81               	movlw	129
   165   0006D4  6EAF               	movwf	175,c	;volatile
   166                           
   167                           ;TRANSRECE.c: 23:     BAUDCON=0X00;
   168   0006D6  0E00               	movlw	0
   169   0006D8  6EB8               	movwf	184,c	;volatile
   170   0006DA                     
   171                           ;TRANSRECE.c: 26:     cmd(0X01);
   172   0006DA  0E01               	movlw	1
   173   0006DC  EC31  F003         	call	_cmd
   174   0006E0                     
   175                           ;TRANSRECE.c: 27:     cmd(0X0F);
   176   0006E0  0E0F               	movlw	15
   177   0006E2  EC31  F003         	call	_cmd
   178   0006E6                     
   179                           ;TRANSRECE.c: 28:     cmd(0X38);
   180   0006E6  0E38               	movlw	56
   181   0006E8  EC31  F003         	call	_cmd
   182   0006EC                     
   183                           ;TRANSRECE.c: 29:     cmd(0X06);
   184   0006EC  0E06               	movlw	6
   185   0006EE  EC31  F003         	call	_cmd
   186   0006F2                     
   187                           ;TRANSRECE.c: 30:     cmd(0X80);
   188   0006F2  0E80               	movlw	128
   189   0006F4  EC31  F003         	call	_cmd
   190   0006F8                     l822:
   191                           
   192                           ;TRANSRECE.c: 34:     {;TRANSRECE.c: 35:     reception();
   193   0006F8  EC84  F003         	call	_reception	;wreg free
   194   0006FC                     
   195                           ;TRANSRECE.c: 36:     transmission ();
   196   0006FC  EC90  F003         	call	_transmission	;wreg free
   197   000700  EF7C  F003         	goto	l822
   198   000704  EF00  F000         	goto	start
   199   000708                     __end_of_main:
   200                           	callstack 0
   201                           
   202 ;; *************** function _transmission *****************
   203 ;; Defined at:
   204 ;;		line 40 in file "TRANSRECE.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		None
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   218 ;;      Params:         0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0       0       0
   221 ;;      Totals:         0       0       0       0       0       0       0
   222 ;;Total ram usage:        0 bytes
   223 ;; Hardware stack levels used: 1
   224 ;; This function calls:
   225 ;;		Nothing
   226 ;; This function is called by:
   227 ;;		_main
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text1
   232   000720                     __ptext1:
   233                           	callstack 0
   234   000720                     _transmission:
   235                           	callstack 30
   236   000720                     
   237                           ;TRANSRECE.c: 42:     TXREG=RCREG;
   238   000720  CFAE FFAD          	movff	4014,4013	;volatile
   239   000724                     l47:
   240   000724  A89E               	btfss	3998,4,c	;volatile
   241   000726  EF97  F003         	goto	u61
   242   00072A  EF99  F003         	goto	u60
   243   00072E                     u61:
   244   00072E  EF92  F003         	goto	l47
   245   000732                     u60:
   246   000732                     
   247                           ;TRANSRECE.c: 44:     TXIF=0;
   248   000732  989E               	bcf	3998,4,c	;volatile
   249   000734  0012               	return		;funcret
   250   000736                     __end_of_transmission:
   251                           	callstack 0
   252                           
   253 ;; *************** function _reception *****************
   254 ;; Defined at:
   255 ;;		line 48 in file "TRANSRECE.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		_data
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text2
   284   000708                     __ptext2:
   285                           	callstack 0
   286   000708                     _reception:
   287                           	callstack 29
   288   000708                     l53:
   289   000708  AA9E               	btfss	3998,5,c	;volatile
   290   00070A  EF89  F003         	goto	u51
   291   00070E  EF8B  F003         	goto	u50
   292   000712                     u51:
   293   000712  EF84  F003         	goto	l53
   294   000716                     u50:
   295   000716                     
   296                           ;TRANSRECE.c: 52: RCIF=0;
   297   000716  9A9E               	bcf	3998,5,c	;volatile
   298   000718                     
   299                           ;TRANSRECE.c: 53: data(RCREG);
   300   000718  50AE               	movf	174,w,c	;volatile
   301   00071A  EC01  F003         	call	_data
   302   00071E  0012               	return		;funcret
   303   000720                     __end_of_reception:
   304                           	callstack 0
   305                           
   306 ;; *************** function _data *****************
   307 ;; Defined at:
   308 ;;		line 66 in file "TRANSRECE.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  a               1    wreg     unsigned char 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  a               1    0[COMRAM] unsigned char 
   313 ;;  i               2    3[COMRAM] int 
   314 ;;  i               2    1[COMRAM] int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         0       0       0       0       0       0       0
   325 ;;      Locals:         5       0       0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0
   327 ;;      Totals:         5       0       0       0       0       0       0
   328 ;;Total ram usage:        5 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_reception
   334 ;;		_display
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text3
   339   000602                     __ptext3:
   340                           	callstack 0
   341   000602                     _data:
   342                           	callstack 29
   343                           
   344                           ;incstack = 0
   345                           ;data@a stored from wreg
   346   000602  6E01               	movwf	data@a^0,c
   347   000604                     
   348                           ;TRANSRECE.c: 66: void data(unsigned char a);TRANSRECE.c: 67: {;TRANSRECE.c: 68:     RC0
      +                          =1;
   349   000604  8082               	bsf	3970,0,c	;volatile
   350                           
   351                           ;TRANSRECE.c: 69:     RC1=0;
   352   000606  9282               	bcf	3970,1,c	;volatile
   353   000608                     
   354                           ;TRANSRECE.c: 70:     PORTD=a;
   355   000608  C001  FF83         	movff	data@a,3971	;volatile
   356   00060C                     
   357                           ;TRANSRECE.c: 71:     RC2=1;
   358   00060C  8482               	bsf	3970,2,c	;volatile
   359   00060E                     
   360                           ;TRANSRECE.c: 72:     for(int i=0;i<=100;i++);
   361   00060E  0E00               	movlw	0
   362   000610  6E03               	movwf	(data@i+1)^0,c
   363   000612  0E00               	movlw	0
   364   000614  6E02               	movwf	data@i^0,c
   365   000616                     l764:
   366   000616  4A02               	infsnz	data@i^0,f,c
   367   000618  2A03               	incf	(data@i+1)^0,f,c
   368   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   369   00061C  EF19  F003         	goto	u11
   370   000620  5003               	movf	(data@i+1)^0,w,c
   371   000622  E109               	bnz	u10
   372   000624  0E65               	movlw	101
   373   000626  5C02               	subwf	data@i^0,w,c
   374   000628  A0D8               	btfss	status,0,c
   375   00062A  EF19  F003         	goto	u11
   376   00062E  EF1B  F003         	goto	u10
   377   000632                     u11:
   378   000632  EF0B  F003         	goto	l764
   379   000636                     u10:
   380   000636                     
   381                           ;TRANSRECE.c: 73:     RC2=0;
   382   000636  9482               	bcf	3970,2,c	;volatile
   383   000638                     
   384                           ;TRANSRECE.c: 74:     for(int i=0;i<=5000;i++);
   385   000638  0E00               	movlw	0
   386   00063A  6E05               	movwf	(data@i_70+1)^0,c
   387   00063C  0E00               	movlw	0
   388   00063E  6E04               	movwf	data@i_70^0,c
   389   000640                     l774:
   390   000640  4A04               	infsnz	data@i_70^0,f,c
   391   000642  2A05               	incf	(data@i_70+1)^0,f,c
   392   000644  BE05               	btfsc	(data@i_70+1)^0,7,c
   393   000646  EF2E  F003         	goto	u21
   394   00064A  0E89               	movlw	137
   395   00064C  5C04               	subwf	data@i_70^0,w,c
   396   00064E  0E13               	movlw	19
   397   000650  5805               	subwfb	(data@i_70+1)^0,w,c
   398   000652  A0D8               	btfss	status,0,c
   399   000654  EF2E  F003         	goto	u21
   400   000658  EF30  F003         	goto	u20
   401   00065C                     u21:
   402   00065C  EF20  F003         	goto	l774
   403   000660                     u20:
   404   000660  0012               	return		;funcret
   405   000662                     __end_of_data:
   406                           	callstack 0
   407                           
   408 ;; *************** function _cmd *****************
   409 ;; Defined at:
   410 ;;		line 56 in file "TRANSRECE.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  a               1    wreg     unsigned char 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  a               1    0[COMRAM] unsigned char 
   415 ;;  i               2    3[COMRAM] int 
   416 ;;  i               2    1[COMRAM] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:         5       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0
   429 ;;      Totals:         5       0       0       0       0       0       0
   430 ;;Total ram usage:        5 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text4
   440   000662                     __ptext4:
   441                           	callstack 0
   442   000662                     _cmd:
   443                           	callstack 30
   444                           
   445                           ;incstack = 0
   446                           ;cmd@a stored from wreg
   447   000662  6E01               	movwf	cmd@a^0,c
   448   000664                     
   449                           ;TRANSRECE.c: 56:  void cmd(unsigned char a );TRANSRECE.c: 57: {;TRANSRECE.c: 58:     RC
      +                          0=0;
   450   000664  9082               	bcf	3970,0,c	;volatile
   451                           
   452                           ;TRANSRECE.c: 59:     RC1=0;
   453   000666  9282               	bcf	3970,1,c	;volatile
   454   000668                     
   455                           ;TRANSRECE.c: 60:     PORTD=a;
   456   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   457   00066C                     
   458                           ;TRANSRECE.c: 61:     RC2=1;
   459   00066C  8482               	bsf	3970,2,c	;volatile
   460   00066E                     
   461                           ;TRANSRECE.c: 62:     for(int i=0;i<=100;i++);
   462   00066E  0E00               	movlw	0
   463   000670  6E03               	movwf	(cmd@i+1)^0,c
   464   000672  0E00               	movlw	0
   465   000674  6E02               	movwf	cmd@i^0,c
   466   000676                     l790:
   467   000676  4A02               	infsnz	cmd@i^0,f,c
   468   000678  2A03               	incf	(cmd@i+1)^0,f,c
   469   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   470   00067C  EF49  F003         	goto	u31
   471   000680  5003               	movf	(cmd@i+1)^0,w,c
   472   000682  E109               	bnz	u30
   473   000684  0E65               	movlw	101
   474   000686  5C02               	subwf	cmd@i^0,w,c
   475   000688  A0D8               	btfss	status,0,c
   476   00068A  EF49  F003         	goto	u31
   477   00068E  EF4B  F003         	goto	u30
   478   000692                     u31:
   479   000692  EF3B  F003         	goto	l790
   480   000696                     u30:
   481   000696                     
   482                           ;TRANSRECE.c: 63:     RC2=0;
   483   000696  9482               	bcf	3970,2,c	;volatile
   484   000698                     
   485                           ;TRANSRECE.c: 64:     for(int i=0;i<=5000;i++);
   486   000698  0E00               	movlw	0
   487   00069A  6E05               	movwf	(cmd@i_66+1)^0,c
   488   00069C  0E00               	movlw	0
   489   00069E  6E04               	movwf	cmd@i_66^0,c
   490   0006A0                     l800:
   491   0006A0  4A04               	infsnz	cmd@i_66^0,f,c
   492   0006A2  2A05               	incf	(cmd@i_66+1)^0,f,c
   493   0006A4  BE05               	btfsc	(cmd@i_66+1)^0,7,c
   494   0006A6  EF5E  F003         	goto	u41
   495   0006AA  0E89               	movlw	137
   496   0006AC  5C04               	subwf	cmd@i_66^0,w,c
   497   0006AE  0E13               	movlw	19
   498   0006B0  5805               	subwfb	(cmd@i_66+1)^0,w,c
   499   0006B2  A0D8               	btfss	status,0,c
   500   0006B4  EF5E  F003         	goto	u41
   501   0006B8  EF60  F003         	goto	u40
   502   0006BC                     u41:
   503   0006BC  EF50  F003         	goto	l800
   504   0006C0                     u40:
   505   0006C0  0012               	return		;funcret
   506   0006C2                     __end_of_cmd:
   507                           	callstack 0
   508                           
   509                           	psect	smallconst
   510   000600                     __psmallconst:
   511                           	callstack 0
   512   000600  00                 	db	0
   513   000601  00                 	db	0	; dummy byte at the end
   514   000000                     
   515                           	psect	rparam
   516   000000                     tosu	equ	0xFFF
   517                           tosh	equ	0xFFE
   518                           tosl	equ	0xFFD
   519                           stkptr	equ	0xFFC
   520                           pclatu	equ	0xFFB
   521                           pclath	equ	0xFFA
   522                           pcl	equ	0xFF9
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           prodh	equ	0xFF4
   528                           prodl	equ	0xFF3
   529                           indf0	equ	0xFEF
   530                           postinc0	equ	0xFEE
   531                           postdec0	equ	0xFED
   532                           preinc0	equ	0xFEC
   533                           plusw0	equ	0xFEB
   534                           fsr0h	equ	0xFEA
   535                           fsr0l	equ	0xFE9
   536                           wreg	equ	0xFE8
   537                           indf1	equ	0xFE7
   538                           postinc1	equ	0xFE6
   539                           postdec1	equ	0xFE5
   540                           preinc1	equ	0xFE4
   541                           plusw1	equ	0xFE3
   542                           fsr1h	equ	0xFE2
   543                           fsr1l	equ	0xFE1
   544                           bsr	equ	0xFE0
   545                           indf2	equ	0xFDF
   546                           postinc2	equ	0xFDE
   547                           postdec2	equ	0xFDD
   548                           preinc2	equ	0xFDC
   549                           plusw2	equ	0xFDB
   550                           fsr2h	equ	0xFDA
   551                           fsr2l	equ	0xFD9
   552                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _reception->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _cmd
                          _reception
                       _transmission
 ---------------------------------------------------------------------------------
 (1) _transmission                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reception                                            0     0      0      75
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _reception
     _data
   _transmission

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhhh       47      0       0      16        0.0%
BITBIGSFRhhhl        8      0       0      17        0.0%
BITBIGSFRhlh         C      0       0      18        0.0%
BITBIGSFRhll         8      0       0      19        0.0%
BITBIGSFRlh         10      0       0      20        0.0%
BITBIGSFRll        282      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 17:40:08 2024

                     l50 0734                       l60 0696                       l53 0708  
                     l70 0660                       l63 06C0                       l55 0716  
                     l47 0724                       l56 071E                       l49 0732  
                     l67 0636                       u10 0636                       u11 0632  
                     u20 0660                       u21 065C                       u30 0696  
                     u31 0692                       u40 06C0                       u41 06BC  
                     u50 0716                       u51 0712                       u60 0732  
                     u61 072E                      l800 06A0                      l802 06A4  
                    l810 06C2                      l804 0708                      l820 06F2  
                    l812 06DA                      l806 0718                      l822 06F8  
                    l814 06E0                      l752 0604                      l808 0720  
                    l824 06FC                      l816 06E6                      l754 0608  
                    l818 06EC                      l780 0668                      l764 0616  
                    l756 060C                      l790 0676                      l782 066C  
                    l774 0640                      l766 061A                      l758 060E  
                    l792 067A                      l784 066E                      l776 0644  
                    l768 0638                      l794 0698                      l778 0664  
                    _RC0 7C10                      _RC1 7C11                      _RC2 7C12  
                    _cmd 0662                     ?_cmd 0001                     _RCIF 7CF5  
                   _TXIF 7CF4             _transmission 0720                     _data 0602  
                   cmd@a 0001                     cmd@i 0002                     _main 06C2  
                   start 0000             ___param_bank 0000                    ??_cmd 0001  
                  ?_data 0001                    ?_main 0001                    _RCREG 0FAE  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    _TXREG 0FAD  
                  _TXSTA 0FAC                    data@a 0001                    data@i 0002  
                  status 0FD8          __initialization 0736             __end_of_data 0662  
           __end_of_main 0708                   ??_data 0001                   ??_main 0006  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0736            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  _BAUDCON 0FB8                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0736  
                __ramtop 0600                  __ptext0 06C2                  __ptext1 0720  
                __ptext2 0708                  __ptext3 0602                  __ptext4 0662  
                cmd@i_66 0004        __end_of_reception 0720     end_of_initialization 0736  
    start_initialization 0736              __end_of_cmd 06C2            ?_transmission 0001  
         ??_transmission 0001              __smallconst 0600                _reception 0708  
             ?_reception 0001                 __Hrparam 0000                 __Lrparam 0000  
   __end_of_transmission 0736                 data@i_70 0004                 isa$xinst 0000  
            ??_reception 0006  
