

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 09:48:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _PORTB	set	3969
    53   000000                     _TRISB	set	3987
    54   000000                     _TRISC	set	3988
    55   000000                     _RC4	set	31764
    56   000000                     _TRISD	set	3989
    57   000000                     _PORTD	set	3971
    58                           
    59                           	psect	smallconst
    60   000600                     __psmallconst:
    61                           	callstack 0
    62   000600  00                 	db	0
    63   000601                     STR_2:
    64   000601  41                 	db	65	;'A'
    65   000602  4E                 	db	78	;'N'
    66   000603  54                 	db	84	;'T'
    67   000604  49                 	db	73	;'I'
    68   000605  43                 	db	67	;'C'
    69   000606  4C                 	db	76	;'L'
    70   000607  4F                 	db	79	;'O'
    71   000608  43                 	db	67	;'C'
    72   000609  4B                 	db	75	;'K'
    73   00060A  57                 	db	87	;'W'
    74   00060B  49                 	db	73	;'I'
    75   00060C  53                 	db	83	;'S'
    76   00060D  45                 	db	69	;'E'
    77   00060E  00                 	db	0
    78   00060F                     STR_3:
    79   00060F  53                 	db	83	;'S'
    80   000610  54                 	db	84	;'T'
    81   000611  4F                 	db	79	;'O'
    82   000612  50                 	db	80	;'P'
    83   000613  00                 	db	0
    84   000614  00                 	db	0	; dummy byte at the end
    85   000000                     
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89   0007CC                     __pcinit:
    90                           	callstack 0
    91   0007CC                     start_initialization:
    92                           	callstack 0
    93   0007CC                     __initialization:
    94                           	callstack 0
    95   0007CC                     end_of_initialization:
    96                           	callstack 0
    97   0007CC                     __end_of__initialization:
    98                           	callstack 0
    99   0007CC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   100   0007CE  6EF8               	movwf	tblptru,c
   101   0007D0  0E06               	movlw	high __Lsmallconst
   102   0007D2  6EF7               	movwf	tblptrh,c
   103   0007D4  0100               	movlb	0
   104   0007D6  EF0B  F003         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     cmd@a:
   110                           	callstack 0
   111   000001                     data@b:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x0
   115   000001                     	ds	1
   116   000002                     cmd@i:
   117                           	callstack 0
   118   000002                     data@i:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x1
   122   000002                     	ds	2
   123   000004                     cmd@i_55:
   124                           	callstack 0
   125   000004                     data@i_59:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x3
   129   000004                     	ds	2
   130   000006                     display@p:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x5
   134   000006                     	ds	1
   135   000007                     main@count:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x6
   139   000007                     	ds	2
   140                           
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 15 in file "swl.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;  count           2    6[COMRAM] int 
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   160 ;;      Params:         0       0       0       0       0       0       0
   161 ;;      Locals:         2       0       0       0       0       0       0
   162 ;;      Temps:          0       0       0       0       0       0       0
   163 ;;      Totals:         2       0       0       0       0       0       0
   164 ;;Total ram usage:        2 bytes
   165 ;; Hardware stack levels required when called: 2
   166 ;; This function calls:
   167 ;;		_cmd
   168 ;;		_display
   169 ;; This function is called by:
   170 ;;		Startup code after reset
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text0
   175   000616                     __ptext0:
   176                           	callstack 0
   177   000616                     _main:
   178                           	callstack 29
   179   000616                     
   180                           ;swl.c: 16:      TRISC=0X10;
   181   000616  0E10               	movlw	16
   182   000618  6E94               	movwf	148,c	;volatile
   183                           
   184                           ;swl.c: 17:      TRISD=0X00;
   185   00061A  0E00               	movlw	0
   186   00061C  6E95               	movwf	149,c	;volatile
   187                           
   188                           ;swl.c: 18:      TRISB=0X00;
   189   00061E  0E00               	movlw	0
   190   000620  6E93               	movwf	147,c	;volatile
   191   000622                     
   192                           ;swl.c: 19:     cmd(0x01);
   193   000622  0E01               	movlw	1
   194   000624  ECA0  F003         	call	_cmd
   195   000628                     
   196                           ;swl.c: 20:     cmd(0x0f);
   197   000628  0E0F               	movlw	15
   198   00062A  ECA0  F003         	call	_cmd
   199   00062E                     
   200                           ;swl.c: 21:     int count=-1;
   201   00062E  6807               	setf	main@count^0,c
   202   000630  6808               	setf	(main@count+1)^0,c
   203   000632                     l848:
   204                           
   205                           ;swl.c: 23: {;swl.c: 24:      if(RC4==1)
   206   000632  A882               	btfss	3970,4,c	;volatile
   207   000634  EF1E  F003         	goto	u131
   208   000638  EF20  F003         	goto	u130
   209   00063C                     u131:
   210   00063C  EF19  F003         	goto	l848
   211   000640                     u130:
   212   000640                     
   213                           ;swl.c: 25:         {;swl.c: 26:             if(count==2)
   214   000640  0E02               	movlw	2
   215   000642  1807               	xorwf	main@count^0,w,c
   216   000644  1008               	iorwf	(main@count+1)^0,w,c
   217   000646  A4D8               	btfss	status,2,c
   218   000648  EF28  F003         	goto	u141
   219   00064C  EF2A  F003         	goto	u140
   220   000650                     u141:
   221   000650  EF2C  F003         	goto	l854
   222   000654                     u140:
   223   000654                     
   224                           ;swl.c: 27:             {;swl.c: 28:                 count=-1;
   225   000654  6807               	setf	main@count^0,c
   226   000656  6808               	setf	(main@count+1)^0,c
   227   000658                     l854:
   228                           
   229                           ;swl.c: 30:             count++;
   230   000658  4A07               	infsnz	main@count^0,f,c
   231   00065A  2A08               	incf	(main@count+1)^0,f,c
   232   00065C                     l30:
   233   00065C  B882               	btfsc	3970,4,c	;volatile
   234   00065E  EF33  F003         	goto	u151
   235   000662  EF35  F003         	goto	u150
   236   000666                     u151:
   237   000666  EF2E  F003         	goto	l30
   238   00066A                     u150:
   239   00066A                     
   240                           ;swl.c: 32:             cmd(0x01);
   241   00066A  0E01               	movlw	1
   242   00066C  ECA0  F003         	call	_cmd
   243   000670                     
   244                           ;swl.c: 33:      if(count==0)
   245   000670  5007               	movf	main@count^0,w,c
   246   000672  1008               	iorwf	(main@count+1)^0,w,c
   247   000674  A4D8               	btfss	status,2,c
   248   000676  EF3F  F003         	goto	u161
   249   00067A  EF41  F003         	goto	u160
   250   00067E                     u161:
   251   00067E  EF49  F003         	goto	l864
   252   000682                     u160:
   253   000682                     
   254                           ;swl.c: 34:      {;swl.c: 35:          PORTB=0X01;
   255   000682  0E01               	movlw	1
   256   000684  6E81               	movwf	129,c	;volatile
   257   000686                     
   258                           ;swl.c: 36:          display("CLOCKWISE");
   259   000686  0E05               	movlw	low (STR_2+4)
   260   000688  6E06               	movwf	display@p^0,c
   261   00068A  ECD0  F003         	call	_display	;wreg free
   262                           
   263                           ;swl.c: 38:      }
   264   00068E  EF19  F003         	goto	l848
   265   000692                     l864:
   266   000692  0407               	decf	main@count^0,w,c
   267   000694  1008               	iorwf	(main@count+1)^0,w,c
   268   000696  A4D8               	btfss	status,2,c
   269   000698  EF50  F003         	goto	u171
   270   00069C  EF52  F003         	goto	u170
   271   0006A0                     u171:
   272   0006A0  EF5A  F003         	goto	l870
   273   0006A4                     u170:
   274   0006A4                     
   275                           ;swl.c: 40:             {;swl.c: 41:           PORTB=0X02;
   276   0006A4  0E02               	movlw	2
   277   0006A6  6E81               	movwf	129,c	;volatile
   278   0006A8                     
   279                           ;swl.c: 42:           display("ANTICLOCKWISE");
   280   0006A8  0E01               	movlw	low STR_2
   281   0006AA  6E06               	movwf	display@p^0,c
   282   0006AC  ECD0  F003         	call	_display	;wreg free
   283                           
   284                           ;swl.c: 45: }
   285   0006B0  EF19  F003         	goto	l848
   286   0006B4                     l870:
   287   0006B4  0E02               	movlw	2
   288   0006B6  1807               	xorwf	main@count^0,w,c
   289   0006B8  1008               	iorwf	(main@count+1)^0,w,c
   290   0006BA  A4D8               	btfss	status,2,c
   291   0006BC  EF62  F003         	goto	u181
   292   0006C0  EF64  F003         	goto	u180
   293   0006C4                     u181:
   294   0006C4  EF6C  F003         	goto	l28
   295   0006C8                     u180:
   296   0006C8                     
   297                           ;swl.c: 47:       {;swl.c: 48:           PORTB=0X03;
   298   0006C8  0E03               	movlw	3
   299   0006CA  6E81               	movwf	129,c	;volatile
   300   0006CC                     
   301                           ;swl.c: 49:           display("STOP");
   302   0006CC  0E0F               	movlw	low STR_3
   303   0006CE  6E06               	movwf	display@p^0,c
   304   0006D0  ECD0  F003         	call	_display	;wreg free
   305   0006D4  EF19  F003         	goto	l848
   306   0006D8                     l28:
   307   0006D8  EF19  F003         	goto	l848
   308   0006DC  EF00  F000         	goto	start
   309   0006E0                     __end_of_main:
   310                           	callstack 0
   311                           
   312 ;; *************** function _display *****************
   313 ;; Defined at:
   314 ;;		line 78 in file "swl.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  p               1    5[COMRAM] PTR const unsigned char 
   317 ;;		 -> STR_3(5), STR_2(14), STR_1(10), 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   329 ;;      Params:         1       0       0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0
   332 ;;      Totals:         1       0       0       0       0       0       0
   333 ;;Total ram usage:        1 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; Hardware stack levels required when called: 1
   336 ;; This function calls:
   337 ;;		_data
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text1
   344   0007A0                     __ptext1:
   345                           	callstack 0
   346   0007A0                     _display:
   347                           	callstack 29
   348   0007A0                     
   349                           ;swl.c: 78: void display(const char *p);swl.c: 79: {;swl.c: 80:     while(*p)
   350   0007A0  EFD9  F003         	goto	l838
   351   0007A4                     l834:
   352                           
   353                           ;swl.c: 81:     {;swl.c: 82:         data(*p);
   354   0007A4  C006  FFF6         	movff	display@p,tblptrl
   355   0007A8                     	if	0	;There is only one active tblptr byte
   356   0007A8                     	endif
   357   0007A8                     	if	0	;tblptru may be non-zero
   358   0007A8                     	endif
   359   0007A8                     	if	0	;tblptru may be non-zero
   360   0007A8                     	endif
   361   0007A8  0008               	tblrd		*
   362   0007AA  50F5               	movf	tablat,w,c
   363   0007AC  EC70  F003         	call	_data
   364   0007B0                     
   365                           ;swl.c: 83: p++;
   366   0007B0  2A06               	incf	display@p^0,f,c
   367   0007B2                     l838:
   368                           
   369                           ;swl.c: 80:     while(*p)
   370   0007B2  C006  FFF6         	movff	display@p,tblptrl
   371   0007B6                     	if	0	;There is only one active tblptr byte
   372   0007B6                     	endif
   373   0007B6                     	if	0	;tblptru may be non-zero
   374   0007B6                     	endif
   375   0007B6                     	if	0	;tblptru may be non-zero
   376   0007B6                     	endif
   377   0007B6  0008               	tblrd		*
   378   0007B8  50F5               	movf	tablat,w,c
   379   0007BA  0900               	iorlw	0
   380   0007BC  A4D8               	btfss	status,2,c
   381   0007BE  EFE3  F003         	goto	u121
   382   0007C2  EFE5  F003         	goto	u120
   383   0007C6                     u121:
   384   0007C6  EFD2  F003         	goto	l834
   385   0007CA                     u120:
   386   0007CA  0012               	return		;funcret
   387   0007CC                     __end_of_display:
   388                           	callstack 0
   389                           
   390 ;; *************** function _data *****************
   391 ;; Defined at:
   392 ;;		line 67 in file "swl.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  b               1    wreg     unsigned char 
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  b               1    0[COMRAM] unsigned char 
   397 ;;  i               2    3[COMRAM] int 
   398 ;;  i               2    1[COMRAM] int 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         5       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0
   411 ;;      Totals:         5       0       0       0       0       0       0
   412 ;;Total ram usage:        5 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_display
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text2
   422   0006E0                     __ptext2:
   423                           	callstack 0
   424   0006E0                     _data:
   425                           	callstack 29
   426                           
   427                           ;incstack = 0
   428                           ;data@b stored from wreg
   429   0006E0  6E01               	movwf	data@b^0,c
   430   0006E2                     
   431                           ;swl.c: 67: void data(unsigned char b );swl.c: 68: {;swl.c: 69:     RC0=1;
   432   0006E2  8082               	bsf	3970,0,c	;volatile
   433                           
   434                           ;swl.c: 70:     RC1=0;
   435   0006E4  9282               	bcf	3970,1,c	;volatile
   436   0006E6                     
   437                           ;swl.c: 71:     PORTD=b;
   438   0006E6  C001  FF83         	movff	data@b,3971	;volatile
   439   0006EA                     
   440                           ;swl.c: 72:     RC2=1;
   441   0006EA  8482               	bsf	3970,2,c	;volatile
   442   0006EC                     
   443                           ;swl.c: 73:     for(int i=0;i<=100;i++);
   444   0006EC  0E00               	movlw	0
   445   0006EE  6E03               	movwf	(data@i+1)^0,c
   446   0006F0  0E00               	movlw	0
   447   0006F2  6E02               	movwf	data@i^0,c
   448   0006F4                     l748:
   449   0006F4  4A02               	infsnz	data@i^0,f,c
   450   0006F6  2A03               	incf	(data@i+1)^0,f,c
   451   0006F8  BE03               	btfsc	(data@i+1)^0,7,c
   452   0006FA  EF88  F003         	goto	u11
   453   0006FE  5003               	movf	(data@i+1)^0,w,c
   454   000700  E109               	bnz	u10
   455   000702  0E65               	movlw	101
   456   000704  5C02               	subwf	data@i^0,w,c
   457   000706  A0D8               	btfss	status,0,c
   458   000708  EF88  F003         	goto	u11
   459   00070C  EF8A  F003         	goto	u10
   460   000710                     u11:
   461   000710  EF7A  F003         	goto	l748
   462   000714                     u10:
   463   000714                     
   464                           ;swl.c: 74:     RC2=0;
   465   000714  9482               	bcf	3970,2,c	;volatile
   466   000716                     
   467                           ;swl.c: 75:     for(int i=0;i<=5000;i++);
   468   000716  0E00               	movlw	0
   469   000718  6E05               	movwf	(data@i_59+1)^0,c
   470   00071A  0E00               	movlw	0
   471   00071C  6E04               	movwf	data@i_59^0,c
   472   00071E                     l758:
   473   00071E  4A04               	infsnz	data@i_59^0,f,c
   474   000720  2A05               	incf	(data@i_59+1)^0,f,c
   475   000722  BE05               	btfsc	(data@i_59+1)^0,7,c
   476   000724  EF9D  F003         	goto	u21
   477   000728  0E89               	movlw	137
   478   00072A  5C04               	subwf	data@i_59^0,w,c
   479   00072C  0E13               	movlw	19
   480   00072E  5805               	subwfb	(data@i_59+1)^0,w,c
   481   000730  A0D8               	btfss	status,0,c
   482   000732  EF9D  F003         	goto	u21
   483   000736  EF9F  F003         	goto	u20
   484   00073A                     u21:
   485   00073A  EF8F  F003         	goto	l758
   486   00073E                     u20:
   487   00073E  0012               	return		;funcret
   488   000740                     __end_of_data:
   489                           	callstack 0
   490                           
   491 ;; *************** function _cmd *****************
   492 ;; Defined at:
   493 ;;		line 57 in file "swl.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  a               1    wreg     unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  a               1    0[COMRAM] unsigned char 
   498 ;;  i               2    3[COMRAM] int 
   499 ;;  i               2    1[COMRAM] int 
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   509 ;;      Params:         0       0       0       0       0       0       0
   510 ;;      Locals:         5       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0
   512 ;;      Totals:         5       0       0       0       0       0       0
   513 ;;Total ram usage:        5 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text3
   523   000740                     __ptext3:
   524                           	callstack 0
   525   000740                     _cmd:
   526                           	callstack 30
   527                           
   528                           ;incstack = 0
   529                           ;cmd@a stored from wreg
   530   000740  6E01               	movwf	cmd@a^0,c
   531   000742                     
   532                           ;swl.c: 57: void cmd(unsigned char a );swl.c: 58: {;swl.c: 59:     RC0=0;
   533   000742  9082               	bcf	3970,0,c	;volatile
   534                           
   535                           ;swl.c: 60:     RC1=0;
   536   000744  9282               	bcf	3970,1,c	;volatile
   537   000746                     
   538                           ;swl.c: 61:     PORTD=a;
   539   000746  C001  FF83         	movff	cmd@a,3971	;volatile
   540   00074A                     
   541                           ;swl.c: 62:     RC2=1;
   542   00074A  8482               	bsf	3970,2,c	;volatile
   543   00074C                     
   544                           ;swl.c: 63:     for(int i=0;i<=100;i++);
   545   00074C  0E00               	movlw	0
   546   00074E  6E03               	movwf	(cmd@i+1)^0,c
   547   000750  0E00               	movlw	0
   548   000752  6E02               	movwf	cmd@i^0,c
   549   000754                     l774:
   550   000754  4A02               	infsnz	cmd@i^0,f,c
   551   000756  2A03               	incf	(cmd@i+1)^0,f,c
   552   000758  BE03               	btfsc	(cmd@i+1)^0,7,c
   553   00075A  EFB8  F003         	goto	u31
   554   00075E  5003               	movf	(cmd@i+1)^0,w,c
   555   000760  E109               	bnz	u30
   556   000762  0E65               	movlw	101
   557   000764  5C02               	subwf	cmd@i^0,w,c
   558   000766  A0D8               	btfss	status,0,c
   559   000768  EFB8  F003         	goto	u31
   560   00076C  EFBA  F003         	goto	u30
   561   000770                     u31:
   562   000770  EFAA  F003         	goto	l774
   563   000774                     u30:
   564   000774                     
   565                           ;swl.c: 64:     RC2=0;
   566   000774  9482               	bcf	3970,2,c	;volatile
   567   000776                     
   568                           ;swl.c: 65:     for(int i=0;i<=5000;i++);
   569   000776  0E00               	movlw	0
   570   000778  6E05               	movwf	(cmd@i_55+1)^0,c
   571   00077A  0E00               	movlw	0
   572   00077C  6E04               	movwf	cmd@i_55^0,c
   573   00077E                     l784:
   574   00077E  4A04               	infsnz	cmd@i_55^0,f,c
   575   000780  2A05               	incf	(cmd@i_55+1)^0,f,c
   576   000782  BE05               	btfsc	(cmd@i_55+1)^0,7,c
   577   000784  EFCD  F003         	goto	u41
   578   000788  0E89               	movlw	137
   579   00078A  5C04               	subwf	cmd@i_55^0,w,c
   580   00078C  0E13               	movlw	19
   581   00078E  5805               	subwfb	(cmd@i_55+1)^0,w,c
   582   000790  A0D8               	btfss	status,0,c
   583   000792  EFCD  F003         	goto	u41
   584   000796  EFCF  F003         	goto	u40
   585   00079A                     u41:
   586   00079A  EFBF  F003         	goto	l784
   587   00079E                     u40:
   588   00079E  0012               	return		;funcret
   589   0007A0                     __end_of_cmd:
   590                           	callstack 0
   591                           
   592                           	psect	rparam
   593   000000                     tosu	equ	0xFFF
   594                           tosh	equ	0xFFE
   595                           tosl	equ	0xFFD
   596                           stkptr	equ	0xFFC
   597                           pclatu	equ	0xFFB
   598                           pclath	equ	0xFFA
   599                           pcl	equ	0xFF9
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           prodh	equ	0xFF4
   605                           prodl	equ	0xFF3
   606                           indf0	equ	0xFEF
   607                           postinc0	equ	0xFEE
   608                           postdec0	equ	0xFED
   609                           preinc0	equ	0xFEC
   610                           plusw0	equ	0xFEB
   611                           fsr0h	equ	0xFEA
   612                           fsr0l	equ	0xFE9
   613                           wreg	equ	0xFE8
   614                           indf1	equ	0xFE7
   615                           postinc1	equ	0xFE6
   616                           postdec1	equ	0xFE5
   617                           preinc1	equ	0xFE4
   618                           plusw1	equ	0xFE3
   619                           fsr1h	equ	0xFE2
   620                           fsr1l	equ	0xFE1
   621                           bsr	equ	0xFE0
   622                           indf2	equ	0xFDF
   623                           postinc2	equ	0xFDE
   624                           postdec2	equ	0xFDD
   625                           preinc2	equ	0xFDC
   626                           plusw2	equ	0xFDB
   627                           fsr2h	equ	0xFDA
   628                           fsr2l	equ	0xFD9
   629                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[10]), STR_2(CODE[14]), STR_3(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     514
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     348
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 09:48:57 2024

                     l30 065C                       l51 0714                       l44 0774  
                     l60 07CA                       l28 06D8                       l54 073E  
                     l47 079E                       u10 0714                       u11 0710  
                     u20 073E                       u21 073A                       u30 0774  
                     u31 0770                       u40 079E                       u41 079A  
                    l740 06EA                      l750 06F8                      l742 06EC  
                    l760 0722                      l752 0716                      l736 06E2  
                    l832 07A0                      l840 0616                      l762 0742  
                    l738 06E6                      l834 07A4                      l850 0640  
                    l842 0622                      l764 0746                      l748 06F4  
                    l836 07B0                      l860 0682                      l852 0654  
                    l844 0628                      l774 0754                      l766 074A  
                    l758 071E                      l838 07B2                      l870 06B4  
                    l862 0686                      l854 0658                      l846 062E  
                    l784 077E                      l776 0758                      l768 074C  
                    l872 06C8                      l864 0692                      l856 066A  
                    l848 0632                      l786 0782                      l778 0776  
                    l874 06CC                      l866 06A4                      l858 0670  
                    l868 06A8                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _RC4 7C14                      u120 07CA  
                    u121 07C6                      u130 0640                      u131 063C  
                    u140 0654                      u141 0650                      u150 066A  
                    u151 0666                      u160 0682                      u161 067E  
                    u170 06A4                      u171 06A0                      u180 06C8  
                    u181 06C4                      _cmd 0740                     ?_cmd 0001  
                   STR_1 0605                     STR_2 0601                     STR_3 060F  
                   _data 06E0                     cmd@a 0001                     cmd@i 0002  
                   _main 0616                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 07CC  
                  data@b 0001                    data@i 0002                    tablat 0FF5  
                  status 0FD8          __initialization 07CC             __end_of_data 0740  
           __end_of_main 06E0                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   isa$std 0001                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 07CC  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 07CC  
                __ramtop 0600                  __ptext0 0616                  __ptext1 07A0  
                __ptext2 06E0                  __ptext3 0740                  cmd@i_55 0004  
                _display 07A0     end_of_initialization 07CC      start_initialization 07CC  
            __end_of_cmd 07A0                 ?_display 0006              __smallconst 0600  
              main@count 0007                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_59 0004                 isa$xinst 0000  
               display@p 0006  
