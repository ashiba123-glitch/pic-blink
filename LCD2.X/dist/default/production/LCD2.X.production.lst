

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 02 10:06:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _RC2	set	31762
    48   000000                     _RC1	set	31761
    49   000000                     _TRISC	set	3988
    50   000000                     _RC0	set	31760
    51   000000                     _TRISD	set	3989
    52   000000                     _PORTD	set	3971
    53                           
    54                           ; #config settings
    55                           
    56                           	psect	cinit
    57   00067A                     __pcinit:
    58                           	callstack 0
    59   00067A                     start_initialization:
    60                           	callstack 0
    61   00067A                     __initialization:
    62                           	callstack 0
    63   00067A                     end_of_initialization:
    64                           	callstack 0
    65   00067A                     __end_of__initialization:
    66                           	callstack 0
    67   00067A  0100               	movlb	0
    68   00067C  EF31  F003         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71   000001                     __pcstackCOMRAM:
    72                           	callstack 0
    73   000001                     data@a:
    74                           	callstack 0
    75                           
    76                           ; 1 bytes @ 0x0
    77   000001                     	ds	1
    78   000002                     data@i:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x1
    82   000002                     	ds	2
    83   000004                     data@i_43:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x3
    87   000004                     	ds	2
    88   000006                     
    89                           ; 1 bytes @ 0x5
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 12 in file "WITHFUNCTIONLCD.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   109 ;;      Params:         0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0
   111 ;;      Temps:          0       0       0       0       0       0       0
   112 ;;      Totals:         0       0       0       0       0       0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels required when called: 1
   115 ;; This function calls:
   116 ;;		_data
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text0
   123   000662                     __ptext0:
   124                           	callstack 0
   125   000662                     _main:
   126                           	callstack 30
   127   000662                     
   128                           ;WITHFUNCTIONLCD.c: 14: TRISC=TRISD=0X00;
   129   000662  0E00               	movlw	0
   130   000664  6E95               	movwf	149,c	;volatile
   131   000666  CF95 FF94          	movff	3989,3988	;volatile
   132   00066A                     
   133                           ;WITHFUNCTIONLCD.c: 15: data(0x01);
   134   00066A  0E01               	movlw	1
   135   00066C  EC01  F003         	call	_data
   136   000670                     
   137                           ;WITHFUNCTIONLCD.c: 16: data(0X0F);
   138   000670  0E0F               	movlw	15
   139   000672  EC01  F003         	call	_data
   140   000676  EF00  F000         	goto	start
   141   00067A                     __end_of_main:
   142                           	callstack 0
   143                           
   144 ;; *************** function _data *****************
   145 ;; Defined at:
   146 ;;		line 19 in file "WITHFUNCTIONLCD.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;  a               1    wreg     unsigned char 
   149 ;; Auto vars:     Size  Location     Type
   150 ;;  a               1    0[COMRAM] unsigned char 
   151 ;;  i               2    3[COMRAM] int 
   152 ;;  i               2    1[COMRAM] int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   162 ;;      Params:         0       0       0       0       0       0       0
   163 ;;      Locals:         5       0       0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0
   165 ;;      Totals:         5       0       0       0       0       0       0
   166 ;;Total ram usage:        5 bytes
   167 ;; Hardware stack levels used: 1
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176   000602                     __ptext1:
   177                           	callstack 0
   178   000602                     _data:
   179                           	callstack 30
   180                           
   181                           ;incstack = 0
   182                           ;data@a stored from wreg
   183   000602  6E01               	movwf	data@a^0,c
   184   000604                     
   185                           ;WITHFUNCTIONLCD.c: 19: void data (unsigned char a);WITHFUNCTIONLCD.c: 20: {;WITHFUNCTIO
      +                          NLCD.c: 21: RC0=0;
   186   000604  9082               	bcf	3970,0,c	;volatile
   187                           
   188                           ;WITHFUNCTIONLCD.c: 22: RC1=0;
   189   000606  9282               	bcf	3970,1,c	;volatile
   190   000608                     
   191                           ;WITHFUNCTIONLCD.c: 23: PORTD=a;
   192   000608  C001  FF83         	movff	data@a,3971	;volatile
   193   00060C                     
   194                           ;WITHFUNCTIONLCD.c: 24: RC2=1;
   195   00060C  8482               	bsf	3970,2,c	;volatile
   196   00060E                     
   197                           ;WITHFUNCTIONLCD.c: 25:     for(int i=0;i<100;i++);
   198   00060E  0E00               	movlw	0
   199   000610  6E03               	movwf	(data@i+1)^0,c
   200   000612  0E00               	movlw	0
   201   000614  6E02               	movwf	data@i^0,c
   202   000616                     l714:
   203   000616  4A02               	infsnz	data@i^0,f,c
   204   000618  2A03               	incf	(data@i+1)^0,f,c
   205   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   206   00061C  EF19  F003         	goto	u11
   207   000620  5003               	movf	(data@i+1)^0,w,c
   208   000622  E109               	bnz	u10
   209   000624  0E64               	movlw	100
   210   000626  5C02               	subwf	data@i^0,w,c
   211   000628  A0D8               	btfss	status,0,c
   212   00062A  EF19  F003         	goto	u11
   213   00062E  EF1B  F003         	goto	u10
   214   000632                     u11:
   215   000632  EF0B  F003         	goto	l714
   216   000636                     u10:
   217   000636                     
   218                           ;WITHFUNCTIONLCD.c: 26:     RC2=0;
   219   000636  9482               	bcf	3970,2,c	;volatile
   220   000638                     
   221                           ;WITHFUNCTIONLCD.c: 27:     for(int i=0;i<5000;i++);
   222   000638  0E00               	movlw	0
   223   00063A  6E05               	movwf	(data@i_43+1)^0,c
   224   00063C  0E00               	movlw	0
   225   00063E  6E04               	movwf	data@i_43^0,c
   226   000640                     l724:
   227   000640  4A04               	infsnz	data@i_43^0,f,c
   228   000642  2A05               	incf	(data@i_43+1)^0,f,c
   229   000644  BE05               	btfsc	(data@i_43+1)^0,7,c
   230   000646  EF2E  F003         	goto	u21
   231   00064A  0E88               	movlw	136
   232   00064C  5C04               	subwf	data@i_43^0,w,c
   233   00064E  0E13               	movlw	19
   234   000650  5805               	subwfb	(data@i_43+1)^0,w,c
   235   000652  A0D8               	btfss	status,0,c
   236   000654  EF2E  F003         	goto	u21
   237   000658  EF30  F003         	goto	u20
   238   00065C                     u21:
   239   00065C  EF20  F003         	goto	l724
   240   000660                     u20:
   241   000660  0012               	return		;funcret
   242   000662                     __end_of_data:
   243                           	callstack 0
   244                           
   245                           	psect	smallconst
   246   000600                     __psmallconst:
   247                           	callstack 0
   248   000600  00                 	db	0
   249   000601  00                 	db	0	; dummy byte at the end
   250   000000                     
   251                           	psect	rparam
   252   000000                     tosu	equ	0xFFF
   253                           tosh	equ	0xFFE
   254                           tosl	equ	0xFFD
   255                           stkptr	equ	0xFFC
   256                           pclatu	equ	0xFFB
   257                           pclath	equ	0xFFA
   258                           pcl	equ	0xFF9
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           prodh	equ	0xFF4
   264                           prodl	equ	0xFF3
   265                           indf0	equ	0xFEF
   266                           postinc0	equ	0xFEE
   267                           postdec0	equ	0xFED
   268                           preinc0	equ	0xFEC
   269                           plusw0	equ	0xFEB
   270                           fsr0h	equ	0xFEA
   271                           fsr0l	equ	0xFE9
   272                           wreg	equ	0xFE8
   273                           indf1	equ	0xFE7
   274                           postinc1	equ	0xFE6
   275                           postdec1	equ	0xFE5
   276                           preinc1	equ	0xFE4
   277                           plusw1	equ	0xFE3
   278                           fsr1h	equ	0xFE2
   279                           fsr1l	equ	0xFE1
   280                           bsr	equ	0xFE0
   281                           indf2	equ	0xFDF
   282                           postinc2	equ	0xFDE
   283                           postdec2	equ	0xFDD
   284                           preinc2	equ	0xFDC
   285                           plusw2	equ	0xFDB
   286                           fsr2h	equ	0xFDA
   287                           fsr2l	equ	0xFD9
   288                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                               _data
 ---------------------------------------------------------------------------------
 (1) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 02 10:06:45 2024

                     l23 0636                       l26 0660                       l19 0676  
                     u10 0636                       u11 0632                       u20 0660  
                     u21 065C                      l702 0604                      l704 0608  
                    l714 0616                      l706 060C                      l730 066A  
                    l724 0640                      l716 061A                      l708 060E  
                    l732 0670                      l726 0644                      l718 0638  
                    l728 0662                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                     _data 0602                     _main 0662  
                   start 0000             ___param_bank 0000                    ?_data 0001  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    data@a 0001                    data@i 0002  
                  status 0FD8          __initialization 067A             __end_of_data 0662  
           __end_of_main 067A                   ??_data 0001                   ??_main 0006  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 067A            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 067A                  __ramtop 0600  
                __ptext0 0662                  __ptext1 0602     end_of_initialization 067A  
    start_initialization 067A              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 data@i_43 0004                 isa$xinst 0000  
